<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CFA Alternative Investment Notes]]></title>
    <url>%2FCFA_Alternative_investment%2F</url>
    <content type="text"><![CDATA[CFA Alternative investment NotesIntroduction to Alternative Investment Traditional and alternative investment comparisons: Investment underlying Position Traditional Public stock, bond, cash only Long position only Alternative Public stock, bond, cash, private stock, real estate, commodities, infrastructure, collectibles, patents etc. Long position, short position and leveraged position Characteristics of alternative investments: Illiquidity of underlying assets(difficult or take longer to change asset into cash) Narrow manager specialization(通常需要由专业PM进行) Low correlation with traditional investments(hedge risk and diversification) Less regulation and less transparency Limited and problematic historical data and risk(due to less transparency) Unique legal and tax consideration Categories of alternative investments: Investment vehicle: help customers to invest Hedge funds Private equity Investment underlying: Real estate(不动产) Commodity(大宗商品) Infrastructure(基建投资) Short or leverage position of traditional investment underlying Alternative investment strategy: Absolute return: Seek to generate returns independent of market returns($\beta$=0) No market index specified to beat(No benchmark) Performance object is set relatively to cash rate and inflation Market segmentation: There are many regulatory restriction on traditional investment such as limitation on the use of derivatives and investing foreign securities. These restriction leave market vacancy to alternative investment companies to use active investment to generate high $\alpha$ Concentrated portfolio: Concentrated investment among fewer securities, strategies or portfolio managers Resulting less diversification(higher risk) but potentially higher return Benefits of combining traditional investment and alternative investment: Diversification as alternative investment has low correlation with traditional market(smaller $\sigma$) Potentially higher return(greater $R_{p}$) Potentially higher Sharpe ratio = $\frac{R_{p}-rf}{\sigma}$ Risk consideration: Standard deviation may be a misleading measure of risk Valuation of alternative investment is based on estimate as there is no observable market price Sharpe ratio may be biased upward Investor should take into account downside risk and use Value at Risk(VaR) and Sortino ratio to measure risk Use of derivatives introduces extra risk Risk of portfolio managers underperform Hedge fund and private equity are less transparent Illiquidity Past returns and volatility may not be a good indication of future returns and volatility Correlations of tradition market and alternative market tends to be small in long term but may still be significant in short term. Common structure of partnership: Limited partner(LP): investors who understand risks associated with investments(本质上是投资者) General partner(GP): runs the fund and bears unlimited liability if anything goes wrong(本质上是fund manager) Hedge fund basics: Characteristics: Aggressively managed, heavily use of leverage and derivative Aimed at high return with few investment restrictions LP open to a limited number of investors who are able to make large investments Impose restrictions on redemptions(赎回): Lockup period(锁定期): a minimum period before investors are allowed to make withdraws Notice period(通知期): the amount of time to fulfill a redemption request after receiving request Hedge fund strategies: Event-driven strategy: seek profit from short-term event such as acquisition or reconstruction Merge arbitrage: long stock of the company being acquired and short stock of the acquiring company Distressed securities: focus on securities of companies either in or near bankruptcy e.g. 1. purchases fixed-income securities of the company trading at significant discount to bar ​ 2. buying senior debt and shorting junior debt or buying preferred stock and shorting ordinary stock ​ 3. short sell stock of the company near bankruptcy Activist shareholder: purchase sufficient equity to influence a company’s policy and direction(对冲基金作为积极股东,通常选择的公司是已经公开上市的) Special situation: focus only on companies that are currently engaged in restructuring activities but not M&amp;A or bankruptcy Relative value strategy: seek profit from pricing discrepancy between related securities Fixed income convertible arbitrage: seek mispricing between MV of convertible bond and MV of ordinary share after conversion(可转债市场价格低于转换后普通股的市场价格,有套利空间) Fixed income asset based: mispricing of Asset backed securities(ABS). If ABS is overpriced, short it. Vice Versa Fixed income general: 通过寻找两只债券之间周期性的规律(recursive pattern)来进行套利 Volatility: use option to go long or short market volatility Multi-strategy: look for opportunity within and across asset classes Macro strategy: seek profit from expected movements in economic variables influenced by major economic events(从宏观经济趋势中获利) Equity hedge strategy: Market neutral: maintain a net position that is neutral to market risk e.g. $\beta$=0 Fundamental growth: use fundamental analysis to recognize companies expected to have high growth&amp; Fundamental value: use fundamental analysis to recognize companies that are undervalued Quantitative directional: use technical analysis to identify overvalued and undervalued companies. Market climate should also be considered. Short bias: short overvalued companies Sector specific: exploits expertise in a particular sector Funds of hedge funds(FOF)(母基金): FOF holds a portfolio of other hedge funds and FOF itself is not necessarily a hedge funds Benefits: Make hedge funds accessible to smaller investors Further diversification GP of FOF(who is more expertise than most investor) to conduct due diligence Able to negotiate better redemption rules with hedge funds as a fund Possible access to closed hedge funds(hedge funds are closed but FOF is opened) Disadvantage: complex fee structure(higher fees) Hedge fund fee structure: Management fee: Must be paid regardless investment performance Calculated based on beginning-of-period or end-of-period assets under management(AUM) Incentive fee: Calculated based on realized profit Net of management fee: calculate incentive fee based on profit after paying management fee Net of management fee: calculate incentive fee based on profit before paying management fee Example: 2/20 structure means 2 percent of AUM as management fee and 20 percent of realized profit as incentive fee High water mark: incentive fees are only paid once. In other words, paid when AUM(net of management fee) is above the highest AUM previously recorded(只有比支付过激励费的最高点AUM还要高的部分才需要支付激励费). Example: 在period 1期末支付过一次incentive fee, high-water mark为期末的AUM. Period 2亏损所以不需要支付incentive fee, high-water mark仍是period 1期末AUM. Period 3盈利,在期末支付一次incentive fee, high-water mark为期末AUM Hurdle rate: Incentive fee is only earned if the fund achieves a specified return rate(hurdle rate) Hard hurdle rate: incentive fee is only paid on the part of earning excess of benchmark return(只为超过benchmark的那盈利部分支付激励费) Soft hurdle rate: incentive fee is paid on all earnings if return is above hurdle rate(如果超过了benchmark,所有盈利都需要支付激励费) Assume hard hurdle rate unless specified Hedge fund valuation: Valuation of liquid asset(with a market value): Common approach: use average quote = $\frac{bid\ price+ask\ price}{2}$ Conservative approach: use bid price for long position(因为多头将来会卖出,所以关心市场中买价) use ask price for short position(因为空头将来会买入,所以关心市场中卖价) Valuation of illiquid asset(without a reliable market value): compute MV using statistical models Reporting NAV: quoted market price Trading NAV: incorporates liquidity discount(考虑流动性折价后的NAV,例如一个基金NAV = 100, 卖一份的价格是100, 如果卖一万份,每份价格可能就只有90, 所以reporting NAV = 100, trading NAV = 90) Hedge fund due diligence: Investment strategy and process Source of competitive advantages Longevity(产品寿命;历史表现可否持续) Key person risk(PM reputation) Private equity basics: Definition: invests either in privately owned company or public company with the intent to take it private(上市公司私有化) Advantage: Higher overall return compared to public stock market Low correlation with traditional market(diversification) Disadvantage: PE do not regularly value their assets. It may lead to underestimate volatility and correlation of their assets Survivorship bias: only PE that may survive will stay in the index(只有好的私募可以留在指数,会使指数偏高) Backfill bias(回填偏差): excluding historical data for funds that are underperformed from the index(只有表现好的PE会被加入指数,导致指数偏高) Private equity fee structure: Committed capital: the amount that LPs have agreed to provide to the PE fund(similar to AUM) Management fees: calculated based on committed capital Incentive fees: Prohibiting distribution of incentive fees until LPs have received back their investment capital Setting up an escrow account(第三方托管账户) for a proportion of incentive fees Clawback provision: GP must return any distributed incentive fees until LPs have received initial investment and 80 percent of earnings(最后赎回清算时,如果之前先产生盈利(付了激励费),后产生亏损(没有退还)则必须根据总的净利润计算激励费,并退还多支付的激励费) Private equity strategies: Leverage buyouts(LBOs;杠杆收购): acquire public or private companies with a significant percentage of the purchase price financed through debt PE自己出一部分钱,剩下大部分钱从外面贷款,并用收购的公司作为抵押 Management buyouts: management team uses LBO to acquire the company they manage Management buy-ins: external management team uses LBO to acquire the company and replace existing management team Characteristics of attractive targets of LBO: undervalued stock price, current management team is willing to takeover(PE和内部管理层里应外合), strong and sustainable cash flow Venture capital: invest in private companies with high growth potential VC专注于投资早期,非上市公司 Angel investing(天使投资): provided at idea stage, fund is used to transform idea into business plan and assess market potential(通常天使投资由一个人提供而不是机构) Seed stage: fund is used to support product development and marketing(VC常在这个阶段进入) Early stage: fund is used to initiate commercial production and sales(用于制造而不是研究) Later stage: fund is used to expansion of production and increasing sales Mezzanine-stage: fund is used to prepare for IPO Development capital(发展资本): minority equity(PE作为少数股东) investment in mature firms looking for capital to expand or enter new markets etc. Distressed investing(危机投资): invest bond in mature companies in financial difficulties expecting their bond will increase in price in the future(投资濒临破产公司债券,期待将来债券涨价) Private equity valuation: Market/comparable approach: share price multiples, enterprise value multiples(Equity investment) Discount after-tax cash flow approach: DCF, DDM Asset-based approach: Equity = Asset - Liability Private equity exit strategy: PE must exit to turn earnings into realized profit Trade sale(同行出售): sale the company to a strategic buyer or a competitor IPO: can potentially make the highest earnings Recapitalization(资本结构重构): A company issues new debt to fund dividends to equity holders Equity = Asset - Liability, 借款分红导致equity总额变少,每股价格降低,相当于提前拿到了一部分出售股权的钱,变相实现套现离场 Not a true exit strategy as PE still hold stocks Popular strategy when interest is low and act as a prelude(前奏) of a later exit Secondary sales: sale company to another PE/investors Written-off/liquidation(破产清算) Private equity due diligence: Alignment of GP’s interest and that of LPs’ A well-planned exiting strategy Real estate investment: Reasons for investing real estate: Competitive long-term return driven by rent generation and capital appreciation(增值) Rent may be fixed for multiple years which lessen cash flow impact from economic shocks(许多年租金产生的现金流固定可以在金融危机时进行缓冲) Low correlation with the traditional market(Diversification) Inflation hedge as rent can be adjusted quickly according to inflation Forms of real estate investment: Debt Equity Private(Direct) Mortgages(个人贷款买房), construction lending(开发商借钱盖楼) Direct ownership of real estate(e.g. sole ownership, joint venture, real estate limited partnership) Public(Indirect) Mortgage-backed security(MBS) Shares in real estate corporations, shares in real estate investment trust(REIT) Real estate investment trust(REIT): obligate to distribute the majority(90 percent) of their income to shareholders to retain their regulatory tax-advantage status Real estate index: Appraisal index(评估指数): use estimates of value as inputs to indices. It is subjective and may understate volatility Repeat sales index: use repeat sales of properties to construct the indices. There is sample selection bias(如果一个不动产永远不被卖,它就永远不被计入指数) REIT index: use prices of public traded shares of REIT to construct indices Valuation method: Comparable sales approach: approximate value based on *recent sales of similar properties *and make necessary adjustments to compensate differences in location, age, condition etc. Income approach: discount future cash flow from property ownership(DDM) Cost approach: estimate value using replacement cost which is the value of land plus the cost of rebuilding using current construction costs and standards Risks of real estate investment; Highly influenced by national and global economic conditions Property development is subject to regulatory issues, construction delay, budget overruns etc.(这点是对于投资地产的开发商的潜在风险而不是投资者的风险) Real estate investment often leads to high leverage Infrastructure investments: Brownfield investment: invest in existing infrastructure assets Greenfield investment: invest in infrastructure assets that are under R&amp;D and to be constructed in the future(投资还在研发当中的基建) Forms of investment: Infrastructure are rarely invest directly and most investors will invest indirectly Public traded infrastructure securities e.g. Master Limited Partnership(MLP) Risks of infrastructure investment: Brownfield investment has lower risk and lower return Greenfield investment has higher risk and higher return Regulatory risk(政策监管的风险e.g.国家政策的改变) Commodity(大宗商品): Characteristics of commodity investment: Holding commodity incurs costs for transportation and storage Lower correlation with traditional market(diversification) Hedge against inflation(price of commodity must increase when there is a high inflation rate) Investment vehicle: Derivative(commodity futures) Commodity ETF Stocks of companies which have direct link to commodity(e.g.中国石油) Specialized fund in specific commodity sector Commodity futures: How to price a future commodity contract: Future price = spot price(1+r) + storage cost - convenience yield spot price: 现货价格 $r$: discounting rate Convenience yield: 现货相对于期货的好处(早拿到货的好处) Contango(期货溢价): future price &gt; spot price(there is little or no convenience yield) Backwardation(现货溢价): future price &lt; spot price(there is high convenience yield) Source of returns from investing futures: Collateral yield: interests earned from collateral which acts as deposit for future contracts Roll yield = spot price - future price = future price with settling date $T_{1}$ - future price with settling date $T_{2}$ Roll yield is positive in backwardation and negative in Contango Yield from changes in spot price Summary: percentage change in future price = percentage change in spot price + collateral yield + roll yield Example: $T_{1}$ $T_{2}$ Return Future price 10 12 20% Spot price 8 12 50% Assume collateral yield = 0 20% = 50% + roll yield Roll yield = -30% i.e. Contango which matches spot price &lt; future price at $T_{1}$]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>CFA</tag>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CFA Equity Investment Notes]]></title>
    <url>%2FCFA_Equity_investment%2F</url>
    <content type="text"><![CDATA[CFA Equity investment NotesMarket organization and structure Financial market function: Achieving entities’(corporates and individuals) needs: Saving and borrowing(债权融资) Raising entity capital(股权融资) Managing risk(derivatives, insurances etc.) Exchange assets(currency exchange etc.) Information-motivated trading: arbitrage by valuating the intrinsic value(IV) of an asset and identify whether it is overvalued(IV&lt;market value; short position) or undervalued(IV&gt;market value; long position) Determining equilibrium rates of return(均衡利率): the rate that equates the supply of fund to the demand of fund(当资金的供给等于需求时的利率) Capital allocation efficiency(资产合理配置): allocate capital to the most productive places(e.g. highest Sharpe ratio) Classification of financial markets: Based on delivery dates(根据交割日期分类): Spot market(现货市场): the market where delivery happens now Future market(期货市场): the market where delivery happens in the future Based on maturity of fixed income instruments: Money market(货币市场): debt instruments maturing within one year Capital market(资本市场): debt instruments maturing over one year Only make sense for fixed income instruments but not equity as all companies are assumed to be going concern(永续经营) Based on asset types(标的物): Traditional market: public traded debts and equities(公开交易且只可以做多), pooled investment vehicles(Funds) Alternative market: hedge funds, private equity, commodities, real estate securities, collectibles(收藏品) etc. 所有不属于Traditional market 均是 Alternative market Based on capital flow: Primary market: newly issued securities are sold by issuer to investors Secondary market: investors trade with each other Classification of financial assets based on asset characteristics: Security: Fixed income: bonds, repurchase agreement(repo), certificate of deposit(大额存单), convertible debts(可转债) Equity: common share, preferred shares, warrant(权证) Pooled investment vehicle: close-ended fund, open-ended fund, ETF, ABS(资产证券化), hedge fund Derivative contract: Financial derivative contract Physical derivative contract Classification of financial assets based on whether publicly traded: Public security: traded on exchanges or through dealers, subject to regulatory oversight Private security: not traded in public markets and not subject to regulations Repurchase agreement &amp; Reverse repurchase agreement: Repurchase agreement(Repo;央行先卖后买,市场现金先少后多): Central bank firstly sells national debt to the market so there is less cash in the market. A few days later(normally 15 days), central bank repurchase the national debt with a higher price. Cash is going back to the market. Central bank uses repo to adjust the amount of cash in the market Reverse repurchase agreement(Reverse repo;央行先买后卖,市场现金先多后少): Central bank firstly purchases national debt in the market with cash so there is more cash in the market. A few days later(normally 15 days), central bank sells the national debt back to the market. Cash is going back to the central bank. Central bank uses reverse repo to adjust the amount of cash in the market Warrant: owner of a warrant has the right to buy stock at a price specified by the issuer before a given date. It is a bit similar to warrant. Pooled investment vehicle: Open-end mutual fund(开放型公募基金): Investor can purchase shares of fund using cash and sell shares of fund(赎回) back to the fund company at net asset value(NAV) everyday Advantage: more liquidity than closed-end mutual fund Disadvantage: cash drag(基金公司不能将所有募集到的资金全部用于投资必须保留一部分作为给赎回基金的投资者的付款,因此没有最大化基金的收益) Closed-end mutual fund(封闭型公募基金): There is a lockdown period for closed-end mutual fund(5-10 years). Once issued, investors cannot sell shares of fund back to the fund company. Shares must be traded with cash at market price in the secondary market. The market price will be slightly lower than NAV due to the illiquidity. Advantage: no cash drag Disadvantage: illiquidity Exchange traded fund(ETF): Authorized participant uses a basket of stocks to exchange shares of ETF from fund company. Authorized participant then sells shares of ETF to investor with cash at the market price. Authorized participant can also use shares of ETF to exchange back to a basket of stocks. If NAV of a basket of stock &gt; market value of ETF, authorized participant will purchase ETF in the secondary market and exchange for stocks in order to arbitrage. Vice versa. Advantage: easy to trade, low management fees, tax deferring(only pay tax for realized income) Disadvantage: risk of illiquidity market, bid-ask spread(AP买卖差价) Financial intermediaries(金融媒介): Brokers(经纪人): help clients buy or sell securities by finding counterparties(对手盘). Only make commission and not involved in the trade. Block brokers(大宗经纪人): provide service to large traders(大宗交易者), the trade is outside the stock exchange Dealers(做市商): trade by buying for or selling from their own inventory of stocks. Make bid-ask spread and involved in the trade. Provide liquidity in the market. Broker-dealers: act as both broker and dealer, has a conflict of interests. It is because broker wish to sell stock at a higher price for more commission. However, as a dealer we wish the bid price to be as low as possible(同时作为经纪人和做市商即:自己给自己搭桥把别人要卖的股票自己买下) Primary dealers: trade with central bank when conducting monetary(货币) policy e.g. repo Arbitrageurs(套利商): buy and sell similar instruments at different prices in different markets. They move liquidity through markets Exchanges: provide places where trades can be arranged. Exchanges have regulatory authorities Alternative trading systems: same trading function as exchange but without regulatory authorities Investment banks: help clients arrange transactions like IPO and debt offering Securitizers(证券化商): buy assets and place them in a pool. Sell securities that represents ownership of the pool in the market e.g. ABS, MBS Clearinghouses(清算所): guarantee derivative performance(确保衍生品合同可以履约) Custodians: improve market integrity by holding clients asset and prevent loss due to fraud e.g. Alipay and WeChat Depository institutions: commercial bank, credit union etc. They raise funds from depositors and lend them to borrowers Insurance company: Definition: help people offset risk by creating a contract that provide a payment in the event that some loss occurs Fraud: people may lie to get the money, leads to loss of insurance company Moral hazard: people with insurances are likely to be more willing to risk so there is a higher chance for repayment, leads to loss of insurance company Adverse selection: healthy people are unwilling to buy health insurance. However, people with a poor health condition are more likely to buy heath insurance. This leads to a higher chance for repayment, leads to loss of insurance company. Position(头寸): Long position(多头头寸): Benefit from appreciation(涨价) in prices of the assets or contracts Examples: purchase stocks, bonds, calls, futures, forwards; sell puts Purchase calls(看涨期权): 现在付钱买期权,得到一个在未来以现在价格买入股票的权力,若未来股票价格上涨则行使权力,赚钱,多头头寸 Purchase futures(forwards): 买入期货, 未来交割时以现在价格交易, 若未来涨价即省钱,等同于赚钱,多头头寸 Sell puts(看跌期权): 别人给你付钱买期权, 得到一个在未来以现在价格卖出股票的权力, 若未来股票价格上涨则不会有人行使权力, 赚取了别人购买期权的钱, 多头头寸 Short position(空头头寸): Benefit from decrease in prices of the assets or contracts Examples: short-selling(卖空); purchase puts; sell call, future, forward Purchase puts: 现在付钱买期权,得到一个在未来以现在价格卖出股票的权力,若未来股票价格下降则行使权力,赚钱,空头头寸 Sell calls: 别人给你付钱买期权, 得到一个在未来以现在价格买入股票的权力, 若未来股票价格下跌则不会有人行使权力, 赚取了别人购买期权的钱, 空头头寸 Sell futures(forwards): 卖出期货, 未来交割时以现在价格交易, 若未来降价即赚钱,空头头寸 An important notes: buying stock is a long position but selling stock is neither long position or short position. Investors don’t make money when there is a drop in price after selling the stock. Once a stock is sold it is no longer related to investors. Option: 期权是权力, 一个投资者需要现在花钱买权力但将来不一定要执行权力 Option Option position Underlying position Buy call Long Long Sell call Short Short Buy put Long Short Sell put Short Long Option position: 只要买入option就是long, 卖出option就是short Underlying position: 看标的物的本质会涨还是跌 Short-selling: Investors borrow stocks from dealers and immediately sell them. Cash from selling stocks must act as the collateral(抵押物) of borrowing. If stock price decreases in the future, investor can buy stocks at lower cost and return them back to dealer(short position). Short selling profit = original selling price - repurchase cost - Interest of borrowing stock - Commission + Interest earned from collateral - dividends distributed during borrowing Potential gain of short selling is limited to 100%(when stock price = 0). However, the potential loss is unlimited(there is no upper limit of stock price) If there is any dividends distributed during borrowing, short-seller must pay lender the equivalent amount in cash Rebate rate = Interest earned from collateral - implicit loan fee(Interest of borrowing stock) Implicit loan fee is affected by the availability of stock and rebate rate is likely to be negative. i.e. the cost of borrowing stock is higher than the return of investing collateral Leverage position: Margin transaction(保证金交易): buy securities by borrowing some of the purchase price Buyer’s equity: portion of the security that belongs to the buyer Financial leverage ratio = $\frac{Asset(Market\ value)}{Equity}$ Gain or loss is amplified by the value of financial leverage ratio Initial margin requirement(IM) = $\frac{Equity_{0}}{Market\ value_{0}}$ Maintenance margin requirement(MM) $\le \frac{Equity_{1}}{Market\ value_{1}}$ Margin call: if buyer’s equity is less than maintenance margin requirement(MM), buyer will receive a request for additional equity or the position will be liquidated(强制平仓) Example: at $T_{0}$, $Market\ value_{0}$ = 300, $Equity_{0}$ = 100 so IM = MM = $\frac{1}{3}$ At $T_{1}$, $Market\ value_{1}$ = 250, $Equity_{1}$= 100-(300-250)=50 $\frac{1}{5}$&lt; MM so it has trigger the margin call Price triggering a margin call(Margin call price) = $P_{0}\cdot \frac{1-IM}{1-MM}$ $P_{0}$:the initial price of stock As IM$\ge$ MM, $\frac{1-IM}{1-MM}$ $\le$1 so margin call price is always less than or equal to initial price Rate of return of a margin transaction = $\frac{Total\ gain - commission\ of \ selling +Dividends-Interests}{Initial\ equity+\ commission\ of \ purchase}$ Total gain = Selling price of stocks - Initial purchase price of stocks Orders(下单): The best bid: the highest bid price in the market The best ask: the lowest ask price in the market Execution instructions(执行指令): indicates how to fill the order Market order: instruct the broker to immediately buy at the best ask price or sell at the best bid price. The market order is quick but the purchase/sell price is not under control. Price can be unfavorable when the security is thinly traded(市场中股票稀缺) or order is very large(交易量大) Limit order: instruct broker only buy in when best ask $\le$ limit price or sell when best bid $\ge$ limit price. Limit order is not necessarily quick and don’t guarantee a deal but purchase/sell price is under control Aggressively priced: when the limit price of the limit order is a lot higher/lower than the market price i.e. limit price &gt;&gt; market ask price or limit price &lt;&lt; market bid price Marketable limit order: set the current market price as the limit price. It could guarantee part of the deal is done but not necessarily all. Status of limit order: Make a new market: best ask&gt;limit buy price &gt; best bid or best bid&lt;limit sell price &lt; best ask, no deal Make the market: best bid = limit buy price &lt; best ask or best ask = limit sell price &gt; best bid, no deal Behind the market: limit buy price &lt; best bid &lt; best ask or limit sell order &gt; best ask &gt; best bid, no deal Far behind the market: limit buy price &lt;&lt; best bid &lt; best ask or limit sell order &gt;&gt; best ask &gt; best bid, no deal Take the market: limit buy price = best ask &gt; best bid or limit sell price = best bid &lt; best ask. There is a deal. All-or-nothing order: can only trade if the entire order can be traded Hidden orders: detail of the order is only exposed to broker/exchange not the public Iceberg orders: only display size of the order to the public, rest of the order is hidden Validity instructions(时效指令): indicates when the order may be filled Day orders: the order will expire if it is not filled by the end of the day Good-till-cancelled order: the order will not expire until the order is cancelled Immediate-or-cancel order: cancel immediately if the order can not be filled partially or in full(只有一瞬间有效,能成交多少就成交多少,无法成交部分立刻作废) Good-on-close orders: the order can only be filled at the close of trading(只有闭市一瞬间有效) Good-on-open orders: the order can only be filled at the open of trading(只有开市一瞬间有效) Stop sell order: only execute sell when the market price is at or below that stop price(对于多头的止损). Stop sell+market order can make sure shares are all sold but don’t guarantee price. Stop sell+limit order cannot make sure shares are all sold but guarantee price. Stop buy order: only execute buy order when the market price is at or above the stop price(对于空头的止损)Stop buy+market order can make sure shares are all bought in but don’t guarantee price. Stop buy+limit order cannot make sure shares are all bought in but guarantee price. Application of stop order(止损单): Stop loss at a certain position Only trade when there is a market confirmation of analytical result(等市场验证了分析结果再执行交易指令) Reinforce market momentum(市场连锁效应,一个stop order引发另一个) Primary market: Public offering(公开发行): Initial public offering(IPO): first-time issued by firm whose shares aren’t currently public traded Underwritten offering(承销): the investment bank guarantees the sale of all issued share Best effort offering(代销): the investment bank acts as broker and is not obligate to sell all issued share Secondary offering: issued new shares when there are already public traded shares in the market(无论第二次发行还是第三次均叫secondary offering) Private offering(非公开发行): Private placement(定向增发): sell shares at discount to a small group of qualified investors. These shares have a lockdown period due to the discount Shelf registration: corporates can decide when they wish to issue shares after the paper work is done. Corporates do not necessarily need to immediately issue shares after paper work is done Dividend reinvestment plan: shareholders reinvest their dividends into corporates newly issued shares at discount Right offering: shareholders are given rights to buy newly issued shares at a discount to the current market price Secondary market: Classified by trading session: Call market(集合竞价): often executed at the start or end of the day. All buy and sell orders are gathered. A single price is chosen to maximize the total volume of trade. All bid orders over or at the chosen price have a deal at the chosen price. All ask orders under or at the chosen price have a deal at the chosen price. Continuous market: trades are arranged and executed anytime when the market is open(买单卖单自由匹配) Advantage Disadvantage Call market Easier for buyers and sellers to find counterparty Only execute during a particular period Continuous market Execute during most of the day If a buyer and seller arrive in the market at different time, they cannot trade with each other. Classified by trading mechanism: Quote-Driven market: trade at price quoted by dealer. The counterparty is the dealer e.g. foreign exchange market Brokered market: trade is arranged by broker e.g. block trade(大宗交易;find a buyer and a seller can be difficult) Order-driven market: trades are arranged using rules to match buyer and seller e.g. stock exchange Rules of order driven market: Order matching rule(成交优先性): highest priced buy orders and lowest priced sell orders are traded first. If buy and sell price are identical, the order with its size(交易数量) displayed is traded first. If orders are both displayed or hide, the order which arrives the exchange earlier is traded first. Trading price rule(决定成交价格): Uniform pricing rule: all trades are executed at the same time to maximize trading volume e.g. call market Discriminatory pricing rule: 先挂单的受到价格歧视. 例如:9:35有一个limit ask&gt;=100, 9:38有一个limit bid&lt;=105. 这单最后会以100成交因为limit ask先挂单. 如果反过来, 9:35有一个limit bid&lt;=105, 9:38有一个limit ask&gt;=100. 这单最后会以105成交因为limit bid先挂单 Derivative pricing rule: orders are matched together at a fixed point during the day at the midpoint between best bid and best ask Well functioning financial system: Complete markets: instruments available to serve purposes of entities e.g. leverage, short-selling Operational efficiency: low transaction cost Information efficiency: security prices reflect their intrinsic values Allocation efficiency: resources can go where they are most valuable e.g. cost portfolio with the highest Sharpe ratio Objectives of market regulation: Control fraud Promote fairness Set mutually benefit standards Ensure long-term debts are funded Security market index Security market index basics: A hypothetical portfolio of investment holdings that represents a segment of the financial market Constituent securities: individual securities included in a security index Price return index: reflects only the prices of constituent securities Total return index: reflects not only prices of constituent securities but also dividends reinvestment since inception Total return index $\ge$ Price return index Rebalancing: adjusting the weights of constituent securities to make it consistent with the weighting method chosen Reconstitution: change constituent securities in the index when certain constituent securities no longer meet the selection criteria or cannot reflect changes in the target market. How to construct a index: Decide target market Decide securities included Decide weighting method How should index be rebalanced How should the selection of securities and weighting method be re-examined? Price return and total return: Price return: a rate of return calculated based on price return index Total return: a rate of return calculated based on total return index Single period return: $V_{PRI}$ at the end of year 1 = $V_{PRI}$ at the end of year 0 $\times (1+Price\ return\ in\ year\ 1$) Multiple period return: $V_{PRI}$ at the end of year n = $V_{PRI}$ at the end of year 0 $\times (1+PR\ in\ year\ 1$)$\times (1+PR\ in\ year\ 2$)……$\times (1+PR\ in\ year\ n$) Price weighted price return index: The arithmetic average of constituent security prices, done by buying an equal number of shares of each constituent securities Price return index =$V_{PRI}$= $\frac{\Sigma^{N}{i-1}P{i}}{N}$ Price return = $\frac{\Sigma P_{1}-\Sigma P_{0}}{\Sigma P_{0}}$ Total return = $\frac{\Sigma P_{1}-\Sigma P_{0}+\Sigma D}{\Sigma P_{0}}$ Advantage: simple to calculate Disadvantage: Highly prices securities have a greater influence on index value Divisor must be adjusted to keep index unchanged when a split of stocks occurs Example: before split: Stock A, 10 dollar; Stock B, 20 dollar; Stock C, 25 dollar ​ before split price return index = $\frac{10+20+25}{3}=18.3$ ​ After split: Stock A, 5 dollar; Stock B, 20 dollar; Stock C, 25 dollar ​ After split price return index = $\frac{5+20+25}{D}=18.3$ ​ After split divisor = 2.73 Equal weighted price return index: Each constituent security has an equal weight in terms of market value, done by investing equal dollar amount in each stocks Price return index = $V_{PRI} = \frac{N\times amount\ invested}{D}$ N: number of constituent security D: divisor Price return: HPR = $\frac{P_{1}-P_{0}+D}{P_{0}}$ When there is no dividends, HPR = $\frac{P_{1}-P_{0}}{P_{0}}$ $PR = w_{1}\cdot HPR_{1}+w_{2}\cdot HPR_{2}……w_{n}\cdot HPR_{n}$ or Arithmetic mean of HPRs $w_{i}$: the weight in value of security $i$, should be identical for equal weighting index Total return: HPR = $\frac{P_{1}-P_{0}+D}{P_{0}}$ $TR = w_{1}\cdot HPR_{1}+w_{2}\cdot HPR_{2}……w_{n}\cdot HPR_{n}$ or Arithmetic mean of HPRs $w_{i}$: the weight in value of security $i$, should be identical for equal weighting index Advantage: simple to calculate Disadvantage: Small cap bias: small cap stocks are over-presented, lead to higher volatility(同样的钱,小盘股可以买很多) Require frequent rebalancing of the value weighting Market-capitalization weighted price return index: Weight is determined by dividing market capitalization(市值) of each constituent securities by total market capitalization of the index Price return index: Value of price return index = $V_{PRI} = \frac{\Sigma ^{N}{i=1}n{i}P_{i}}{D}$ = $\frac{MC}{D}$ $n_{i}$: number of units of constituent security $i$ in the market(股份数) $P_{i}$: unit price of constituent security $i$ N: number of constituent security D: divisor Example: Stock A, 10 dollar, 1000 shares; Stock B, 20 dollar, 1500 shares; Stock C, 25 dollar, 2000 shares $V_{PRI}=\frac{10\times1000+20\times1500+25\times2000}{D}=\frac{90000}{D}$ If we wish to set the price return index to be 1000, we will set D=90 Alternatively, if we wish set the price return index to be 100; we will set D=900 Price return = $\frac{\Sigma MC_{1}-\Sigma MC_{0}}{\Sigma MC_{0}}$ $MC_{i}$: market capitalization of all securities in the index at time $i$ Total return = $\frac{\Sigma MC_{1}-\Sigma MC_{0}+D}{\Sigma MC_{0}}$ Advantage: constituent stock’s weight equals to its actually market fraction Disadvantage: large market capitalization have a greater influence on index value, may lead to momentum tilt(指数被大盘股绑架, 一旦大盘股跌会导致其他小盘股持有者有恐慌) Float-adjusted market-capitalization weighted price return index: Weight is determined by adjusting market capitalization(市值) of each constituent securities for its market float which is the number of shares available to the investing public(和market-capitalization weighted很类似,这里把不可流动的股票市值剔除掉) Free-float-adjusted market-capitalization weighted price return index: Very similar to float-adjusted market-capitalization weighted, further exclude shares not available to foreign investors Fundamentally weighting: Uses measures that are independent of its share price to determine weight on each constituent security such as book value, cash flow, revenue etc. Leads to value tilt(better reflect intrinsic value) Leads to contrarian effect(把不合理的market value拉回到intrinsic value附近) Uses of security(equity, fixed income) market index: Reflect market performance Proxies(测量用的代替物) for measuring and modelling return($\alpha$), systemic risk($\beta$) and risk-adjusted performance(Sharpe ratio) Proxies for asset classes in asset allocation models Benchmark for active investment portfolio Model portfolio for some ETF e.g.上证50ETF使用上证50指数搭建 Types of security index: Broad market index: reflect entire equity market in a country Multi-market index: reflect equity markets in multiple countries Sector index: represents different economic sectors Style index: represents equities classified according to market capitalization, value, growth Value Growth Large-cap Large-cap value Large-cap growth Small-cap Small-cap value Small-cap growth Large-cap: equity with large market capitalization Small-cap: equity with small market capitalization Value: low P/E ratio i.e. the share normally have a high value(low risk) Growth: high P/E ratio i.e. the share normally have more margin for future growth(high risk) Problems with fixed income index: Broad universe: there are so many types of fixed income securities, hard to classify High turnover: need index reconstruction every time a bond expires Dealer markets and illiquidity: fixed-income securities are normally traded in quote-driven market so highly rely on dealers to provide prices or estimate prices by themselves Alternative investment index: Commodity(大宗商品) index: consists of future contracts and commodities. Performance of commodity index can be quite different from their underlying performance(期货现货走势差异大) Real estate index Hedge fund index: only includes hedge fund that are voluntary to provide information so there is a survivorship bias Market efficiency Market efficiency basics: Market value: the price that an asset can currently be bought or sold in the market Intrinsic value: the value if an investor completely understand the asset’s investment characteristics In an informationally efficient market, asset’s market value reflect new information rationally and quickly. Prices only react to new information and unexpected information(市场价值能很好的反应内在价值MV=IV,因为所有信息都被市场价值考虑以内) Passive investment(following $\beta$) is preferred in effective market due to lower transaction cost as market value $\approx$ Intrinsic value in effective market. There is less fluctuation so there is very little abnormal excess return($\alpha$). Active investment(following $\alpha$) is preferred in ineffective market as market value $\neq$ Intrinsic value so there is a lot of abnormal excess return Factors affecting market efficiency: The lager number of participants in the market, the more effective Information availability Limits of trading: if arbitrage, shorting-selling is not allowed, the market will be less effective Transaction cost and information acquisition cost: high cost will make market less effective Forms of market efficiency: Weak-form efficient market hypothesis(弱势有效市场假设): Market prices reflect all historical price and trading volume information Technical analysis: use historical trading information to identify recurring patterns to predict future(用历史数据推测未来) Investor cannot consistently earn abnormal profit($\alpha$) using technical analysis as current prices already reflected all historical information. Future prices are only related to future information has nothing to do with historical information. Semi-strong form efficient market hypothesis: Market prices reflect all publicly known and available information(including historical price and trading volume information) Fundamental analysis: use publicly available information to estimate intrinsic value of the asset Investor cannot consistently earn abnormal profit($\alpha$) using fundamental analysis as current prices already reflected all publicly available information. Future prices are only related to new public information has nothing to do with historical information. If a market is semi-strong from efficient, it must be weak-form efficient. Strong-form efficient market hypothesis: Market prices reflect both publicly and privately information Investor cannot consistently earn abnormal profit($\alpha$) from trading on private information as current prices already reflected all publicly and privately available information. Future prices are only related to new information has nothing to do with historical private or public information. If a market is strong-from efficient, it must be semi-strong form efficient and weak-form efficient and Summary: Past market information All public information Public and private information Weak-form Yes Semi-strong form Yes Yes Strong form Yes Yes Yes Roles for portfolio manager in efficient market(如果市场已经strong-form efficient了PM仍是有用的): Establish portfolio risk/return objectives(提供风险,收益管理方面的建议) Portfolio diversification(资产分散化管理) Implement asset allocation based risk/return objectives(资产配置) Tax minimization Market anomalies(市场异常): Definition: a change in market price that cannot be linked to current relevant information or release of new information Time-series anomalies(跟时间有关的异常): January effect(年初效应): stock return in January is significantly higher than the rest of the year. This is due to tax-loss selling(年末许多投资者会低价出售一些亏钱的资产用来抵税,一月在重新买入,过多买入抬高股价) or window dressing(年末对冲基金公布收益,会先把亏钱的股票卖掉来使自己收益变得更好看,年初重新买入,过多买入抬高股价) Turn-of-the-month effect(月末效应): returns tend to be higher on the last trading day of the month and first three trading days of the next month Day-of-the-week effect: returns on Monday is lower than the other four days Weekend effect: return on weekends is low than weekdays Holiday effect: return in the day before market holiday tends to be higher Market momentum: 一个股票涨,买的投资者更多,涨的更狠,反之亦然 Overreaction: stock prices will be inflated(depressed) for companies releasing good(bad) information(面对新消息反应过度) 一个市场若存在time-series anomalies则还没有达到weak efficient market因为time series analysis是有效的 Cross-sectional anomalies: Size effect: small-cap stocks tend to have better performance than large-cap stocks on a risk-adjusted basis Value effect: value stock(low P/E ratio) tends to have better performance than growth(high P/E ratio) stocks Summary: Value Growth Large-cap Large-cap value Large-cap growth(Worst) Small-cap Small-cap value(Best) Small-cap growth 一个市场若存在cross-sectional anomalies则还没有达到semi-strong efficient market因为fundamental analysis是有效的 Other anomalies: Closed-end fund discounts: market value of closed-end fund is less than NAV Earning surprise: market reaction to unexpected earnings of a company tend to be slow Initial public offering: investors able to buy IPO shares tend to earn abnormal profits($\alpha$) Economics fundamentals: stock return is related to economics fundamentals(股价和经济基本面紧密相关) Behavioral finance(行为金融学): Definition: examines investor behavior and how this behavior affects the financial market Loss aversion(损失厌恶): Investors dislike losses more than they like comparable gains(如果A没投资,B先赚100后亏100,他们两个人净利润都是0,但B会比A更难受由于loss aversion) Loss aversion leads to overreaction anomaly(过度反应异常) Loss aversion is not rational Risk aversion: if two portfolios have the same expected return, investor with risk aversion tend to pick the one with a smaller standard deviation. Risk aversion is a personal preference and it is rational. Overconfidence: investors place too much confidence on their ability to process information about security which leads to mispricing Representativeness: investors assume good companies are good investment choice Gambler’s fallacy(赌徒谬论): recent outcomes don’t affect future probabilities of the same event. Mental accounting: investors keep track of gains and losses for different investments in separate mental accounts rather than viewing as a whole portfolio Conservatism: investors are slow to react to changes Disposition effect(处置效应): investors try to avoid realized loss(不愿意割肉) Information cascades(信息瀑布): transmission of information from those acting quickly and their decision affects other investors Herding behavior(羊群效应): trading occurs in clusters(聚堆) and is not necessarily driven by information(散户没理由的聚堆买股票) Overview of equity securities Common shares: Represent ownership interest in a company Residual claim on company’s net asset(after repaying debt and preferred share) in liquidation(破产清算时,偿还完债务和优先股股东的净资产归普通股股东) The company has no contractually obligation in terms of paying dividends Ordinary shareholders participate in the governance process through voting rights Callable common shares: giving the issuing company the option to buy back shares from investors at a predetermined call price(对公司有利,因为给了股票增长上限) Puttable common shares: giving investors the option to sell their share back to the issuing company at a predetermined put price(对投资者有利,因为给了股票下跌下限) Risk: puttable preference share &lt; preference share &lt; callable preference share &lt; puttable common share &lt; common share &lt; callable common share Preference share: Rank above common shares in terms of dividends payment and distribution of the company’s net asset upon liquidation Dividend is perpetual and dividend rate is fixed The company has no contractually obligation in terms of paying dividends(如果实在经营不善, 优先股股息也可以不付,但如果付了普通股的股息就必须付优先股的股息) No voting right Cumulative preference shares: unpaid preference dividends in previous periods must be paid in full before paying ordinary dividends Participating preference shares: giving preference shareholders the chance to receive additional dividends if the company’s profit exceeds a pre-specified level Convertible preference shares: Preference shareholders can convert their share into a specified number of ordinary shares Convertible preference share is less volatile than ordinary share Voting rights: Proxy voting: assigned a party to vote on behalf of a shareholder Statutory voting(法定投票): each voting represents one vote, good for large shareholders Cumulative voting: total voting rights = number of shares owned $\times$ number of options, good for small shareholders Example: large shareholder owns 600 shares; small shareholder owns 400 shares The company is electing 3 directors from 5 candidates Statutory voting: large shareholder have 600 votes and small shareholder have 400 votes Cumulative voting: large shareholder have 3 $\times$ 600 = 1800 votes and small shareholder have 3 $\times$ 400 = 1200 votes Companies may issue shares with same ownership but different voting rights(AB股;同股不同权) Private equity securities: Not publicly traded in the secondary market and less transparency Greater ability to focus on long-term goals as there is no public pressure on short-term results Greater return for investors once the firm goes public traded Types of private equity: Venture capital: invest in early stage company Leveraged buyout(LBO): small company uses debt to acquire larger firms Private investment in public equity(PIPE): a public company quickly sell ownership to private investors Depository receipts(DR;存托凭证): Represent ownership of a foreign company Depository bank buys ordinary shares of a foreign company and deposit these shares abroad. The depository bank then issues equal number of DR at the home country in local currency. Investor who buys DR is equivalent to owning the share of a foreign company Sponsored DR: foreign company has a direct involvement of issuance of DR and investor who buys DR has the same right as direct owner of ordinary share Unsponsored DR: depository bank bought foreign share in the secondary market and foreign company has no direct involvement. Investor who buys DR has right to receive dividends but no voting right which is held by depository bank(issuer of DR) Types of DR: Global depository receipts: issued outside the company’s home country and outside US American depository receipts: issued in US and traded like common share(非美国公司在美国上市均需要采取发行ADR的方式) Global registered shares: common shares that are traded on stock exchanges in different countries in different currencies Basket of listed depository receipts: similar to ETF, an investor may use a list of DR to exchange a basket of listed depository receipts and traded it in exchange Roles of equity issuance: Make acquisition Provide option based incentive(股票期权激励) to employees Finance company’s operating activities Management actions can directly affect book value of the firm but they can only indirectly affect the market price Introduction to industry and company analysis Uses of industry analysis: Understanding business environment Identify active investment opportunity Portfolio performance attribution(对组合表现进行分析) Company classification: Product or services supplied A group of company offering similar products and services Usually have four layers(由大到小): sector(板块), industry(行业), company(公司) Business cycle sensitivity: A group of company with similar relative sensitivity to the business cycle(商业周期对公司影响大体类似) Cyclical company: strong correlated with business cycle(波动很大) Non-cyclical company: independent of the business cycle(几乎没有波动) Non-cyclical companies are normally defensive(provide good or service with stable demand) or growth(demand of the good of service is a lot greater than supply) Statistical similarities: Relatively high correlation of past securities returns Limitation: sometimes result in non-intuitive(不直观的) groups; composition of each group is constantly changing; No guarantee the past correlation will continue in the future; carry inherent dangers of all statistical methods(统计学固有的缺陷) Classification system supplier: Commercial industry classification system(商业公司的收费数据库) More specific and detailed classification and transparent Update quite frequently Governmental classification system(政府的免费数据库) More broad classification and do not disclose specific information Very slow in updating Peer group(分类以后属于同一组的公司互为peer group): Definition: a group of companies engaged in similar business and performance is influenced by closely related factors Steps in setting up peer group: Identity companies in the same industry from classification system Add major competitors stated in financial reports Review industry publications and include comparable companies Confirm companies within the same peer group have similar business activities and cost structure Porter’s five forces model(行业内部竞争因素): Rivalry among existing competitors(同行竞争) Threat of new entrants(新进入者萎谢) Threat of substitute products(替代产品威胁) Bargaining power of buyers(买家议价能力) Bargaining power of suppliers(供应商议价能力) 这5点均是越低对企业越有利 Barrier of entry: Determined by capital requirements, intellectual capital(技术资本) and regulations(监管;中国烟草) Low barriers lead to more competition and little pricing power(定价力:敢不敢定高价) High barrier don’t guarantee large pricing power. This is because: High price will lead to less customers Large capital requirements lead to high barrier to exit. Those companies tend to be overcapacity(供过于求) Industry concentration(行业集中度): Fragmental industries(碎片化行业) tend to be highly competitive Concentrated industries do not guarantee pricing power as relative market share has a greater impact on pricing power(行业龙头有更强定价力) Market share stability: Affect by barriers of entry, frequency of new product introductions and product differentiation(产品差异化大, market share更稳定) Stable market share indicates a less competitive industry vice versa Industry capacity(行业产能): Under-capacity leads to high pricing power as demand exceeds supply Over-capacity leads to price cutting as supply exceeds demand Capacity is fixed for short-term but variable in the long-term(产能需要时间改变) Physical capacity: hard to re-deploy(改变用途) e.g.炼铁工厂, 炼油厂 Non-physical capacity: easy to re-deploy e.g. human capital and financial capital External factors affecting a industry(影响行业外部因素): Macroeconomics climate Technology innovation Demographic influence(人口结构改变) e.g.老龄化使医疗行业发展更好 Governmental influence Social influence(社会习惯) Industry life cycle: Embryonic stage(初期阶段): Industry is just beginning to develop Slow growth rate in demand as customers are unfamiliar with the industry High prices: not yet achieves economics of scale and substantial initial investment is needed Risk of failure is high Growth stage(增长阶段, if survived in the growth stage): Rapid growth in demand: pushed by large amount of new customers Falling prices: economics of scale achieved Improved profitability: due to higher demand and economics of scale Relatively low competition: rapid growth in demand allows company to grow without the need to capture market from competitors(Demand太多supply不足以填补市场所以不需要从竞争对手手中抢夺客户) Threat from new entrant is highest as barrier to entry is not high enough Shakeout stage(震荡阶段): Slowing growth in demand: demand approaches market saturation Intense competition: growth depends on market share gains(必须从竞争对手手中抢份额来保证增速) Over-capacity: company’s investment exceeds demand growth Declining profitability: over-capacity so supply exceeds demand Increasing failure Mature stage(成熟阶段): Littre or no growth in demand: market is saturated and growth is limited to replacement demand and population expansion Increase consolidation(并购): evolves to oligopoly(进化为寡头) due to M&amp;A High barrier to entry: surviving companies have brand loyalty and effective cost structure Stable pricing: surviving companies try to avoid price wars but periodic wars do occur Companies with superior products grow faster than industry average Declined stage(下降阶段): Negative growth in demand: decrease in demand due to technological substitution, social changes and global competition Decline prices: excess capacity and price wars often happen Consolidation: weaker companies exit, merge or re-deploy capital into different industries Limitation of industry cycle: Evolution of industries don’t always follow a predictable pattern External factors will affect the length of each stage or to be skipped Life-cycle model tends to be most useful in analyzing during periods of stability Firm’s competition strategy: Cost leadership: lowest cost of production; lowest selling price; sell enough volume to earn return Product or service differentiation: distinctive in terms of type, feature, quality etc. to achieve price premium Equity valuation: concepts and basic tools Valuation basics: Present value models(absolute valuation): Intrinsic value of a security is the present value of future cash flow expected to be received from the security Discount cash flow model(DCF) Dividends discount model(DDM) Free cash flow to equity(FCFE) Multiplier models(Market multiple models; relative valuation) Share price multiples Enterprise value multiples Asset-based valuation models: Intrinsic value of equity = asset - liability - preference share Undervalued: intrinsic value &gt; market value Fair valued: intrinsic value = market value P.S. if IV$\approx$ MV e.g. IV =10, MV = 9.8, it is also fair valued Overvalued: intrinsic value &lt; market value Dividends: Cash dividends: distribute cash to shareholders, typically paid out regularly at known interval Special dividends: not regularly paid to shareholders or as a supplement to cash dividends Stock split(拆股): increase the number of outstanding share with a decrease in share price(e.g. 2-for-1 split; 每一股拆成两股) Reverse stock split: reduce the number of outstanding share with a increase in share price(e.g.1-for-20 reverse stock split; 20股合成1股) Share repurchase: A transaction that a company uses cash to buy back its own shares Share repurchase is equivalent to cash dividends. For example, 10 dollar per share, 1000 share outstanding, equity = 10000 Issue 1 dollar dividends per share, remaining equity after dividends = 9000 Repurchase 10% of outstanding shares, remaining equity after repurchase = 9000 1 dollar dividends per share = 10% repurchase Key dates: Declaration date: the date that the corporate issues a statement declaring a specific dividends Ex-dividend date: the first day that share trades without dividends(在这一天或者这一天以后买股票不会收到dividends) Holder-of-record date: the date that a shareholder listed in the corporate’s record will deem to have ownership of the upcoming dividends Payment date: the date that corporates actually mails out dividends payment Dividends discount model: DDM is the application of the Discount cash flow method Intrinsic value = $\sum_{t=1}^{\infty} \frac{D_{t}}{(1+r)^{t}}$ Assume the investor is holding the share forever $D_{t}$: dividend in year t CAPM method is used to find $r$ which is also the minimum require rate of return of investors $D_{t}$ is very hard to predict so we set 4 assumptions to simplify the problem. N holding period: Intrinsic value$=\frac{D_{1}}{(1+r)^{1}}+\cdots+\frac{D_{n}}{(1+r)^{n}}+\frac{P_{n}}{(1+r)^{n}}$ Assume the investor will sell the share in year n $P_{n}$: the sell price after n years Gordan growth model(GGM): Intrinsic value = $\frac{D_{1}}{(1+r)^{1}}+\frac{D_{2}}{(1+r)^{2}}+\frac{D_{3}}{(1+r)^{3}}+……$ = $\frac{D_{1}}{r-g}=\frac{D_{0}(1+g)}{r-g}$ Formula is derived using geometric series Assume the investor is holding the share forever Assume dividends grow at a constant rate so $D_{1}=D_{0}(1+g)$; $D_{2}=D_{1}(1+g)=D_{0}(1+g)^{2}$ Assume dividends growth rate is less than discounting rate(g&lt;r) $g = ROE\times$ Retention rate​ Retention rate = 1- dividends payout ratio ROE = $\frac{NI}{Equity}$ Derive: $g = ROE\times$ Retention rate: $\Delta NI \cdot Payout\ ratio = \Delta Dividends$ $\frac{\Delta NI}{NI}= \frac {\Delta Dividends}{Payout\ ratio\times\ Net\ income}$ $\frac{\Delta NI}{NI}=\frac{\Delta Dividends}{Dividends}=g$ $\Delta NI=\Delta Equity \times ROE$ $\frac{\Delta NI}{NI}=\frac{\Delta Equity}{NI}\times \frac{NI}{Equity}$ $\frac{\Delta NI}{NI}=\frac{\Delta Equity}{Equity}=\frac{\Delta Dividends}{Dividends}=g$ $\Delta Equity=NI\times$ Retention rate(留在公司的利润以retained earning的方式使Equity增加) $\frac{\Delta Equity}{Equity}=\frac{NI}{E}\times$Retention rate $g = ROE\times$ Retention rate​(VERY IMPORTANT RESULT) Preferred stock valuation: Intrinsic value = $\frac{D}{r}$ It is a special case of GGM with g=0(preference dividend rate doesn’t change) Two-stage DDM models: Assume the company experiences a initial and finite period of high growth followed by a infinite period of unchanged low growth(刚开始几期增长快,后面无穷期增长慢) Intrinsic value $=(\sum_{t=1}^{n} \frac{D_{0}\left(1+g_{h}\right)^{t}}{(1+r)^{t}})+\frac{V_{n}}{(1+r)^{n}}$ where $V_{n}=\frac{D_{n+1}}{r-g_{l}}$ $\sum_{t=1}^{n} \frac{D_{0}\left(1+g_{h}\right)^{t}}{(1+r)^{t}}$ : discount dividends of the first few period with high growth rate $V_{n}=\frac{D_{n+1}}{r-g_{l}}$: PV of future perpetual dividends low growth rate(GGM) on year n $\frac{V_{n}}{(1+r)^{n}}$: PV of future perpetual dividends low growth rate(GGM) on year 0(把第n年的价值贴现回第0年) Free cash flow to equity(FCFE): FCFE is the application of the Discount cash flow method FCFE is measure of dividends-paying ability. It is suitable for non-dividend-paying stock as we cannot use DDM if the company has the ability to pay dividends but not willing to pay dividends FCFE = net income + non-cash expense - investment in working capital - fixed capital investments + net borrowing Intrinsic value = $\sum_{t=1}^{\infty} \frac{F C F E_{t}}{(1+r)^{t}}$ 这里假设FCFE全被作为股息用于分红 $FCFE_{t}$: free cash flow to equity in year t CAPM method is used to find $r$ which is also the minimum require rate of return of investors Multiplier model: Price multiple: P/E ratio(price earning ratio;市盈率) = $\frac{share\ price}{EPS}$ P/B ratio(price to book ratio;市净率) = $\frac{share\ price}{book\ value\ of\ equity\ per\ share}$ P/S ratio(price to sale ratio;市销率) = $\frac{share\ price}{Revenue\ per\ share}$ P/CF ratio(price to cash flow ratio;市现率) = $\frac{share\ price}{CFO\ or\ FCFE\ per\ share}$ All these ratios are the smaller the better for a stock Trailing price multiples: Use trailing or history data to find price multiple Example: current share price on 1.1.2020 = 10 dollar EPS in 2019 = 1 dollar Trailing P/E ratio = 10 Leading price multiples: Use leading or forward data to find price multiple Example: current share price on 1.4.2020 = 10 dollar EPS in the first quarter of 2020 = 0.2 dollar Predicted EPS in 2020 = 0.8 dollar Trailing P/E ratio = 12.5 Example: current share price on 1.7.2020 = 10 dollar EPS in the first quarter of 2020 = 0.2 dollar EPS in the second quarter of 2020 = 0.4 dollar Predicted EPS in 2020 = (0.2+0.4)$\times$2= 1.2 dollar Trailing P/E ratio = 8.33 P/E ratio based on fundamentals(Justified leading P/E ratio): Assume intrinsic value of the stock = market value of the stock $MV_{0}$ = $IV_{0}$ = $P_{0}$ = $\frac{D_{1}}{r-g}$ Justified P/E ratio = $\frac{P_{0}}{E_{1}}=\frac{\frac{D_{1}}{E_{1}}}{r-g}=\frac{Dividends\ payout\ ratio}{r-g}$ P/E ratio is positively proportional to dividends growth rate(g;分母随g的增大而减小,分式增大) P/E ratio is inversely proportional to discounting rate(r;分母随r的增大而增大,分式变小) $g = ROE\times (1-Dividends\ payout\ ratio)$ as dividends payout ratio increase, g decrease. The relationship between P/E ratio and dividends payout ratio is ambiguous(分子变大,分母也变大) Advantage of price multiple: Allow relative comparison both cross-sectional(同一时间不同行业) and in time series(同一行业不同时间) Popular tool for individual investors Disadvantage of price multiple: May generate a contradict conclusion with discount cash flow methods Different accounting standards will affect results The multiples for cyclic companies(affect by business cycle hugely) will be highly affected by the economic climates Method of comparable(relative valuation): Compare a price multiple to a benchmark to find out whether an asset is fairly valued, undervalued or overvalued The choice of benchmark includes: price multiple of a closely similar stock, average price multiple of the industry Enterprise multiple: Enterprise value: Enterprise value = MV of common stock + MV of preferred stock + MV of debt - cash and cash equivalents USE MARKET VALUE!!!!! In other words, enterprise value = Liability + Equity - cash It is viewed as the cost of takeover. We take away cash as there is no point to takeover cash using cash(收购企业时没有必要把对方现金也收购了) Enterprise value multiple = $\frac{Enterprise\ value}{EBITDA}$ EBITDA is used to remove the effect of capital structure on income Advantage: compare companies with different capital structures Asset-based valuation model: Market value of equity = market value of asset - market value of liability Asset-based valuation is suitable when: Most of the company’s asset is tangible There is a existing and clear market value of asset and liability Private firms that are not publicly traded so price multiples cannot be used The company is in liquidation(破产清算) so DCF methods cannot be used, there will be no future dividends Asset-based valuation is not suitable when: The company has major intangible assets off the book(e.g. Goodwill, leadership(马云)). Using asset-based valuation model will under-estimate the company’s value but provides a “floor value”(market price should not be anywhere lower than the floor value)]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>CFA</tag>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CFA Corporate Finance Notes]]></title>
    <url>%2FCFA_Corporate_Finance%2F</url>
    <content type="text"><![CDATA[CFA Corporate Finance NotesCapital Budgeting Capital project: projects where cash flow to the firm will be received over a period more than one year Capital budgeting: Definition: process company use for decision making on capital projects(选择最合适capital project的流程) Key steps in capital budgeting process: Step1: Generating ideas Step2: Analyzing individual project proposals(analyze after-tax increment cash flow of a project) Step3: Planning the capital budget for the firm(choose project which is most suitable) Step4: Monitoring decisions and conducting a post-audit after the project is finished Types of ideas(Step1): Replacement projects: Projects to maintain the business(是否保留已有生意) Projects for cost reduction(是否对已有生意进行一次性投资来降低variable cost) Expansion projects: 是否复制已有的生意 New products or services: 是否开展新生意 Mandatory projects: projects to meet legal requirements Other projects: R&amp;D projects etc. Principles of capital budgeting(Step2,哪些cash outflow要被考虑): Step2 aims to find after tax incremental cash flows(因为执行这个项目而产生的税后现金流增加) Include opportunity cost as part of the cash outflow of the new project Include Externalities(外部性) as part of the outflow/inflow of the new project Cannibalization(利益侵蚀): cash loss in other projects due to this new project(outflow) Synergy(协同效应): extra cash generated in other projects due to this new project(inflow) Do not include sunk cost as part of the cash outflow of the new project Sunk cost(沉默成本): cost occurs before the project begin(e.g. consulting etc.) or cost will still occur even though we don’t take the project(在项目开始前产生的费用且无论项目进行或不进行均产生的花费) Don’t include interest cost as it is already considered when discounting future cash Conventional cash flow: cash flow changes sign only once Unconventional cash flow: cash flow changes sign multiple times Valuation of a single project(Step2): Net present value(NPV): NPV = $CF_{0}+\frac{CF_{1}}{(1+k)}+\frac{CF_{2}}{(1+k)^{2}}……+\frac{CF_{n}}{(1+k)^{n}}$ Decision rule: accept the project if NPV&gt;0 Advantage: directly reflect the expected change in firm’s value Disadvantage: Ignore the size of $CF_{0}$. In other words, if two projects have the similar NPV but one has a very large $CF_{0}$. It is less preferable because it might be hard for company to put so much initial investment on a project at a time. Change is stock price = $\frac{NPV}{Number\ of\ shares}$ Internal rate of return(IRR): IRR is the discounting rate that makes the NPV = 0(Expected rate of return) NPV = 0 = $CF_{0}+\frac{CF_{1}}{(1+IRR)}+\frac{CF_{2}}{(1+IRR)^{2}}……+\frac{CF_{n}}{(1+IRR)^{n}}$ Decision rule: accept the project if IRR&gt; Cost of capital Advantage: reflect profitability Disadvantage: might be multiple IRR or no IRR for non-conventional cash flow; assume every year’s discounting rate = IRR which is unlikely to be the case Payback period(PB): The number of years to recover the initial investment of the project Payback period = A + $\frac{B}{C}$ A: the last period with a negative accumulated cash flow B: the size of the accumulated cash flow at the end of period A C: the size of cash flow during the period after A No decision rule Advantage: simple and reflect liquidity Disadvantage: does not take into account time value of money; ignores cash flow after the payback period Discounted payback period: The number of years required for cumulative discounted cash flow to recover the initial investment of the project Discounted payback period = A + $\frac{B}{C}$ A: the last period with a negative discounted accumulated cash flow B: the size of the discounted accumulated cash flow at the end of period A C: the size of the discounted flow during the period after A No decision rule Advantage: simple and reflect liquidity; take into account time value of money Disadvantage: ignores cash flow after the payback period Profitability index(PI): Indicates the value that company received in exchange for one unit of initial investment Profitability index = $\frac{PV\ of\ future\ cash\ flow}{Initial \ investment(CF_{0})}$ = 1+$\frac{NPV}{Initial \ investment(CF_{0})}$ Decision rule: accept the project if PI&gt;1 Advantage: measures profitability; shows the amount of value received per unit of initial investment For a single project, NPV, IRR, PI always give the same accept/reject decision e.g. NPV&gt;0 is equivalent to IRR&gt;cost of capital and PI&gt;1 Valuation of interacting projects(Step3, select the most suitable projects): Decision rules for mutual exclusive projects(只可以从一系列项目中选一个): NPV method: choose the one with the highest NPV IRR method: choose the one with the highest IRR PI method: choose the one with the highest PI NPV method and IRR method may conflict with each other because of: Pattern of the cash flow(explained below in NPV profile) Different assumptions. NPV method assumes the discounting rate = cost of capital during the period. In other words, it can be different from year to year. However, IRR method assumes the discounting rate = IRR which is the same for every year. NPV is closer to the real-world so NPV method is always chosen when NPV method and IRR method conflicts with each other. NPV profile: Independent variable: discounting rate Dependent variable: NPV of projects For a fixed cash flow, IRR is fixed while NPV of reduces with an increasing discounting rate At crossover rate, NPV of project A = NPV of project B Interactions with X axis give are IRR of projects Interactions with X axis are undiscounted net cash flow If discounting rate&lt;crossover rate, NPV method and IRR method always give a conflicting result If discounting rate&gt;crossover rate, NPV method and IRR method give the same result Cost of Capital Cost of capital: rate of return that supplier of capital requires or opportunity cost of funds for supplier of capital(used as the discounting rate of future cash) Weighted average cost of capital(WACC): WACC is also referred as Marginal cost of capital(MCC) Source of capital: debt, common(ordinary) equity, preferred stock WACC is the required rate of return investor demands for the average risk of the company. It doesn’t represent risk of a specific project in the company WACC = $w_{d}\times k_{d}\times(1-t)+w_{ps}\times k_{ps}+w_{ce}\times k_{ce}$ $w_{d},w_{ps},w_{ce}$: proportion of debt, preferred stock and common equity measured at market value(fair value) $k_{d}$: rate of return(marginal cost) of debt before tax $k_{ps}$: rate of return(marginal cost) of preferred stock $k_{ce}$: : rate of return(marginal cost) of common equity $t$: tax rate(Interest can act as tax shield) Estimate weights($w_{d},w_{ps},w_{ce}$) in WACC: If target capital structure(目标资本结构) is available, use this target capital structure directly If target capital structure is not available use: Current capital structure instead Infer from historical trend in capital structure Use averages of comparable companies’ capital structure Application of WACC: Optimal capital budget: Marginal cost of capital(MCC) increases as the company raises more fund Investment opportunity schedule(IOS): marginal return to a company’s investment IOS generally decreases as the company investment more funds as the company will prioritize in investing high return project When capital raised/investment &lt; Optimal capital budget, return(IOS)&gt;cost(MCC) When capital raised/investment &gt; Optimal capital budget, return(IOS)&lt;cost(MCC) There is an optimal point at optimal capital budget where return(IOS)=cost(MCC). The company is maximizing its profit at this point Representing a project’s risk using WACC: WACC is the required rate of return investor demands for the average risk of the company. It doesn’t represent risk of a specific project in the company We might use WACC as the discounting rate of a specific project but it will be less accurate If the project’s risk &gt; average risk, discount rate is underestimated, NPV is overestimated If the project’s risk &lt; average risk, discount rate is overestimated, NPV is underestimated Cost of debt(finding $k_{d}$): Yield to maturity approach(YTM非常类似于实际利率法摊销): $p_{0}= \frac{PMT}{(1+YTM)}+\frac{PMT}{(1+YTM)^{2}}+…….+\frac{PMT}{(1+YTM)^{n}}+\frac{Par}{(1+YTM)^{n}}$ PMT = Par value $\times$ coupon rate In YTM approach, we must know $p_{0}$(fair value of the bond) in order to calculate YTM which is effectively $k_{d}$(cost of debt) The after-tax true effective cost of debt = $k_{d}\times(1-t)$ as interest has the tax shield effect Debt-rating approach: When $p_{0}$(fair value of the bond) is not available, we use the rate of a comparable bond to estimate its $k_{d}$(cost of debt) Comparable bond: bond with the same rating and similar maturities(到期日) The after-tax true effective cost of debt = $k_{d}\times(1-t)$ as interest has the tax shield effect Cost of preferred stock: Preferred stock has a fixed dividend rate($k_{ps}$) $k_{ps}=\frac{Dividends\ per\ share}{preferred\ stock\ share\ price}$ Preferred stock share price is measured at fair value/market value Dividends has no effect of tax shield Cost of common equity: Capital asset pricing model(CAPM): $k_{ce} = rf+\beta(E(R_{m})-rf)$ rf: risk-free rate $\beta$: systemic risk of the firm’s stock $E(R_{m})$: expected return of the market Dividend discount model(DDM): $k_{ce}=\frac{D_{1}}{P_{0}}+g$ $D_{1}$: next year’s dividend $P_{0}$: current stock price $g$: sustainable growth rate=Return of equity $\times$ retention ratio=Return of equity$\times$(1-payout ratio) The DDM is under the assumption that annual dividend increases by $g$ % every year e.g. $D_{1} = D_{0}(1+g%)$ where $D_{1}$ is next year’s dividend ; $D_{0}$ is this year’s dividend Bond yield plus risk premium method: $k_{ce} = k_{d}+risk\ premium$ $k_{d}$: before-tax cost of debt Risk premium is measured using historical data between return of equity and return of debt Measurement of $\beta$ in CAPM: Factors affecting $\beta$ of a company: Sales risk: uncertainty of revenue Operating risk: fixed cost of operation Financial risk: fixed cost of financing(debt interest and lease) For a public traded company: Market model regression can be used to find average $\beta$ of the company Return of the stock = $\alpha +\beta \times\ return\ of \ the \ market$ For a non-public traded company or a project in a company: Market model regression approach only give average $\beta$ of a public traded company Pure-play method is used to find $\beta$ of a project or non-public traded company Step1: Find $\beta_{comp,equity}$ of a comparable company Comparable company: same industry, single line of business, similar business risk Step2: Find $\beta_{comp,asset}$ $\beta_{comp,asset} = \frac{(1-t)D}{(1-t)D+E}\cdot \beta_{comp,debt}+\frac{E}{(1-t)D+E}\cdot \beta_{comp,equity}$ D: value of existing debt ; E: value of equity We assume debt has no risk so $\beta_{comp,debt}$ = 0 $\beta_{comp,asset} = \frac{E}{(1-t)D+E}\cdot \beta_{comp,equity}$ Step3: a comparable company and the project(non-public traded company) have the same risk due to asset so $\beta_{comp,asset}=\beta_{project,asset}$ Step4: Find $\beta_{project,equity}$ $\beta_{project,asset} = \frac{(1-t)D’}{(1-t)D’+E’}\cdot \beta_{comp,debt}+\frac{E’}{(1-t)D’+E’}\cdot \beta_{comp,equity}$ Similarly, we assume debt has no risk so$\beta_{project,debt} = 0$ $\beta_{project,asset} = \frac{E’}{(1-t)D’+E’}\beta_{project,equity}$ CAPM in developing country: CAPM has a extra term(Country risk premium) for companies in developing country(只要公司在发展中国家就需要多加一项,无论这个公司是在做发达国家业务还是发展中国家业务) $k_{ce} = rf + \beta \cdot(E(R_{m})-rf+CRP)$ CRP = sovereign yield spread $\times\frac{\sigma \ of\ equity\ index\ of\ developing\ country}{\sigma\ of\ sovereign\ bond\ market\ in\ terms\ of\ the\ developed\ country\ currency}$ Sovereign yield spread(主权利差) = interest rate of government bond in developing country - interest rate of government bond in developed country Break point of WACC(marginal cost of capital): In reality WACC increases with amount of capital raises. However, the curve is unlikely to be a smooth line. 因为融资是一笔一笔融的,对于一笔融资它的成本是固定的,下一笔会有一个上升 Break point: value at which WACC changes or cost of one source of capital changes Flotation cost(发行成本): Fee changed by investment bankers or brokers when raises capital Flotation cost for debt and preferred stock: normally quite small, not significant Flotation cost for ordinary equity: usually significant, should be deduct as flotation cost(E) as initial cash outflow of the project(L) Measures of Leverage Leverage basics: Definition: a change in one variable leads to greater change in another variable due to fixed cost Types of leverage: Operating leverage: created by operation fixed charge Financial leverage: created by financial fixed charge Leverage increases volatility of company’s earning. It also increases the risk of creditor(EBITA) and shareholders(Net income) Types of risk: Business risk: associated with operating earning Sales risk: uncertainty of revenue due to external factor Operating risk: due to operating fixed cost(e.g. depreciation) Financial risk: due to financial fixed cost(e.g. interest, financial lease) Fixed cost leads to leverage and risk Dividends does not affect risk as it has nothing to do with fixed cost!!! Measurements of leverage: Degree of operating leverage(DOL,经营杠杆系数): A measure of sensitivity of operating income(EBIT) against revenue(EBIT变化率是Revenue变化率的几倍?) DOL = $\frac{\frac{\Delta EBIT}{EBIT}}{\frac{\Delta Revenue}{Revenue}}=\frac{Q(P-V)}{Q(P-V)-F}=\frac{EBIT+F}{EBIT}$ Q: quantity sold P: unit price V: variable cost F: fixed cost DOL = 1 when there is no fixed cost DOL is measured relative to a standard quantity sold($Q_{0}$). This leads to a standard revenue = $Q_{0}\cdot P$ and a standard EBIT We may draw a diagram of DOL against $Q_{0}$ with P, V, F fixed EBIT(Operating income) = Q(P-V) - F When EBIT is negative, DOL is negative DOL is undefined when EBIT=0. It is due to the denominator = 0 DOL gradually reduces to 1 as EBIT increases to infinity Degree of Financial leverage(DFL,财务杠杆系数): A measure of sensitivity of net income against operating income or EBIT(net income变化率是Operating income or EBIT变化率的几倍?) DFL = $\frac{\frac{\Delta Net\ income}{Net\ income}}{\frac{\Delta EBIT}{EBIT}} = \frac{EBIT}{EBIT-Interest}$ When interest&gt;0, DFL is always greater than 1 Degree of total leverage(DTL,总杠杆系数) A measure of sensitivity of net income against revenue(net income变化率是revenue变化率的几倍?) DTL = $\frac{\frac{\Delta Net\ income}{Net\ income}}{\frac{\Delta Revenue}{Revenue}}=\frac{\frac{\Delta EBIT}{EBIT}}{\frac{\Delta Revenue}{Revenue}} \times \frac{\frac{\Delta Net\ income}{Net\ income}}{\frac{\Delta EBIT}{EBIT}}$= DOL $\times$ DFL = $\frac{Q(P-V)}{Q(P-V)-F-Interest}$ Breakeven point: quantity of sales at which net income is zero Quantity of breakeven = $Q_{be} = \frac{Total\ Fixed\ cost}{P-V}$ = $ \frac{Operating\ Fixed\ cost+Financial\ Fixed\ cost}{P-V}$ Operating breakeven point: quantity of sales at which EBIT(operating income) is zero Quantity of operating breakeven = $Q_{obe}=\frac{Operating\ fixed\ cost}{P-V}$ Working Capital Management Liquidity basics: Working capital = Current asset - Current liability Sources of liquidity(meet company’s short-term debt): Primary sources: cash, trade credit(可以欠供应商的钱), short-term investment, bank lines of credit(授信额度) Secondary sources: will change the company’s financial and operating position including: negotiating debt contract(影响未来信誉), selling fixed asset(影响经营活动), filling for bankruptcy protection(经营活动中止) Drags and pulls on liquidity(negative effects on cash flow): Drags on liquidity: delay or reduced inflow; increased borrowing cost Pulls on liquidity: accelerated cash outflow Liquidity management: ability to generate cash when and where is needed Management of cash: Ensure net daily cash to be positive Invest excess cash in short-term securities Short-term securities yield(rate): Discount basis yield = $\frac{Face\ value-Price}{Face\ value}\times \frac{360}{Days}$ Money market yield = $\frac{Face\ value-Price}{Price}\times \frac{360}{Days}$ Bond equivalent yield = $\frac{Face\ value-Price}{Price}\times \frac{365}{Days}$ Bond equivalent yield&gt;Money market yield&gt;Discount basis yield as price &lt; face value Management of account receivable: A ineffective credit management (Too much account receivable) will lead to bad debts A strict credit management(Too little account receivable) will lead to less revenue Approaches to evaluate(评估) management: receivable turnover ratio, account receivable aging schedule(账龄分析, e.g. 90天内收回80%,180天内收回90%…….) Management of inventory: Too low inventory results in lose of sale Too high inventory results in high carrying cost Approaches to evaluate management: inventory turnover ratio, compare with historical performance or other comparable companies Management of account payable: Paying too early results in opportunity cost unless there is a trade discount Paying too late affects the company’s credit record Approaches to evaluate management: payable turnover ratio, compare with historical performance or other comparable companies Trade discount: A company may receive discount for paying account payable earlier. e.g. 2/10 net 50: net amount of account payable must be paid within 50 days but the company will receiver a 2% discount if it is paid within 10 days Cost of trade credit: return of the company by taking the option of paying earlier e.g. Option 1: paying 98 dollar at day 10 so the company is generating 2 dollar in the next 40 days using the 98 dollar principal Option 2: paying 100 dollar at day 50 Return of option 1: $\frac{2}{98}$ Cost of trade credit(Annualized return of option 1) = $^{\frac{40}{365}}\sqrt{(1+\frac{2}{98})}-1 = (1+\frac{2}{98})^{\frac{365}{40}}-1$ More general form = $(1+\frac{Percentage\ of\ discount}{1- Percentage\ of\ discount})^{\frac{365}{days\ of\ holding}}$ If cost of trade credit &gt; short-term investment rate, take option 1 If cost of trade credit &lt; short-term investment rate, take option 2 Management of short-term Financing: sources: uncommitted lines of credit(不承诺借款额), committed lines of credit(承诺借款额), revolving lines of credit(循环借款), collateralized borrowing(抵押贷款), banker’s acceptances(承兑汇票), factoring(应收账款打包出售), commercial paper(商业票据) Introduction to Corporate Governance Internal structure of a corporate: Board of director make broad future plans and employ senior members of the corporate e.g. CEO, CFO to pursuit those plans in more detail. Board of director do not necessarily get involved in the day to day running of the corporate Senior members of the company are involved in the day to day running of the corporate and work with junior level employee to generate profit Corporate governance basics: Definition of corporate governance: System of internal control and procedures that a company is managed. It defines rights, roles and responsibilities. It also minimize and manage conflicting interests between insiders and external shareholders Corporate governance theories: Shareholder theory: corporate’s most important duty is to maximize shareholder’s interests Stakeholder theory: corporate should focus on interests of not only shareholders, but also customers, suppliers, employees and others who have interest in the company(平衡相关方利益) Stakeholders(利益相关方) group: Internal group: shareholders, board of directors, managers and employees External group: creditors, customers, suppliers, Governments/regulatory institutions Shareholders: Focus on maximize profitability and owner’s equity of the company Controlling shareholders: owning over 50% of share Minority shareholders: owning less than 50% of share Board of directors: Elected by shareholders to protect shareholder’s interest Provide strategic direction, serves as link between shareholders and managers, acts as the shareholders monitoring tool within company One-tier structure: Executive director: involved in the daily running of the company, act like a senior manager Non-executive director: not involved in the daily running of the company Two-tier structure: Management board: made up of executive directors, involved in daily running of company Supervisory board(监事会): made up of non-executive directors, responsible of checking management board’s work and performance Committees with in board of directors: Audit committee, Governance committee(监督日常运营), Remuneration committee, Nomination committee(提名潜在未来的董事), risk committee, investment committee Creditors: Focus on stability in company operations and performance Lower risk tolerate than shareholders Stakeholders management: Annual general meeting(AGM): Functions: elect of directors, approve financial statements, vote on the remuneration(薪酬) of the board and senior managers, appoint external auditor, discharge directors Simple majority of votes(&gt;50%) Extraordinary general meeting(EGM): Functions: mergers and acquisitions decision, amendment of company’s bylaw(条款), sale of significant corporate assets or businesses Supermajority of votes(&gt;67% or 75%) Mechanisms of ensuring effective stakeholders management: General meeting Board of director Internal audit and external audit Financial reporting with transparency Polices against related-party transaction(投票时排除有相关利益的董事) Remuneration policies: align interests of managers with shareholders by including a variable component(激励奖金) and claw back provision(若经理犯错可以追回奖金) Contractual(抵押) agreements with creditors Employee law and contracts Contract with customers and suppliers Laws and regulations Relationship between stakeholders: Principal-agent relationship(委托代理关系): Shareholders vs. Manager/BoD: information asymmetry as shareholders not involved in daily running of company Controlling shareholders vs. Minority shareholders: controlling shareholders may make decision based on their own benefits but not minority shareholders e.g. takeover transaction, related-party transaction(doing business with someone controlling shareholders know), dual-class structure(AB股,同股不同权) BoD vs. Manager: information asymmetry as manager is more involved in daily running Shareholder vs. Creditor: shareholders have higher risk tolerance than creditors Other relationship: Customers vs. Shareholders: customers want better service with low cost but shareholders want high profitability Shareholders vs. Government/regulators: legal requirement introduces higher cost Analyst considerations: Factors affecting stakeholders relationship: Market factors: engagement, activism, competition Non-market: legal environment, media Factors related to analysis: Economic ownership and voting control Board of directors performance Interests alignment between shareholders and managers Investors of the company: cross-shareholding(takeover defense), affiliated shareholders(protect against hostile takeover) Strength of shareholder’s rights Management of long-term risk ESG considerations ESG investing: practice of considering environmental, social and governance factors in investment process ESG investment implementation methods: Negative screening: 拒绝投资非ESG企业(如:烟草,酒精) Positive screening: focus on investment with favorable ESG factors Thematic investing: focus on a specific theme related to ESG e.g. clean energy, green technology Full integration: include ESG factor premium into stock valuation Engagement/Active ownership: use shareholder power to push ESG projects in the company]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>CFA</tag>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CFA Financial reporting & Analysis Notes]]></title>
    <url>%2FCFA_Financial_reporting_analysis%2F</url>
    <content type="text"><![CDATA[Introduction to Financial Statement Analysis Users of financial report: Information available for analysis: Financial statement is part of Financial report Footnotes: 披露会计方法(e.g. FIFO, LIFO), 折旧方法, 表中数值的计算过程 MD&amp;A: past performance, future outlook, off-balance-sheet obligations(表外负债:不太可能产生的负债所以不会被计入BS), MD&amp;A don’t need to be audited Audit: provide opinion on financial statements and internal controls(内控) Unqualified opinion: a true and fair view Qualified opinion: make some errors against accounting principal Adverse opinion(否定意见): not present a fair view Disclaimer of opinion(无法表达意见): scope limitation(not enough information provided) Some basic relationships: Assets = Liabilities + Owner’s Equity Net income - Dividends declared = $\Delta$Retained earnings Retained earnings(start of the year) + $\Delta$Retained earnings = Retained earnings(end of the year) Equity = Capital(股本) + Retained earning + Accumulated other comprehensive income(AOCI) Financial Reporting Standards Financial standard-setting bodies(有规则制定权无执法权): Financial Accounting Standards Board(FASB): U.S.GAAP International Accounting Standards Board(IASB): IFRS Regulatory bodies(无规则制定权有执法权): Securities and Exchange Commission(SEC), IOSCO(国际证监会) Duties: protect investors, ensure markets are fair, efficient, transparent, reduce systemic risk SEC forms: S-1: 招股说明书 DEF-14A: 股东会投票委托代理说明 8-K: 重大事项报告 10-K: 企业年报 10-Q: 季度报告 144: 限售股解禁 IFRS framework: Two fundamental characteristics: Relevance Faithful representation Four enhancement characteristics: Comparability: reports are in consistent manner for easy comparison Verifiability: third party can use same method to get same results in the report Timeliness(及时性) Understandability(文字通俗易懂) Comprehensive income: Comprehensive income = Net income + Other comprehensive income(OCI) The following items must be put into OCI: Foreign currency translation gain/loss Unrealised gain/loss from available-for-sale financial assets Revaluation surplus for long-lived asset Net income is the bottom line of Income statement, OCI is added to Net income for Comprehensive income which is the bottom line of comprehensive income statement Net income is transferred to Balance sheet through Retained earnings while OCI is transferred through Accumulated other comprehensive income(AOCI) General features of financial statements: No offsetting(e.g. Asset &amp; Liability can’t offset to give the net value) Going concern basis(永续经营) Accrual basis of accounting(权责发生制) Some useful terms: Unearned revenue(提前收到现金) CL Prepaid expense(提前支付现金) CA Unbilled revenue(延迟收到现金) CA Accrued expense(延迟支付现金) CL Understanding Income Statements Detailed Income statements: Net revenue - Cost of Good Sold(COGS) = Gross Profit - Selling, General &amp; Administrative expense(SG&amp;A) = Operating income +/- Other income(expense) +/- Gain(Loss) +/- Unusual items = Earning before interest and tax(EBIT) - Interest expense = Earning before tax(EBT) - Tax expense = Net income from continued operation +/- Gain(Loss) from discontinued operation =Net income Gain/Loss: income/expenditure not related to daily activities e.g.机械加工公司炒股获利 Non-recurring item: Impairments, gain/loss from the sale of assets Discontinued operation: 要把确定要被出售的业务的日常运营税后利润/损失单独列在EBT之后 在计划出售日和实际出售日期间日常运营产生的利润/损失记为 Gain/Loss from discontinued operation 实际出售日当天非常容易产生Gain/Loss, 这部分要被记为 Non-recurring item because it is gain/loss from the sale of assets Aggressive accounting: earlier revenue recognition, later expense recognition Conservative accounting: later revenue recognition, earlier expense recognition Both aggressive accounting and conservation accounting are biased. Accountant should find a compromised position between two. Five steps in recognizing revenue: Contents: 识别合同内容 识别履约义务 确定交易价格 将交易价格分派到每项履约义务中 每完成一项履约义务,确认一笔收入 A few notes: 如果一项义务有自己的作用且可以与其他义务进行区分,那么这项义务就是独立的 匹配性原则:当确认了合同的一笔收入,其对应的支出也应该同时被确认 谨慎性原则:如果合同规定了奖金,必须非常有信心达到奖金要求时才可以将金额确认 如果中途对合同进行更改,如果合同提供的服务和之前一样那么就是对旧合同的更新(需要追溯调整)否则就是一个新合同 对于中间商(e.g.去哪儿),利润表只可将该公司的服务费记为营收而不可以用(用户总付款-服务成本)这种记账方法来使营收看起来很高,因为中间商没有承担服务风险且没有自由裁量权(自主定价) Earnings per share(EPS): Basic EPS: $\frac{NI-Preference\ dividence}{Weighted \ number \ of \ common \ share \ outstanding}$ 本质是每股流通在外的普通股对应的利润(回购的普通股不算流通) Stock split(拆股)/dividend(增发)/merge(并股)需要对过去进行追溯调整 所有追溯调整完成后, new issue and repurchase is weighted by time 计算时应画时间轴来辅助理解 Diluted EPS: 是一个假想中的参数,如果公司在年底有convertible preferred stock(可转换优先股), convertible debt(可转债), stock options(期权),这些产品可能会在未来转换为普通股从而影响basic EPS. Diluted EPS就是假设这些产品均转为普通股时的EPS(If diluted EPS is greater than basic EPS, diluted EPS = basic EPS) Convertible preferred stock: $$\frac{NI-Total\ preference\ dividence+Dividence\ of\ converted\ preference\ share}{Weighted \ number \ of \ common \ share \ outstanding+Shares\ from\ converted\ preference\ share}$$ Convertible debt: $$\frac{NI-Total\ preference\ dividence+Convertible\ debt\ interest(1-t)}{Weighted \ number \ of \ common \ share \ outstanding+Shares\ from\ converted\ debt}$$ where $t$ is the tax rate Options: $$\frac{NI-Total\ preference\ dividence}{Weighted \ number \ of \ common \ share \ outstanding+\Delta}$$ $\Delta$=Net change in ordinary share due to outstanding option=期权规定回购股数-回购数 如果行使期权,股东必须付款以规定价格购买股票,这部分现金被公司用来以全年平均股价回购股票来分发给行使期权者,但回购数通常小于期权规定股数(因为期权规定单价低),两者差通过发行新普通股来补齐即分母中的$\Delta$ Common-size analysis: 把报表中的每一项以百分比表示(e.g.把IS中每一项除以Revenue) Understanding Balance Sheets Asset: Current asset: can be realized in cash within one year or one operating cycle whichever is greater Non-current asset: cannot be realized in cash within one year or one operating cycle Property, plant and equipment(PP&amp;E) Intangible asset: patents, copyright, goodwill(no amortization) Intangible asset except for goodwill must be amortized(摊销) Measurement of financial asset(计量属性): Historical cost: amount originally paid Amortized cost: adjusted bond issued at premium/discount back to face value Current cost: amount need to pay today for the same asset Realizable cost: price at which the asset can be sold today Fair value(公允价值): use market value when available. Otherwise, use market value of a similar object. If market value of a similar object is still unavailable, use an appropriate valuation method(e.g. DCF) Liquidity: short-term debt repayment ability Solvency: long-term debt repayment ability Financial asset: Classification: Held-to-maturity: 有意愿持有到期(通常为债券) Trading security: 以短期获利为目的而持有 Available-for-sale: 不满足以上两项定义的其他金融资产 Held-to-maturity: Measurement: Amortized cost(实际利率发摊销) Unrealized G/L: N/A(not affected by market value as we are holding it to maturity) Realized G/L: Income statement Trading security: Measurement: fair value Unrealized G/L: Income statement Realized G/L: Income statement Available-for-sale: Measurement: fair value Unrealized G/L: Other comprehensive income(OCI) Realized G/L: Income statement Understanding Cash Flow Statements Classification of cash flow: Cash flow from operating activities(CFO): cash flow from day-to-day activities Cash flow from investing activities(CFI): cash flow from purchasing and selling LTA and investing Cash flow from financing activities(CFF): cash flow from obtaining or repaying capital(融资活动) GAAP standard: CFO: Cash received/paid for daily operation Interest received/paid Dividend received Sale/acquisition of trading security CFI: Sale/acquisition of PP&amp;E, intangible fixed asset Sale/acquisition of financial assets other than trading security Loan made to others(作为投资者进行投资) Principal received from others(作为投资者收回本金) CFF: Principal received from issued debt(作为融资方贷款) Principal repayment for a debt(作为融资方还款) Issue/repurchase of share Dividends paid GAAP vs IFRS: GAAP IFRS Interest received CFO CFO or CFI Interest paid CFO CFO or CFF Dividends paid CFF CFO or CFF Dividends received CFO CFO or CFI Tax paid CFO CFO, CFI or CFF CFO calculation: Direct method: starting from the top of Income statement Beginning inventory + purchase(Unknown) - COGS = Ending inventory Beginning account payable + purchase - closing account payable = Cash paid to supplier(Unknown) Indirect method: starting from Net income Net income + Non cash expenditure(e.g. depreciation, amortization) +/- Non operating item(e.g. gain from selling the old machine, should be CFI) - Increase in current assets + Increase in current liabilities = CFO CFI calculation: CFI = inflow - outflow Inflow(selling price) - NBV = Gain/Loss Historical cost(year start) + purchase - historical cost of asset sold = historical cost(year end) Accumulated depreciation(year start) + depreciation during the year - accumulated depreciation of the asset sold = Accumulated depreciation(year end) CFF calculation: RE year end = RE year start + Net income - Dividends declared(Unknown) Dividends payable year start+ Dividends declared - Dividends paid(Unknown) = Dividends payable year end Significance of cash flow: CFO: an indication of earning quality(主营业务现金流更稳定容易持续) CFI: an indication of growth CFF: the nature of company’s capital source Free cash flow(only need to remember formulae): Definition: cash flow available for distribution after fulfilling obligations and without impacting future growth plans Free cash flow to firm(FCFF) = [NI + Non-cash charge - Working capital investment] - Fixed capital investment+ Interest expense$\times$(1-tax rate) = CFO - Fixed capital investment + Interest expense$\times$(1-tax rate) where working capital investment = $\Delta$current asset - $\Delta$current liability Free cash flow to equity(FCFE) = FCFF - Interest expense$\times$(1-tax rate) + Net debt borrowing = CFO - Fixed capital investment + Net debt borrowing Financial Analysis Techniques Activity ratio(经营效率或周转率): indicates efficiency in using assets to generate revenue Average is found using $\frac{Year\ start\ value\ +\ Year\ end\ value}{2}$ Inventory turnover = $\frac{COGS}{Average\ inventory}$ 越大越好 Days of inventory on hand(DOH) = $\frac{365}{Inventory\ turnover}$ 越小越好 Receivable turnover = $\frac{Revenue}{Average \ receivable}$ 越大越好 Days of sale outstanding(DSO) = $\frac{365}{Receivable \ turnover}$ 越小越好 Payable turnover = $\frac{Purchase}{Average\ payable}$ 越小越好 Number of days of payable = $\frac{365}{Payable \ turnover}$ 越大越好 Total asset turnover = $\frac{Revenue}{Avarage\ total\ assets}$ 越大越好 Fixed asset turnover = $\frac{Revenue}{Avarage\ NBV\ of \ fixed\ assets}$ 越大越好 Working capital turnover = $\frac{Revenue}{Average\ working\ capital}$ 越大越好 where working capital = current asset - current liability Operating cycle = DOH + DSO(从存货入库到全部卖出收到现金) 越小越好 Cash conversion cycle = DOH + DSO - Number of days of payable(现金收回周期) 越小越好 Liquidity ratio(流动性): indicates ability to meet short-term debt obligations Current ratio = $\frac{Current\ asset}{Current \ liability}$ Quick ratio(Acid-test ratio) = $\frac{Cash+Short\ term\ marketable\ security+Account\ receivable}{Current\ liability}$ 只保留易变现的CA Cash ratio = $\frac{Cash+Short\ term\ marketable\ security}{Current\ liability}$只保留非常容易变现的CA Defensive ratio = $\frac{Cash+Short\ term\ marketable\ security+Account\ receivable}{Daily\ cash\ expenditure}$ 易变现的CA够用多少天 Solvency ratio(偿付能力): indicates ability to meet long-term debt obligations and its capital structure Total debt is the sum of interest-bearing short-term liability and long-term debt Debt-to-equity ratio = $\frac{Total\ debt}{Total\ shareholder’s \ equity}$ Debt-to-capital ratio = $\frac{Total\ debt}{Total \ capital}$ = $\frac{Total\ debt}{Total\ debt +Total \ shareholder’s \ equity}$ Debt-to-asset ratio = $\frac{Total\ debt}{Total\ assets}$ Debt-to-EBITDA ratio = $\frac {Total\ debt}{EBITDA}$ Financial leverage(杠杆率) = $\frac{Total\ asset}{Total \ shareholder’s \ equity}$ Interest coverage = $\frac{EBIT}{Interest}$ Fixed charge coverage = $\frac{EBIT+Lease\ payment}{Interest+\ Lease\ payment}$ Profitability ratio(盈利能力): indicates ability to generate profit Gross profit margin = $\frac{Gross\ profit}{Net\ revenue}$ Operating profit margin = $\frac{Operating\ profit}{Net\ revenue}$ Pretax margin = $\frac{EBT}{Net\ revenue}$ Net profit margin = $\frac{Net\ income}{Net\ revenue}$ Return on asset(ROA) by definition = $\frac{NI}{Average\ total\ asset}$ Return on asset(ROA) for analysts = $\frac{NI+Interest(1-tax\ rate)}{Average\ total\ asset}$ Use the ROA by definition formula unless specified user is an analyst Operating ROA = $\frac{Operating \ profit}{Average\ total\ asset}$ Return on equity(ROE) = $\frac{NI}{Average\ total\ equity}$ DuPont analysis: Two-part approach: ROE = $\frac{NI}{Equity}$=$\frac{NI}{Asset}\cdot \frac{Asset}{Equity}$= ROA$\times$ Financial leverage ratio Financial leverage 对ROA有放大作用 Three-part approach: ROE = $\frac{NI}{Equity}$ = $\frac{NI}{Revenue}\cdot \frac{Revenue}{Asset}\cdot \frac{Asset}{Equity}$ = Net profit margin$\times$ Asset turnover$\times$ Financial leverage ratio Five-part approach: ROE = $\frac{NI}{Equity}$= $\frac{NI}{EBT}\cdot \frac{EBT}{EBIT}\cdot \frac{EBIT}{revenue}\cdot \frac{revenue}{asset}\cdot \frac{asset}{Equity}$ = Tax burden$\times$ Interest burden$\times$ EBIT margin$\times$ Asset turnover $\times$ Financial leverage ratio where Tax burden = $\frac{NI}{EBT}$=$\frac{EBT- tax}{EBT}$1 - tax rate ​ Interest burden = $\frac{EBT}{EBIT}$= $\frac{EBIT-Interest}{EBIT}$ = 1-$\frac{1}{Interest\ coverage}$ Equity analysis: Dividends payout ratio = $\frac{Dividends}{Net income}$ Retention rate(利润留存率) = 1 - Dividends payout ratio Sustainable growth rate(可持续增长率) = ROE$\times$ Retention ratio Segment reporting: a company must disclose information in footnotes about any operating segment which constitutes 10% or more of the company’s revenue, profit or asset. Inventories Inventory cost recognition(historical cost): 费用是否可以资本化记为asset取决于这个花费是否是存货达到可出售状态的必要花费 Purchases cost(includes tax, transport insurance etc.) &amp; conversion cost(direct labor, fixed and variable overhead cost) can be capitalized as asset Abnormal waste, storage cost(unless required as part of production), administrative overhead and selling cost can’t be capitalized, instead they are recorded as expense Valuation method: 如果我们卖出了一部分Inventory, 如何确定将这部分应转入COGS的货物的价值? Under IFRS: Specific identification(most accurate but not always possible) FIFO Weighted average cost Under GAAP: Specific identification(most accurate but not always possible) FIFO LIFO Weighted average cost FIFO gives a more accurate Inventory balance sheet reading(留在仓库里存货的价格比较新,更贴近当前日期) while LIFO gives a more accurate Income statement reading(卖出的存货价格比较新) as cost of Inventory is constantly changing. Weighted average cost is always between FIFO cost &amp; LIFO cost Impact of valuation method: Assume unit price of Inventory is rising(very likely to happen in real-world) LIFO FIFO Higher COGS Lower COGS Lower EBIT Higher EBIT Lower Tax Higher Tax Lower Net income Higher Net income Lower Inventory book value Higher Inventory book value Lower Working capital Higher Working capital Higher CFO(less tax paid) Lower CFO(more tax paid) Working capital = CA - CL Cash received from selling is the same for LIFO &amp; FIFO while FIFO pays more tax so it has lower CFO Accounting ratio can be tested in conjugate with valuation method Periodic &amp; perpetual assumption: 如何确认库存中Inventory的总价? Periodic inventory system(实地盘存制度): 全年记录purchase, 在年末数一下库存数,用FIFO,LIFO etc. 算出 Year end inventory, 然后使用 Year start inventory + purchase - COGS(Unknown) = Year end inventory 求出全年的COGS Only end of the year Inventory can be found Perpetual inventory system(永续盘存制度) 全年记录每一次入库$purchase_{i}$, 某一时间点purchase是之前所有$purhcase_{i}$之和; 每出库一次用FIFO,LIFO etc. 算出这次出库的$COGS_{i}$, 全年某一时间点的COGS是之前所有$COGS_{i}$之和, 使用 Year start inventory + purchase - COGS = Inventory at any time of the year(Unknown) Inventory at any time of the year can be found but require more work Under FIFO, we always get the same COGS &amp; Inventory at the end of the year for Periodic inventory system and perpetual inventory system Impairment of inventory: Under IFRS: Net realizable value(NRV) = selling price - selling cost If book value &gt; NRV, book value of inventory is written down to NRV with a loss recognized in the Income statement Can be written up once NRV&gt;book value, but limited to the original cost of inventory(减值可逆) Under GAAP: Replacement cost: the cost of manufacture the same inventory today If replacement cost&gt;NRV, market = NRV NRV If NRV-profit margin&lt;replacement cost&lt;NRV, market = replacement cost NRV - profit margin If replacement cost&lt;NRV- profit margin, market = NRV - profit margin If market&lt;book value, book value of inventory is written down to market with a loss recognized in the Income statement GAAP中减值不可逆 For inventory with an active market it’s possible to record its book value using NRV. A gain or loss is recognized every time there is a change in NRV. It is very different from recoding book value using historical cost as there will be no impairment. LIFO reserve(后进先出储备): By definition: FIFO inventory - LIFO inventory = LIFO reserve = $\Delta$inventory Opening${FIFO}$ + Purchase - COGS${FIFO}$ = Closing$_{FIFO}$………(1) Opening${LIFO}$ + Purchase - COGS${LIFO}$ = Closing$_{LIFO}$……….(2) (1) - (2) = Opening LIFO reserve +COGS${LIFO}$ - COGS${FIFO}$ = Closing LIFO reserve ​ = -$\Delta$LIFO reserve = COGS${FIFO}$ - COGS${LIFO}$ = $\Delta$COGS NI${FIFO}$ = NI${LIFO}$ + $\Delta$LIFO reserve(1-tax rate) RE${FIFO}$ = RE${LIFO}$ + $\Delta$LIFO reserve(1-tax rate) Cash${FIFO}$ = Cash${LIFO}$ - $\Delta$LIFO reserve(tax rate) LIFO liquidation(后进先出储备): In normal situation, $\Delta$LIFO reserve &gt; 0 as unit price of inventory is going up and volume of purchase is going up There are two scenarios that $\Delta$LIFO reserve &lt; 0: Unit price is dropping Volume of purchase &lt; Volume of sale. More specifically, the unit price is going up but there is less units of inventory in the warehouse. We call this scenario LIFO liquidation During LIFO liquidation, $\Delta$LIFO reserve &lt; 0 so COGS${FIFO}$ &gt; COGS${LIFO}$. If we are recoding under LIFO, we will observe a drop in COGS$_{LIFO}$ which contradicts with the fact that unit price of inventory is rising. This will result in a higher profit margin and higher tax. However, the high profit margin is not sustainable as the unit price is actually rising. As an analyst, it is necessary to adjust Income statement to better reflect the company’s profitability. Long-Lived(Non-current) Assets Capitalizing(资本化) &amp; Expensing(费用化): Capitalizing(has future economic benefit) Expenditure can be capitalized as asset on Balance sheet(e.g. purchase of inventory) Asset capitalized today will be transferred to Income statement as depreciation in the future Cash outflow is classified as CFI Expensing(has no future economic benefit): Expenditure is transferred to Income statement today Cash outflow is classified as CFO Cost of tangible asset: How to determine the historical cost of a tangible asset? Costs necessary for the machine to be ready can be capitalized(purchase, tax, insurance, delivery, installation, testing etc.) Costs on improving efficiency of machine can be capitalized(asset enhancement cost) Other costs without future benefit are expense(depreciation, repair(恢复原状而不是提高效率), staff training etc.) Interest incurred due to the acquisition of tangible asset is capitalized as part of the book value of tangible asset and is a CFI out. As an analyst it is worth to treat this interest the same as interests on ordinary activities(expensing, CFO) to better reflect interest coverage ratio Tangible asset depreciation: Residual value: value of the asset in the market when useful life is reached Under IFRS, residual value is allowed to adjust either upward or downward Under GAAP, residual value is only allowed to adjust only downward Straight-line method: Depreciation expense = $\frac{cost-residual\ value}{useful\ life}$ If cost(carrying value), residual value or useful life changes, future depreciation must be re-calculated but no backward adjustment is needed Accelerated depreciation: Depreciation expense = $\frac{2}{usefjul\ life}\times$(original cost - accumulated depreciation) ​=$\frac{2}{usefjul\ life}\times$NBV More depreciation in earlier years and less in later years Units of production: Depreciation expense = $\frac{original\ cost-residual\ value}{capacity\ during\ useful\ life}\times$actual output in current period Depreciation expense is allocated in COGS and SG&amp;A so it won’t be shown as a separated item on the Balance sheet Cost of intangible asset: Research cost is classified as expenditure under both GAAP &amp; IFRS Development cost: IFRS: classified as expenditure unless technical feasibility is verified GAAP: classified as expenditure unless the cost is due to software development. More specifically, cost of software for sale should be classified as expense until technical feasibility is verified and subsequent cost can be capitalized. Cost of software for own use can be capitalized if the project will be completed and use as intended Goodwill = total cost of purchase - fair value of the target company’s net identifiable asset Net identifiable asset = fair value of identifiable assets - fair value of liabilities - contingent liabilities(或有负债) If the target company company already has a goodwill item before purchase, it must be cleared to zero before calculating net identifiable asset No amortization Intangible asset amortization With a finite useful life: Amortized over useful life With a indefinite useful life: No amortization e.g. Goodwill Must conduct impairment test at least annually Impairment of long-lived assets: Long-lived asset is classified into held for use and held for sale. Held for use under IFRS: Net book value(NBV) = cost - past impairment - accumulated depreciation Net realistic value(NRV) = fair value - cost of sale Value in use = PV of future cash flow Recoverable amount is the higher of NRV and value in use If NBV &gt; Recoverable amount, NBV after impairment = recoverable amount and a loss due to impairment is recorded in the income statement Impairment loss can be revered but limited to previously accumulated impairment amount Held for use under GAAP: If NBV &gt; undiscounted future cash flow generated by the asset, NBV after impairment = fair market value(or PV of future cash when market value is not available) Impairment loss cannot be reversed Held for sale: Held for sale asset can be re-classified from held for use asset. An impairment test is conducted on the day of re-classification. If NBV &gt; NRV, NBV after impairment = NRV and a loss is recognized No further depreciation after re-classification Impairment can be recovered under both IFRS &amp; GAAP but limited to previously accumulated impairment amount limited to previously accumulated impairment amount Measurement of long-lived asset: Historical cost model(used above, under GAAP &amp; IFRS) Fair value model(on investment property under IFRS only): Investment property: hold for earning rent and capital appreciation Any change in fair value is recognized as gain/loss in the Income statement No depreciation on assets Revaluation model(Under IFRS only): Fair value on the day of revaluation is recorded as the revaluated cost, accumulated depreciation is cleared to zero Assets depreciation in future years is updated based on the revaluated cost Loss/gain is recognized based on the difference between NBV and fair value If a gain is recognized, it should be recorded as OCI. If there is subsequent loss, OCI must be written-off to zero before recording loss in the income statement. If a loss is recognized, it should be recorded as loss in the income statement. If there is subsequent gain, income statement loss must be written off to zero before gain is recorded on OCI If there is still gain remaining in OCI when assets are sold, it is transferred to Retained earning directly without affecting Net income Exchange of long-lived asset: Cost is recorded at the fair value of the asset it gives up. Example: NBV Fair value A 10 15 B 9 14 Asset A is used an asset with NBV = 10, Fair value = 15 to exchange asset B with NBV = 9, Fair value = 14. For the new owner of B, its NBV is recorded as the fair value of A so 15 and a gain of 5 is recognized For the new owner of A, its NBV is recorded as the fair value of B so 14 and a gain of 5 is recognized Income Taxes Tax basics: Income statement is different from Tax return(纳税申报表) Income statement Tax return Revenue Taxable revenue - Expense - Deductive expense = EBT = Taxable income - Tax expense Tax payable = Net income Tax return follows cash. For example, tax must be paid even though cash is from prepaid revenue. Tax is only deductive when purchase due is paid with cash Deferred tax items: Taxable income and EBT may be different and difference can either be temporary(will be written-off in the future) or permanent Temporary difference leads to deferred tax liability(DTL) and deferred tax asset(DTA). DTL, DTA will be written-off to zero in the end as difference is temporary Permanent difference does not create DTL or DTA DTL: More tax is paid today and less needs to be paid in the future. $\Delta$DTL = 应纳税所得额差异(Taxable income比EBT少的部分)$\times$ future tax rate DTA: Less tax is paid today and more needs to be paid in the future $\Delta$DTA = 可以扣所得额差异(Taxable income比EBT多的部分)$\times$ future tax rate Two very important formulae Tax payable = Taxable income $\times$ Current tax rate 纳税申报表项目 Tax expense = tax payable + $\Delta$DTL - $\Delta$DTA 损益表项目 Tax rate: Statutory tax rate(法定税率): Tax payable = Taxable income $\times$ Current statutory rate Effective tax rate: Tax expense = EBT $\times$ Effective rate where Tax expense = tax payable + $\Delta$DTL - $\Delta$DTA Statutory tax rate = Effective tax rate when there is no permanent difference Tax base(计税基础) &amp; Carrying value(账面价值): Carrying value is the same as net book value 可抵扣taxable income(未来少交税)可以由以下几个原因产生: 现金流出(消费)可以抵扣taxable income 不需要交税的现金流入,例如别人还钱,有现金流入但不需要交税 现在多交税(DTA),可以抵扣未来的税 Tax base of asset: 在未来可以抵扣taxable income的部分(在税务机关眼中值多少钱) Tax base of liability: 在未来不可以抵扣应税收入的部分 例子: 预收账款, 现金提前流入而利润未计入损益表, 提前交税, 均可以在未来抵扣taxable income所以tax base = 0 例子: 应付账款, 现金未流出, 当未来现金流出时均可以抵扣taxable income所以tax base = 0 If there is a temporary difference, carrying value and tax base will be different A very important table: whether DTL or DTA is formed can be determined form this table Carrying value &gt; Tax base Carrying value &lt; Tax base Asset DTL (1) DTA (3) Liability DTA (2) DTL (4) (1): Tax base of an asset is small so less can be deductive in the future. More tax needs to be paid in the future so DTL is formed (2): Tax base of an liability is small so less cannot be deductive in the future. More can be deductive in the future. Less tax needs to be paid in the future so DTA is formed (3): Tax base of an asset is large so more can be deductive in the future. Less tax needs to be paid in the future so DTA is formed (4): Tax base of an liability is large so more cannot be deductive in the future. Less can be deductive in the future. More tax needs to be paid in the future so DTL is formed Summary of finding DTL and DTA: $\Delta$DTL/DTA = Difference between taxable income and EBT $\times$ future tax rate DTL/DTA = Difference between carrying value and tax base $\times$ future tax rate If a company makes a loss this year, a $\Delta$DTA= loss $\times$ future tax rate is formed to deduct future tax Change in statutory tax rate: Current tax rate is used when calculating Tax payable = Taxable income $\times$ current statutory tax rate If there is a change in statutory rate in the future, future tax rate is used when calculating DTL, DTA, $\Delta$DTL, $\Delta$DTA A change is DTL, DTA may be due to: Difference between carrying value and tax base changes while future tax rate stays unchanged Difference between carrying value and tax base stays unchanged while future tax rate changes If there is an announcement of future change in statutory tax rate this year: Historical DTL must be adjusted which contributes part of $\Delta$DTL/DTA. Difference between EBT and Taxable income contributes to the other part of $\Delta$DTL/DTA Another simpler way is using the difference between tax base and carrying value times future statutory rate so no need to worry about two components of $\Delta$DTL/DTA as we can find new DTL/DTA directly Impairment of DTA: If there is a DTA, we can pay less tax in the future but it is on top of the company is generating profit. If the company is making a loss, no tax needs to be paid. DTA becomes unlikely to be written off to zero and it might lose its value so we need to consider impairment(Valuation allowance). Net DTA = DTA - Valuation allowance with a tax expense generated Valuation allowance may be reversed when future earning ability is expected to increase Classification of DTA and DTL: Under GAAP: either current or non-current based on when will be reversed Under IFRS: non current Non-Current(Long-term) Liabilities Bond basics: Bond is recorded using amortized cost Face value(par value): amount that bondholder will receive at maturity Coupon payment = Face value $\times$ Coupon rate Effective rate of interest(ER): the discounting rate which equals issue price of bond and PV of future cash flow; Issue price = $\frac{Interest}{(1+ER)}+\frac{Interest}{(1+ER)^{2}}……+\frac{Face\ value+Interest}{(1+ER)^{n}}$ ER also equals market rate which is the rate of other bonds in the market with same risk Interest expense = Amortized cost at the start of the period $\times$ ER If market rate = coupon rate, issue price = par value. The bond is a par bond If market rate &gt; coupon rate, issue price &lt; par value. The bond is a discount bond If market rate &lt; coupon rate, issue price &gt; par value. The bond is a premium bond Zero-coupon bond(零息债券): a bond with no interest, always issue at discount Debt covenants: restriction imposed on the bond issuer to protect lender e.g. must make principal and interest payment in time; maintain a specified liquidity ratio Bond amortization: Interest expense = Amortized cost at the start of the period $\times$ ER $\Delta$ = Interest expense - Coupon payment $\Delta$ is used to amortized book value of the bond(实际利率法摊销) Amortized cost at The start of the period + $\Delta$ = Amortized cost at The end of the period In order to find the amortized cost at a specific year, there are two methods: Do calculation to find amortized cost in all previous years as well as the specified year Use calculator to find PV of future cash flow with the discounting rate = market rate Features of bond: For a discount bond, its interest expense increases with time and increases faster and faster For a premium bond, its interest expense decreases with time and decreases faster and faster If the market rate changes after bond issuance, we neglect the change and still use the market rate at issuance. Cash flow related to bond: Under GAAP: Interest payment: CFO Principal payment: CFF Under IFRS: Interest payment: CFO or CFF Principal payment: CFF As an analyst, we should not treat coupon payment as CFO because $\Delta$ = Interest expense - Coupon payment so interest expense is the true CFO cash out flow due to interest and $\Delta$ is a CFF item due to amortization For example, If coupon payment = $100 CFO out flow. As an analyst, $100 CFO out flow must be split into $110 interest expense(CFO out flow) and $10 amortization(CFF inflow). The net cash flow stays unchanged Issuance cost(发行成本): Under GAAP: issuance cost is capitalized as asset and allocate to IS over the bond term Under IFRS: Initial bond liability is reduced by the amount of issuance cost, effective rate(market rate) is adjusted. Example: A bond with par value = 1000, coupon rate = 10%, market rate = 8%, issuance cost = 100, principal is paid in 3 years PV of future cash flow = 1052 so a bond item is recorded as liability on BS and we get 1052 cash However, there is a issuance cost of 100, we actually get 952 cash so we can only record the bond item as 952 and adjust effective rate $952 = \frac{100}{(1+ER)}+\frac{100}{(1+ER)^{2}}+\frac{1100}{(1+ER)^{3}}$ so ER = 12% which is higher than the original market rate due to the issuance cost Derecognition of bond(提前终结债券): The bond issuer may redeem bond before maturity by buying bond from bond holder at repurchase price Gain or loss due to repurchase under GAAP = Amortized cost - repurchase price - unamortized issuance cost Lease basics: Lessor(出租人): the owner of the asset Lessee(承租人): use the asset for a specified period of time and pay rent Operating lease: asset is still owned by lessor and rent is paid for right of use Finance lease: lessee purchase an asset with debt(借钱买资产,所有权发生转移) Principal of classification of financial lease: Transfer of ownership of asset Covers major part of the asset’s useful life PV of lease payment equal or exceed fair value of the asset No longer useful to lessor after the lease ends Other types of lease should be classified as operating lease Accounting for lessee: Under IFRS: Only financial lease is allowed Simplified operating lease can be used when there is a short-term lease or lease asset is at low value Under GAAP: Both financial lease and operating lease are allowed Simplified operating lease can be used when there is a short term lease Simplified operating lease under IFRS &amp; GAAP: Nothing is recorded at the start of the lease A CFO outflow(L) and a lease payment(E) expenditure is recorded when there is a payment No depreciation Operating lease under GAAP: PV of future lease payment = X A Lease liability(L)=X and a Right of use(A)=X are recorded at the start of the lease A CFO outflow(L) and a lease payment(E) expenditure is recorded when there is a payment Lease liability and Right of use are amortized by equal amount Amortization = lease liability at the start of the period $\times$ Interest rate - Lease payment No depreciation Financial lease under GAAP &amp; IFRS: PV of future lease payment = X A Lease liability(L)=X and a Right of use(A)=X are recorded at the start of the lease Depreciation of Right of use is calculated every year A cash outflow(L) of Y is paid every year Interest due to lease liability(E) = lease liability at the start of the period $\times$ Interest rate = Z which is the CFO outflow(L) Reminder cash outflow(L) = Y-Z is used to amortize lease liability(A) so it is CFF Summary: Total cash outflow/expense for all the above methods are the same Treatment for lease payment at the start of the year and at the end of the year will be slightly different Interest cost in Financial lease decreases every year and decreases faster and faster CFO in Financial lease decreases every year and decreases faster and faster CFF in Financial lease increases every year and increases faster and faster Accounting for lessor: Under IFRS: Financial lease and operating lease are allowed Under GAAP: Financial lease and operating lease are allowed but financial lease is further split into sales-type and direct finance If lease payments are very likely to be collected and met criteria for Financial lease, it is sales-type If the lease doesn’t meet the criteria for sales-type. Then, if there is either a third-party guaranteed residual value or future lease will cover asset’s cost, it is a direct financing lease If none of these are met, it is an Operating lease Operating lease under IFRS &amp; GAAP: Nothing is recorded at the start of lease A CFO inflow(A) and a Lease revenue(R) receipt is recorded when there is a payment Depreciation of the Lease asset is also recorded every year Financial lease under IFRS &amp; Sales-type lease under GAAP: PV of future lease receipts = X A Investment in lease(A)=X and a Lease revenue(R)=X are recorded at the start of the lease Book value of the lease asset = Y A Asset reduces by Y and a COGS(E)=Y are recorded at the start of the lease A cash inflow(A) of Z is received every year Interest received due to Investment in lease(R) = Investment in lease at the start of the period $\times$ Interest rate = M which is the CFO inflow(A) Reminder cash inflow(A) = Z-M is used to amortize Investment in lease(L) so it is CFI(本质上是还钱) No depreciation Direct financing lease under GAAP: PV of future lease receipts = X A Investment in lease(A)=X and Asset reduces by X are recorded at the start of the lease A cash inflow(A) of Z is received every year Interest received due to Investment in lease(R) = Investment in lease at the start of the period $\times$ Interest rate = M which is the CFO inflow(A) Reminder cash inflow(L) = Z-M is used to amortized Investment in lease(L) so it is CFI(本质上是别人还钱) No depreciation Pension plan: Defined contribution plan(DC plan): Employer’s responsibility is to make fixed contribution(每期存一定数目的钱) to employee’s account and provide sufficient investment vehicles Employee will bear investment risk and company don’t provide guarantee for how much an employee can get after retirement Defined benefit plan(DB plan): Employer’s responsibility is to make sure employee will get a fixed amount of money after retirement and the company don’t necessary need to make regular fixed contribution to employee’s account. Employer bear investment risk. Company provide guarantee for how much an employee can get after retirement. Projected benefit obligation(PBO,预期结付义务): PV of future cash outflow due to pension payment so it is a liability. Fair value of plan assets: how much a company prepared for future pension payment so it is an asset. Fund status = Fair value of plan assets - PBO If Fund status&gt;0, a Net plan asset = Fund status is formed, the company has enough asset ready for future pension payment If Fund status&lt;0, a Net plan liability = Fund status is formed, the company does not have enough asset ready for future pension payment Financial Reporting Quality Financial reporting quality: Provides decision-useful information Information is relevance and faithful Earnings quality: return is sustainable and adequate(企业盈利多且可持续) Ideally, we want both financial reporting quality and earning quality to be high. However, if financial reporting quality is low and earning quality is high, we could question the reliability of earning quality as the financial report is not a faithful representation(既然财报有问题,盈利质量再高也不可信). Fraud triangle: A fraud can only happen with Motivation, opportunity and rationalization(在欺诈者看来正当的理由) Applications of Financial Statement Analysis Assessing credit risk(4C): Capacity(还款能力) Collateral(抵押物) Covenants(合约) Character(还款意愿) Credit score: rating agency use formula that are weighted average of a number of accounting ratio and business characteristics includes: Scale and diversification Operational efficiency: turnover ratios, ROA, operating margin etc. Margin stability: stability of profitability Leverage: financial leverage ratio Equity investment analysis(股票分析): Top-down analysis: 先选择一个宏观行业然后从中挑选合适的股票 Bottom-up analysis: 研究具体几个公司 Investor types: Growth investor: value growth in share price Value investor: value dividends payment Market-oriented investor: not specific preference but oriented by market trend]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>CFA</tag>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CFA Quantitative method Notes]]></title>
    <url>%2FCFA_Quantitative_method%2F</url>
    <content type="text"><![CDATA[Time value of money Applications of interest rate: Required rate of return: minimum rate of return must receive to accept an investment Discount rate: cash in the future is discounted to find the value today Opportunity cost: 因为做了A投资,所以必须放弃B投资,B投资的收益就是opportunity cost Components of interest rate: Nominal risk-free rate(rf) = US Treasury bond(T-bond) rate = real risk-free rate + inflation rate Risk premium = Default risk premium + Liquidity premium + Maturity premium Nominal interest rate = Nominal risk-free rate + Risk premium Effective Annual Rate(EAR): EAR = $(1+\frac{r_{s}}{m})^{m}$ $r_{s}$: nominal rate m: compounding frequency Continuous compounding: EAR = $e^{r_{s}}-1$ Continuous compounding EAR is the maximum return for a given $r_{s}$ Annuity: A set of fixed cash flows Ordinary annuity: cash inflow at the end of each period Annuity due: cash inflow at the beginning of each period Perpetuity(永续年金): never ending cash inflow at the end of each period Present value of a perpetuity with a periodic cash inflow of A = $\frac{A}{r}$ Basic statistics Parameter: any measure of a population characteristic Sample statistics: any measure of a sample characteristic Measurement scales: Nominal scale: no ranking between groups(没有排名) Ordinal scale: there is ranking between groups(有排名) Interval scale: difference between any two scales are equal and can be quantized(前后一名差距相同) Ratio scale: there is a true zero point at the zero scale(真实零点,零点即代表没有) Central tendency: Types of mean: Arithmetic mean: focus on average single-period performance(预测未来一期的收益) Weighted mean Geometric mean: focus on average multi-period performance as it takes into account compounding interest(预测未来多期的收益) Periodic compound return = $\sqrt[n]{(1+R_{1})(1+R_{2})……(1+R_n)}-1$ where $R_{i}$ is the return in each equal period Time weighted return(TWR) = $\sqrt[N]{(1+HPR_{1})(1+HPR_{2})……(1+HPR_{n})}-1$ where HPR: holding period return, N is the total holding time in years TWR is very similar to periodical compound return but holding periods in TWR are not necessarily to be equal Harmonic mean(调和平均数) = $$\bar{X}{Harmonic}=\frac{N}{\sum{i=1}^{N} \frac{1}{X_{i}}}$$ used to find average cost per share purchased at different time(基金定投) Harmonic mean &lt; Geometric mean &lt; Arithmetic mean $\sigma$ 越大,三种平均数之间的差距越大 Median Mode Quantile: a value at or below which a stated fraction(y) of the data lies Location of the value = (n+1)$\frac{y}{100}$ Quartiles: 四分位 Quintiles: 五分位 Deciles: 十分位 Percentiles: 百分位 Dispersion: Range = maxima - minima Mean absolute deviation(MAD) = $\frac{\sum_{i=1}^{n}\left|x_{1}-\bar{x}\right|}{n}$ Population variance= $\sigma^{2}=\frac{\sum_{i=1}^{N}(X_{i}-\mu)^{2}}{N}$ where $\mu$ is the population mean Sample variance = $s^{2}= \frac{\sum_{i=1}^{N}(X_{i}-\bar{X})^{2}}{n-1}$ where $\bar{X}$ is the sample mean, degree of freedom = n-1 Population standard deviation = $\sigma = \sqrt{\frac{\sum_{i=1}^{N}(X_{i}-\mu)^{2}}{N}}$ Sample standard deviation = $s = \sqrt{\frac{\sum_{i=1}^{N}(X_{i}-\bar{X})^{2}}{n-1}}$ Chebyshev’s inequality: minimum percentage of population that lies within k standard deviation of the mean would be $1- \frac{1}{k^{2}}$ Coefficient of variation(CV) = $\frac{S}{\bar{X}}$, standard deviation over mean Sharpe ratio(SR) = $\frac{\bar{R_{p}}-\bar{R_{F}}}{\sigma_{p}}$ where $\bar{R_{P}}$ is the mean return of the portfolio, $\bar{R_{F}}$ is the mean risk-free return, $\sigma_{P}$ is the standard deviation of the portfolio reurn. In other word, it is measuring the excess return earned for every unit of standard deviation Skewness(偏度): Skewness = 0, symmetrical distribution, mean = mode = median Skewness &gt; 0, 尾部右偏(正偏), mode &lt; median &lt; mean Skewness &lt; 0, 尾部左边(负偏), mean &lt; median &lt; mode Kurtosis(峰度): Normal distribution has a kurtosis of 3 Excess kurtosis = kurtosis -3 Leptokurtic: kurtosis&gt;3, more peaked, fatter tail(高尖肥尾) Mesokurtic: kurtosis=3, identical to normal distribution Platykurtic: kurtosis&lt;3, less peaked, thinner tail(低尖瘦尾) Basic probability Random variable: a quantity whose possible values are uncertain Outcome: a result of a random experiment Event: A set of outcomes Exhaustive events(遍历的): events cover all possible outcomes so P(A)=1 Types of probability: Empirical probability: estimate probability based on historical data Priori probability: estimate probability based on logical analysis subjective probability: estimate probability without referencing any data Odds(赔率): Odds for a event E = $\frac{P(E)}{1-P(E)}$ Odds against a event E = $\frac{1-P(E)}{P(E)}$ Multiplication rule: P(A and B)=$P(AB) = P(A|B)P(B)$ If A and B are independent, $P(AB) = P(A)P(B)$ Addition rule: P(A or B) = $P(A+B)=P(A)+P(B)-P(AB)$ If A and B are independent, P(A+B) = P(A)+P(B)-P(A)P(B) Total probability rule: $P(A) = P(A|S_{1})P(S_{1})+P(A|S_{2})P(S_{2})+……P(A|S_{n})P(S_{n})$ where $S_{i}$ must be mutually exclusive and exhaustive so $\sum_{i=1}^{n} s_{i}=1$ Bayes’ Formula: $P(A|B)P(B)=P(B|A)P(A)$ Probability weighted variance: $\sigma ^{2} = P(x_{1})(x_{1}-E(x))^{2}+P(x_{2})(x_{2}-E(x))^{2}……P(x_{n})(x_{n}-E(x))^{2} = E([x-E(x)]^{2}) = E(x^{2})-E(x)^{2}$ Covariance: $Cov(X,Y)=E[(X-E(X))(Y-E(Y)]$ X and Y must appear in pairs Measure the linear relationship between two variables Positive covariance: two variables tend to increase or decrease at the same time Negative covariance: one variable increases when the other decreases Vice versa Zero covariance: no linear relationship between two variables Correlation: Population correlation= $\rho = \frac{Cov(x,y)}{\sigma_{x}\sigma_{y}}$ Sample correlation= r = $\frac{Cov(x,y)}{s_{x}s_{y}}$ Correlation removes the influence of order of magnitude compared to covariance Correlation = 1, perfect positive linear relationship, Correlation = -1, perfect negative linear relationship Probability distribution Discrete distribution: A countable number of outcomes Probability function: 穷举每个outcome的概率 e.g. P(X=1)=0.1,P(X=2)=0.1 etc. Bernoulli random variable: only two outcomes 1 or 0 1 represents success i.e. P(Y=1) = P 0 represents failure i.e. P(Y=0) = 1-P E(Y) = P $\sigma_{Y}$=P(1-P) Binomial distribution: Random variable(X): number of success in Bernoulli trials X ~ B(n,p), Binomial distribution takes two parameters where n is total number of trials and P is success rate $P(X=x)= (nCx)P^{x}(1-P)^{n-x}$ E(X)=nP $\sigma_{X}=nP(1-P)$ Continuous distribution: Outcome is usually a range Probability density function f(x): $P(x_{1}&lt;X&lt;x_{2})=\int ^{x_{2}}{x{1}}f(x)dx$ $P(X=x_{1})=0$ Cumulative probability function F(x): $F(x_{1})=P(X\leq x_{1})=\int ^{x_{1}}_{-\infty}f(x)dx$ Gives the probability of a random variable less or equal to $x_{1}$ Normal distribution: X ~ N($\mu,\sigma$), probability density function is described by two parameters Skewness = 0 Kurtosis = 3 Standard normal distribution(z distribution): $Z = \frac{X-\mu}{\sigma}$ so Z is a random variable as $\mu,\sigma$ are fixed and X is a random variable Z ~ N(0,1) i.e. a normal distribution with zero mean and standard deviation of 1 Lognormal distribution: If X~ N($\mu,\sigma$), $e^{X}$~ lognormal If X​~ lognormal, $ln(X)$ ~ N($\mu,\sigma$) positive skewed Student t distribution(t distribution): X ~ t(n-1) defined by a single parameter n-1(degree of freedom) where n is the sample size Less peaked and fat tail(低峰肥尾) As n increase, t distribution is approaching normal distribution For a given degree of confidence, t distribution has a wider confidence interval than z distribution Shortfall risk: the possibility the portfolio return will be less than $R_{L}$ i.e. P(X&lt;$R_{L}$)=F($R_{L}$) Safety first ratio: distance from the mean return to shortfall level($R_{L}$) in units of standard deviation SF ratio = $\frac{E(R_{P})-R_{L}}{\sigma}$ Sharpe ratio is a special case of SF ratio(when risk free return equals $R_{L}$) Monte Carlo simulation: use randomly generated values without the use of historical data Historical simulation: use randomly selected past data Sampling Types of data: Time-series: same object at different time Cross-sectional: different object at same time Types of sampling: Simple random sampling(简单随机抽样) Stratified random sampling(分层抽样) Sampling error: difference between sample statistics and the actual population parameter Sampling distribution: the distribution of sample statistics(A sample statistics is a random variable so we can draw a probability density function of it) Sampling biases: Data-mining bias: 强行找统计上的关系尽管事实上没有关系,所谓的统计关系只是巧合 Sample selection bias Survivorship bias Look-ahead bias: use data that was not available on the test date Time-period bias: only take samples within a time period will make the result time-period specific Estimator and its properties: Estimator: A random variable that generates estimation of a population parameter For example: sample mean($\bar{X}$) is used to estimate population mean($\mu$) Unbiasedness: expected value of the estimator equals the population parameter Consistency: probability of estimator gets close to the population parameter increases with sample size Efficiency: the unbiased distribution of the estimator with the smallest variance(多次抽样可以产生许多个estimator的distribution,方差最小的distribution我们说它具有efficiency) Central limit theorem: given a population described by any probability distribution with a population mean($\mu$) and variance($\sigma ^{2}$), the sampling distribution of sample mean($\bar{X}$) with a sample size n&gt;30 will be approximately normal with mean=$\mu$ and variance=$\frac{\sigma ^{2}}{n}$ Standard error(standard deviation of the sampling distribution): when population standard deviation($\sigma$) is known: $$\sigma_{x}=\frac{\sigma}{\sqrt{n}}$$ when population standard deviation($\sigma$) is not known, we use sample standard deviation($s$) instead: $$s_{x}=\frac{s}{\sqrt{n}}$$ Change normal distribution into standard normal distribution: $\bar{X}$ ~ N($\mu,\frac{\sigma ^{2}}{n}$) so $\frac{\bar{X}-\mu}{\frac{\sigma}{\sqrt{n}}}$ ~ N(0,1) A very important table: Population distribution Variance of population Small sample size(n&lt;30) Large sample size(n&gt;30) Normal distribution known Normal distribution Normal distribution Normal distribution not known T distribution T distribution Non-normal known Can’t do Normal distribution Non-normal not known Can’t do T distribution Point estimate: used a sample statistics to estimate population parameter directly Confidence interval: Significance level($\alpha$): probability of sample statistics not fall in the confidence interval Degree of confidence(1-$\alpha$): probability of sample statistics will fall in the confidence interval Confidence interval = point estimate $\pm$ reliability factor$\times$ standard error Hypothesis testing Hypothesis testing: An act to test an assumption regarding a population parameter Null hypothesis($H_{0}$): hypothesis to be tested Alternative hypothesis($H_{a}$): the opposite side of null hypothesis so they must be mutually exclusive and exhaustive The ‘=‘ sign must be in null hypothesis and null hypothesis is the assumption we wish to reject Two tailed test: used to test if the population parameter is different from a specific value Example: $H_{0}:\mu = \mu_{0}$, $H_{a}: \mu \not= \mu_{0}$ One tailed test: used to test if the population parameter is greater or less than a specific value Example: $H_{0}:\mu &gt; \mu_{0}$, $H_{a}: \mu \leq \mu_{0}$ rejection region is on the left Example: $H_{0}:\mu &lt; \mu_{0}$, $H_{a}: \mu \geq \mu_{0}$ rejection region is on the right Test statistic: A value calculated to test the null hypothesis Mean of a single population: 假设null hypothesis是正确的,以此为mean构建sample distribution(应用central limit theorem),看实际抽样的sample statistics是否落在significance level($\alpha$)对应的confidence interval以内,若在外面则可以作为依据来reject When population variance is known(Z distribution): $z=\frac{\bar{x}-\mu_{0}}{\frac{\sigma}{\sqrt{n}}}$ When population variance is not known(T distribution): $t_{n-1}=\frac{\bar{X}-\mu_{0}}{\frac{S}{\sqrt{n}}}$ Difference of mean of two independent population(两组数平均数的差为随机变量): T distribution Assume variance of two population are unknow but equal, degree of freedom = $n_{1}+n_{2}-2$ Mean difference of two independent population(两组数中每一对求差,差的平均数为随机变量): T distribution degree of freedom = n-1 Variance of a single population: Chi-square distribution($X^{2}$ distribution) degree of freedom = n-1 Whether variance of two independent population are equal: Fisher distribution($F$ distribution) Test statistics = $\frac{S_{1}^{2}}{S_{2}^{2}}$, $S_{1}$ 和 $S_{2}$ 中大的放在分子以确保test statistics is greater than 1 Degrees of freedom:($n_{1}-1$) and ($n_{2}-1$) Correlation of two independent population sample size must be equal T distribution Test statistics = $\frac{r\sqrt{n-2}}{\sqrt{1-r^{2}}}$ where $r$ is the correlation of the samples degree of freedom = n-2 Decision rule: We assume null hypothesis is true to calculate test statistics If Test statistics is outside the range of critical value, we reject null hypothesis P-value is less than the significance level($\alpha$), we reject null hypothesis Types of result of hypothesis test: Type I error: rejecting null hypothesis when it is true P(Type I error) = significance level($\alpha$) Type II error: fail to reject null hypothesis when it is false p(Type II error) = $\beta$ Correct decision: fail to reject null hypothesis when it is true Power of test: reject the null hypothesis when it is false]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>CFA</tag>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IB Linear Systems and Control notes]]></title>
    <url>%2FIB_Linear_System_and_Control%2F</url>
    <content type="text"><![CDATA[IB Paper 6 Linear Systems &amp; Control NotesThis is my personal notes abstract from the Linear Systems and Control course given by the Department of Engineering, University of Cambridge. This course introduces basic ideas in Linear System and Control Theory. It includes the following topics: Signal &amp; System, Laplace Transform, Impulse Response, Step Response, Transfer Function, Stability &amp; Poles, Frequency Response &amp; Steady State Response, Feedback Control System, Bold Diagram, PID Control, Nyquist Diagram and Feedback Stability. Lectures are given by Dr. Lestas. If you spot any mistake or have any questions, please don’t hesitate to contact me. Many thanks]]></content>
      <categories>
        <category>University notes</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Information</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IB Signal and Data Analysis notes]]></title>
    <url>%2FIB_Signal_and_Data_Analysis%2F</url>
    <content type="text"><![CDATA[IB Paper 6 Signal and Data Analysis NotesThis is my personal notes abstract from the Signal and Data Analysis course given by the Department of Engineering, University of Cambridge. This course introduces basic tools in data analysis including: Fourier’s Series, Fourier’s Transform and Sampling theory. Lectures are given by Dr. Godsill. If you spot any mistake or have any questions, please don’t hesitate to contact me. Many thanks]]></content>
      <categories>
        <category>University notes</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Information</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IB Electromagnetism Waves and Fields notes]]></title>
    <url>%2FIB_EM_waves_and_field%2F</url>
    <content type="text"><![CDATA[IB Paper 5 EM Waves and Fields NotesThis is my personal notes abstract from the EM waves &amp; fields course given by the Department of Engineering, University of Cambridge. This course introduces some concepts on top of the course in IA, it includes the following topics: Transmission lines, Maxwell Equations, EM waves in dielectric, Antennas, Reflection and refraction of EM waves, EM waves in conducting medium. Lectures are given by Dr. Flewitt. If you spot any mistake or have any questions, please don’t hesitate to contact me. Many thanks]]></content>
      <categories>
        <category>University notes</category>
      </categories>
      <tags>
        <tag>Electricity</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IB Electrical Power notes]]></title>
    <url>%2FIB_Electrical_Power%2F</url>
    <content type="text"><![CDATA[IB Paper 5 Electrical Power NotesThis is my personal notes abstract from the Electrical Power course given by the Department of Engineering, University of Cambridge. This course introduces Electrical Power System includes: Three Phase Power Supply, AC Generator(Synchronous Machine), Transmission Line and Induction Motor(Asynchronous Machine). Lectures are given by Dr. Flack. If you spot any mistake or have any questions, please don’t hesitate to contact me. Many thanks]]></content>
      <categories>
        <category>University notes</category>
      </categories>
      <tags>
        <tag>Electricity</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IB Communication Notes]]></title>
    <url>%2FIB_Communication%2F</url>
    <content type="text"><![CDATA[IB Paper 6 Communication NotesThis is my personal notes abstract from the Communication course given by the Department of Engineering, University of Cambridge. This course introduces some basic ideas in Information Engineering includes: Analogue modulation, Frequency modulation, ADC, Baseband modulation &amp; demodulation, Passband modulation &amp; demodulation, Channel coding and Multiple Access. Lectures are given by Dr. Venkataramanan. If you spot any mistake or have any questions, please don’t hesitate to contact me. Many thanks]]></content>
      <categories>
        <category>University notes</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Information</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IB Analogue circuit and devices notes part 1]]></title>
    <url>%2FIB_Analogue_circuit_and_devices_part_1%2F</url>
    <content type="text"><![CDATA[1. Bipolar transistor DC properties p-n junction: p-type silicon: substitute silicon by Group Ⅲ element. Majority charge carrier: holes; minority change carrier: electrons. n-type silicon: substitute silicon by Group Ⅴ element. Majority charge carrier: electrons; minority change carrier: holes. If we put a p-type and a n-type together, a depletion region is formed due to electrons and holes join together. FET(Field effect transistor): Unipolar(either electrons or holes as charge carrier) Gate, drain and source Voltage at gate controls conductivity and can’t sustain large current Operating at low current to amplify voltage Bipolar transistor(三极管): Bipolar(both electrons and holes as charge carrier) Amplify current Base, collector and emitter. Two diodes(n-p &amp; p-n) attached together to form a npn. $I_{B}$ is used to control $I_{C}$ but $I_{B}$ is way smaller than $I_{C}$. Detailed theory for operation: Base voltage is positive with respect to emitter so base-emitter diode is forward biased. Collector-base diode is reversed biased. Electrons can fill up the depletion layer(may be neglected) as base(p type) is very thin. As a result, electrons can flow between collector and emitter. In summary: a small change in base current causes a large change in collector current. The collector current is nearly equal to emitter current. A bit math:$$I_{C}=\alpha I_{E}\I_{E}=I_{C}+I_{B}\I_{C}=\frac {\alpha}{1-\alpha}I_{B}=\beta I_{B}=h_{FE}\cdot I_{B}$$ $\alpha$ is called the common base current gain and ranges from 0.9 to 0.99. $h_{FE}$ is called the current gain and usually range from 20 to 500. 2. Bipolar transistor AC properties DC analysis on BJT: $R_{1}$ is used to set $I_{B}$. $R_{1}=\frac {V_{CC}-V_{BE}}{I_{B}}$ $R_{2}$ is used to set $I_{C}$ and $V_{CE}$. $R_{2}=\frac {V_{CC}-V_{CE}}{I_{C}}$ $V_{CE}$ is normally set to be half of $V_{CC}$. Picking an operating point is in fact selecting $V_{CE}$, $I_{C}$ and $I_{B}$. We can find $V_{BE}$ in a graph after $V_{CE}$ and $I_{C}$ are determined. Values of relevant resistances can be determined after setting $V_{CE}$, $I_{C}$, $I_{B}$ and $V_{BE}$. $V_{CE}$ is the output voltage while $V_{BE}$ is the input voltage. Small signal model(ssm) for BJT: We assume the operating point is already set. For the ssm model, we are not wondering what is actually happening when AC is applied. Instead we’re just modelling the problem using a few parameters. How $I_{C}$ will change if we change $V_{CE}$ and $I_{B}$ slightly. $$\because i_{c}=\left.\frac{\partial I_{c}}{\partial I_{B}}\right|{V{CE}}i_{b}+\left.\frac{\partial I_{c}}{\partial V_{C E}}\right|{I{B}} V_{ce}\$$ $$\frac{\partial I_{c}}{\partial I_{B}}=h_{fe}\$$ $$\frac{\partial I_{c}}{\partial V_{C E}}=h_{oe}\$$ $$\therefore i_{c}=h_{f e} i_{b}+h_{o e} v_{c e}$$ How $V_{BE}$ will change if we change $I_{B}$ and $V_{CE}$ slightly. $$\because v_{be}=\left.\frac{\partial V_{BE}}{\partial I_{B}}\right|{V{CE}}i_{b}+\left.\frac{\partial V_{BE}}{\partial V_{C E}}\right|{I{B}} V_{ce}\$$ $$\frac{\partial V_{BE}}{\partial I_{B}}=h_{ie}\$$ $$\frac{\partial V_{BE}}{\partial V_{CE}}=h_{re}\$$ $$\therefore v_{be}=h_{ie} i_{b}+h_{re} v_{ce}$$ $h_{re}$ can be neglected in most cases. Full ssm diagram: Some tips: All dc parameters are grounded in ssm. $i_{b}$ by defemination is the current flow into $h_{ie}$ rather than the current in base. $i_{b}$ and $i_{c}$ are current so they just flow into the ground. However, $h_{fe}i_{b}$ is a current source so current must flow back. To find input resistance, we must apply a test current at the input terminal with the output terminal open circuited. To find output resistance, we must apply a test current at the output terminal with the input terminal short circuited. We can check if $h_{fe}i_{b}=0$. If so, it means output resistance is simply resistances in parallel. This is because test current $i_{x}$ only comes from $v_{x}$. No other voltage contributes to $i_{x}$. 3. Bipolar transistor circuits design Common emitter amplifier: We may connect $R_{1}$ to collector rather than $V_{CC}$ to improve stability but we are losing some ssm input resistance(a bad thing). Common emitter circuit with an emitter resistance: Use Thevenin theory to find the equivalent circuit of the potential divider $R_{1}$ and $R_{2}$. The emitter resistance $R_{4}$ improve the stability of the circuit but we are losing some gain. A possible way to fix this problem is to add a bypass capacitor across $R_{4}$ Emitter follower: Has a gain of almost unity so can act as a buffer Has large input resistance and small output resistance Source follower(using FET included for completeness): Also has a gain of nearly unity Input resistance and output resistance of source follower are both greater compared to emitter follower 4. Circuit elements of Op-amp Differential amplifier(Long tail pair): Act as the input circuit of the Op-amp and can amplify the difference between voltage sources $v_{1}$ and $v_{2}$. Output voltages are $v_{3}$ and $v_{4}$ The circuit is perfect symmetrical so everything happens on one side also happens on the other side. We can treat $R_{s}$ into two resistors with resistance of $2R_{s}$ in parallel to simplify analysis. Common mode: $v_{1}=v_{2}$ If we increase $v_{1}$ and $v_{2}$ together by the same amount, $I_{bias}$ will also increase so current flows into $R_{S}$ increases. Differential mode: $v_{1}$=$-v_{2}$ If we increase $v_{1}$ and drop $v_{2}$ by the same amount, change of current in each loop cancel out each other so current flow into $R_{S}$ stays unchanged. As a result, $R_{S}$ can be removed in ssm analysis of the differential mode. Common Mode Rejection Ratio(CMRR): $$CMRR = \frac{G_{diff}}{G_{comm}}$$ $G_{diff}$: gain for differential mode signals $G_{comm}$: gain for common mode signals We want CMRR to be as large as possible. EndThese notes are summarized from handouts and lectures of Cambridge University Engineering Tripos part IB Analogue circuit and devices course given by Dr Colm Durkan. If you spot any mistake or have any question, please feel free to get in touch. Many thanks.]]></content>
      <categories>
        <category>University notes</category>
      </categories>
      <tags>
        <tag>Electricity</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python for Finance part 3]]></title>
    <url>%2FPython_for_Finance_3%2F</url>
    <content type="text"><![CDATA[11. Portfolio optimization Monte Carlo Simulation: randomly assign a weight to each security in our portfolio, then calculate the mean daily return, daily return std and Sharp ratio Plot results on a chart showing Return against Volatility and colored by Sharp Ratio. Full code for Monte Carlo: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport yfinance as yfimport datetimefrom math import sqrt#Load dataTESLA = pd.read_csv("Tesla_data.csv",index_col="Date",parse_dates=True)GOOGLE = pd.read_csv("Google_data.csv",index_col="Date",parse_dates=True)GM = pd.read_csv("GM_data.csv",index_col="Date",parse_dates=True)APPLE = pd.read_csv("Apple_data.csv",index_col="Date",parse_dates=True)#Create a new dataframe with adjusted close prices onlydf_close = pd.concat([TESLA["Adj Close"],GOOGLE["Adj Close"],GM["Adj Close"],APPLE["Adj Close"]],axis = 1)df_close.columns = ["TESLA","GOOGLE","GM","APPLE"]#Find daily return in the log scaledf_daily_return = np.log(df_close/df_close.shift(1))#Create several arries to store dataarray_return = np.zeros(5000)array_variance = np.zeros(5000)array_sharp = np.zeros(5000)array_allocation = np.zeros((5000,4))#5000 iteration(Monte Carlo method)for m in range(5000): #Create a random allocation and normalise it. allocation = np.random.random(4) allocation = allocation/np.sum(allocation) #Find the total daily return which has taken into account allocation allo_ret = (df_daily_return*allocation).sum(axis = 1) #Change daily average return to yearly exp_ret = allo_ret.mean()*252 #Find the expected volatility(standard deviation) exp_vol = allo_ret.std()*sqrt(252) #We may also use the line of code below to make calculations faster. #exp_vol = np.sqrt(np.dot(allocation.T, np.dot(df_daily_return.cov() * 252, allocation))) #Store data array_return[m] = exp_ret array_variance[m] = exp_vol array_sharp[m] = exp_ret/exp_vol array_allocation[m] = allocation#Plot dataplt.figure(figsize=(12,8))plt.scatter(array_variance,array_return,c=array_sharp,cmap='plasma')position = array_sharp.argmax()print(array_allocation[position])plt.colorbar(label='Sharpe Ratio')plt.xlabel('Volatility(standard deviation)')plt.ylabel('Return') plt.scatter(array_variance[position],array_return[position],c='blue',s=40,edgecolors='black')plt.show() We can either use arithmetic daily return = $\frac {P_{t}}{P_{t-1}}-1$ or logarithm daily return = $\lg \frac{P_{t}}{P_{t-1}}$ for portfolio optimization. However, logarithm daily return is recommended as it has better performance. Random guessing is not really efficient, we can also use math to find the optimal Sharp Ratio for any given portfolio. The idea of using math is to build a minimizer to find:$$S’ = -\frac{R_{p}-R_{f}}{\sigma_{p}}$$the minimum of the negative of the Sharpe ratio leaving us the maximum of the Sharpe ratio. Full code for minimizer(Scipy): 123456789101112131415161718192021222324252627282930313233343536373839404142434445import numpy as npimport pandas as pdimport matplotlib.pyplot as pltfrom scipy.optimize import minimizefrom math import sqrt#Load dataTESLA = pd.read_csv("Tesla_data.csv",index_col="Date",parse_dates=True)GOOGLE = pd.read_csv("Google_data.csv",index_col="Date",parse_dates=True)GM = pd.read_csv("GM_data.csv",index_col="Date",parse_dates=True)APPLE = pd.read_csv("Apple_data.csv",index_col="Date",parse_dates=True)#Create a new dataframe with adjusted close prices onlydf_close = pd.concat([TESLA["Adj Close"],GOOGLE["Adj Close"],GM["Adj Close"],APPLE["Adj Close"]],axis = 1)df_close.columns = ["TESLA","GOOGLE","GM","APPLE"]#Find daily returndf_daily_return = np.log(df_close/df_close.shift(1))#A function returns sharpe ratiodef get_return_vol_sharp(allocation): allocation = allocation/np.sum(allocation) allo_ret = (df_daily_return*allocation).sum(axis = 1) exp_ret = allo_ret.mean()*252 exp_vol = allo_ret.std()*sqrt(252) exp_sharpe = exp_ret/exp_vol return np.array([exp_ret,exp_vol,exp_sharpe])#Another function returns negaive sharpe ratio so we want to minimise it to maximise sharpe ratiodef neg_sharpe(allocation): return get_return_vol_sharp(allocation)[2] * -1def check_sum(allocation): ''' Returns 0 if sum of weights is 1.0 ''' return np.sum(allocaiton) - 1cons = (&#123;'type':'eq','fun': check_sum&#125;)bounds = ((0, 1), (0, 1), (0, 1), (0, 1))init_guess = [0.25,0.25,0.25,0.25]#opt_results = minimize(neg_sharpe, init_guess, method='SLSQP', bounds=bounds, constraints=cons)opt_results = minimize(neg_sharpe, init_guess, method='SLSQP', bounds=bounds)print(opt_results)print(get_return_vol_sharp(opt_results.x)) Firstly, we need to create a function we wish to maximize. Then create another function returning the negative. This second function is what we want to minimize. constraints = cons is a parameter of the constraint. This means that the value returned from the function must equal to 0 otherwise it will be filtered. We need to set bonds(boundaries) for each input. It is quite helpful and easy to understand as the sum for allocation is 1. Set an initial guess, often we do even allocation. Full code for efficient frontier: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889import numpy as npimport pandas as pdimport matplotlib.pyplot as pltfrom scipy.optimize import minimizefrom math import sqrtimport yfinance as yfimport datetime#Load dataTESLA = pd.read_csv("Tesla_data.csv",index_col="Date",parse_dates=True)GOOGLE = pd.read_csv("Google_data.csv",index_col="Date",parse_dates=True)GM = pd.read_csv("GM_data.csv",index_col="Date",parse_dates=True)APPLE = pd.read_csv("Apple_data.csv",index_col="Date",parse_dates=True)#Create a new dataframe with adjusted close prices onlydf_close = pd.concat([TESLA["Adj Close"],GOOGLE["Adj Close"],GM["Adj Close"],APPLE["Adj Close"]],axis = 1)df_close.columns = ["TESLA","GOOGLE","GM","APPLE"]#Find daily returndf_daily_return = np.log(df_close/df_close.shift(1))#A function returns sharpe ratiodef get_return_vol_sharp(allocation): allocation = allocation/np.sum(allocation) allo_ret = (df_daily_return*allocation).sum(axis = 1) exp_ret = allo_ret.mean()*252 exp_vol = allo_ret.std()*sqrt(252) return np.array([exp_ret,exp_vol])def volati(allocation): return get_return_vol_sharp(allocation)[1]def check_sum(allocation): ''' Returns 0 if sum of weights is 1.0 ''' return np.sum(allocation) - 1bounds = ((0, 1), (0, 1), (0, 1), (0, 1))init_guess = [0.25,0.25,0.25,0.25]y_axis = np.linspace(0,0.4,30)list_x = []for i in y_axis: cons = (&#123;'type':'eq','fun': check_sum&#125;,&#123;'type':'eq','fun': lambda w: get_return_vol_sharp(w)[0] - i&#125;) opt_results = minimize(volati, init_guess, method='SLSQP', bounds=bounds, constraints=cons) list_x.append(opt_results["fun"])#Create several arries to store dataarray_return = np.zeros(3000)array_variance = np.zeros(3000)array_sharp = np.zeros(3000)array_allocation = np.zeros((3000,4))#3000 iteration(Monte Carlo method)for m in range(3000): #Create a random allocation and normalise it. allocation = np.random.random(4) allocation = allocation/np.sum(allocation) #Find the total daily return which has taken into account allocation allo_ret = (df_daily_return*allocation).sum(axis = 1) #Change daily average return to yearly exp_ret = allo_ret.mean()*252 #Find the expected volatility(standard deviation) exp_vol = allo_ret.std()*sqrt(252) #We may also use the line of code below to make calculations faster. #exp_vol = np.sqrt(np.dot(allocation.T, np.dot(df_daily_return.cov() * 252, allocation))) #Store data array_return[m] = exp_ret array_variance[m] = exp_vol array_sharp[m] = exp_ret/exp_vol array_allocation[m] = allocation#Plot dataplt.scatter(array_variance,array_return,c=array_sharp,cmap='plasma')position = array_sharp.argmax()print(array_allocation[position])plt.colorbar(label='Sharpe Ratio')plt.xlabel('Volatility(standard deviation)')plt.ylabel('Return') plt.scatter(array_variance[position],array_return[position],c='blue',s=40,edgecolors='black')plt.plot(list_x,y_axis,'g--',linewidth=3)plt.show() Find the range of y and minimise x within this range to find efficient frontier. 12. Finance concepts Types of funds: ETF(Exchange Traded Funds): Holdings are transparent and public Individuals can trade ETF just like stocks(Liquidity) Expense ratio: 0.01%-0.1% asset under management(AUM) Mutual Funds(公募基金): A pool of funds collected from investors for the purpose of investing in securities Operated by fund managers Normally disclose their holdings once a quarter(may vary) Individuals can trade at the end of the day through broker(掮客) Expense ratio: 0.5%-3% AUM Hedge funds(对冲基金): Alternative investments using pooled funds Less regulation and only open to accredited investors No need to disclose strategy Trading of hedge funds depends on agreements. Expense ratio: 2% of AUM and 20% of the profit Order books: An order is created when you click BUY on your stock trading APP(broker). An order includes the following information: Buy or sell Symbol(sticker) of the stock Number of shares Limit(only buy share under certain price) or market(buy share at the current market price) Price(only required if it is an limit order) The order is sent to exchanges and goes into an order book. Your order may not actually be sent to the exchange due to the reasons below: Order can be done within the broker Order is done within the darkpool(private exchanges between brokers) High frequency trading(HFT): HFT firms make profit using the latency(潜在) differences due to geographical distance. Latency arbitrage: A bank purchases a large amount of share. It needs to send orders to multiple exchanges, it takes some time(2ms) for the order to travel between exchanges. HFT firm builds colocated server to detect this large order so they can send orders to other exchanges faster than the bank. The price is almost guaranteed to go up due to the large buy-in so HFT makes money. Short-selling(抛空): If you believe the price for a share will go down, you can go to the broker and borrow someone else’s share. Sell these shares and buy back when it goes down. You end up making money. However, you will end up losing money if the price goes up. Capital asset pricing model(CAPM): Return of the portfolio: $r_{p}(t) = cw_{i}r_{i}(t)$ We can also image the whole market as a portfolio to find the return of market: $r_{m}(t) = \sum_{i}^{n}w_{m}r_{i}(t)$ where $w_{m}$ is the market capital of a company over the market capital of the market. CAPM equation for a stock: $r_{i}(t) = \beta_{i}r_{m}(t)+\alpha_{i}(t)$ Return of any share is just a weight of the return of market plus $\alpha_{i}$ which is the residual term. We are expecting $\alpha_{i}$ to be zero and we are trying to predict $\alpha_{i}$ CAPM equation for a portfolio: $r_{p}(t) = \beta_{p}r_{m}(t)+\sum_{i}^{n}w_{i}\alpha_{i}(t)$ Full code for CAPM demo: 1234567891011121314151617import numpy as npimport pandas as pdimport matplotlib.pyplot as pltfrom scipy import statsimport pandas_datareader as pdrimport yfinance as yfimport datetimeyf.pdr_override()start = datetime.date(2015,9,30)end = datetime.date(2019,9,30)GM = pdr.get_data_yahoo("GM",start,end)spy = pdr.get_data_yahoo("SPY",start,end)GM["Daily return"] = (GM["Close"]/GM.shift(1)["Close"])-1spy["Daily return"] = (spy["Close"]/spy.shift(1)["Close"])-1beta,alpha,r_value,p_value,std_err = stats.linregress(GM['Daily return'].iloc[1:],spy['Daily return'].iloc[1:])print(beta)print(alpha) A few notes When the price for a share is extremely high, the company may split up a share in to two or three. This will cause a big jump in the share price which will affect our trading algorithm. The price for a stock will go up before dividends pay-out being announced and go down afterwards. This will affect our trading algorithm as well. Adjusted close will remove the influence above. You should use the adjusted close where possible. Survivorship bias: companies with poor performance are removed from S&amp;P 500 as time move on. Leaving only companies with good performance. This will cause bias, making us too optimistic about our strategy. In other words, companies in S&amp;P 500 in 2006 are different from today. EMH(Efficient Market Hypothesis): stocks always trade at their fair value on stock exchanges, making it impossible for investors to either purchase undervalued stocks or sell stocks for inflated prices. The only way to gain higher return is by purchasing riskier investments. We believe EMH is NOT true and market is not 100% efficient otherwise there is no point doing analysis. Besides, large hedge funds keep making money is also evidence that the market is not 100% efficient.]]></content>
      <categories>
        <category>Finance</category>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Finance</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python for Finance part 2]]></title>
    <url>%2FPython_for_Finance_2%2F</url>
    <content type="text"><![CDATA[9. Time series analysis Key words related to time series: Trend: Upward, Horizontal/Stationary and Downward. Seasonality(季节性): repeated trends Cyclical(周期性): trends with no set repetition Statsmodels: import statsmodels.api as sm Demo: Hodrick-Prescott filter: $\min_{\{ \tau_{t}\} }\sum_{t}^{T}\zeta_{t}^{2}+\lambda\sum_{t=1}^{T}\left[\left(\tau_{t}-\tau_{t-1}\right)-\left(\tau_{t-1}-\tau_{t-2}\right)\right]^{2}$ 1234567891011121314151617181920#Fetching datayf.pdr_override()start = datetime.date(2018,1,1)end = datetime.date(2019,9,16)data = pdr.get_data_yahoo("TSLA",start,end)#Applying Hodrick-Prescott filter, We get back a tuple with two elements, the first is the cycle pandas series and the second is the trend pandas series.close_cycle, close_trend = sm.tsa.filters.hpfilter(data["Close"])#Plottingfig,axe = plt.subplots(1,1)#data["Close"].plot(label = "Raw data")#close_cycle.plot(label = "Cycle")close_trend.plot(label = "Trend")data["Close"].rolling(20).mean().plot(label = "20MA")axe.set_xlabel("Price")axe.set_ylabel("Time")axe.set_title("Hodrick-Prescott filter analysis on Tesla")plt.legend()plt.show() Splitting data into two components: trend and cycle. We can find some similarities between the 20MA plot and the trend plot. ETS model(Error-Trend-Seasonality): ETS decomposition: decompose the time series data into those three main factors: Seasonal patterns General trends Error Demo: 123456789101112131415161718192021222324import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport pandas_datareader as pdrimport yfinance as yfimport datetimefrom statsmodels.tsa.seasonal import seasonal_decompose#Fetching datastart = datetime.date(2013,1,1)end = datetime.date(2019,1,1)yf.pdr_override()data = pdr.get_data_yahoo("TSLA",start,end)#Choose whether to use EWMA values#data1["Close"] = data1["Close"].ewm(span = 7).mean()#Filter datesdata1 = data.reset_index()data1 = data1[(data1["Date"].apply(lambda x:x.day == 10))|(data1["Date"].apply(lambda x:x.day == 20)) | (data1["Date"].apply(lambda x:x.day == 30))]data1 = data1.set_index("Date")#Plotting dataseasonal_decompose(data1["Close"],freq = 36,model='multiplicative').plot()plt.show() seasonal_decompose() has two main parameters. freq equals 52 for weekly data, equals 12 for monthly data etc. model has two options, by default it is additive and we can also choose to use multiplicative. I use two sets of data(raw and EWMA) and set frequencies to be every 5 days or every 10 days for comparison purpose. Result: raw data every 5 days, raw data every 10 days, EWMA data every 5 days, EWMA data every 10 days. EWMA model(Exponentially Weighted Moving Average): We have Simple Moving average by using .rolling() in Pandas but it has some cons: Smaller window will still lead to noise. Always lag by the size of the window(missing data at the beginning). Never reach the full peak or valley due to the averaging nature. Can’t estimate future behavior as all SMA does is describing the trend in the past. Key nature about EWMA: Overcome the cons of SMA. Put more weight on values that occurred more recently. The weight applied depends on the actual parameters used and the window size. .ewm() has parameters: com(center of mass); span, halflife and adjust. Formula for the EWMA:$$y_t = \frac{\sum\limits_{i=0}^t w_i x_{t-i}}{\sum\limits_{i=0}^t w_i}$$ $y_{t}$ is the output value at time t $x_{t}$ is the input value at time t All we need to define is $\omega _{i}$ and it depends on the adjust parameter you provided. If adjust = True:$$y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + … + (1 - \alpha)^t x_{0}}{1 + (1 - \alpha) + (1 - \alpha)^2 + … + (1 - \alpha)^t}$$ By default, adjust = True. $0&lt; \alpha &lt;1$ This is basically the same as the first expression. We are taking all historical values into account. $\omega _{i}= (1-\alpha)^{i}$ If adjust = False:$$ \begin{split}y_0 &amp;= x_0 \ y_t &amp;= (1 - \alpha) y_{t-1} + \alpha x_t,\end{split}$$ $0&lt; \alpha &lt;1$ A bit different We only take into account the input at t and the output at t-1 From the above expressions, we still need to determine $\alpha$. There are three ways: Span:$$\alpha = \frac{2}{s + 1},\text{for span}\ s \geq 1$$Span corresponds to what is commonly called an “N-day EWMA”. Center of mass:$$\alpha = \frac{1}{1 + c},\text{for center of mass}\ c \geq 0$$Center of mass has more physical interpretation and can be thought of in terms of span: $c=\frac{s−1}{2}$ Half-life:$$\alpha = 1 - \exp^{\frac{\log 0.5}{h}},\text{for half-life}\ h &gt; 0$$Half-life is the period of time for the exponential weight to reduce to one half. Demo: 12345678910111213141516171819202122import matplotlib.pyplot as pltimport pandas_datareader as pdrimport yfinance as yfimport datetime#Fetching datayf.pdr_override()start = datetime.date(2019,8,1) end = datetime.date(2019,9,16)data = pdr.get_data_yahoo("TSLA",start,end)#Plotting datafig,axe = plt.subplots(1,1)data["Close"].plot(label = "Raw data")#data["Close"].rolling(7).mean().plot(label = "7MA")data["Close"].ewm(span = 7).mean().plot(label = "7EWMA")axe.set_xlabel("Price")axe.set_ylabel("Time")axe.set_title("7 days EWMA analysis on Tesla")plt.legend()plt.show() 10. Sharpe ratio Portfolio: a set of allocations in a variety of securities(shares). Example: 20% Tesla; 50% Apple; 30% GM Key values for a portfolio: Daily return Cumulative return Average daily return Standard deviation of daily return(volatility of daily return) Sharpe ratio Sharpe ratio: A measure for risk-adjusted return. It quantifies the relationship between return and risk. In other words, how much more risk we are facing for a higher return? Formula:$$S = \frac{R_{p}-R_{f}}{\sigma_{p}}$$$R_{p}$: expected portfolio return mean $R_{f}$: Risk-free return $\sigma p$: Portfolio standard deviation In this note, we set $R_{f}=0$ leaving $S = \frac{R_{p}}{\sigma{p}}$ Conservation to annualized Sharp ratio: $ASR = K\times SR$ If we have daily data: K =$\sqrt{252}$ If we have weekly data: K =$\sqrt{52}$ If we have monthly data: K =$\sqrt{12}$ Implanting ideas in Python: 12345678910111213141516171819202122232425262728293031323334import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport pandas_datareader as pdrimport yfinance as yfimport datetimefrom math import sqrt#Fetching datastart = datetime.date(2013,1,1)end = datetime.date(2019,1,1)yf.pdr_override()TESLA = pdr.get_data_yahoo("TSLA",start,end)GOOGLE = pdr.get_data_yahoo("GOOGL",start,end)GM = pdr.get_data_yahoo("GM",start,end)APPLE = pdr.get_data_yahoo("AAPL",start,end)allocation = np.array([0.4,0.2,0.1,0.3])#Set a new dataframe with close prices onlydf = pd.concat([TESLA["Close"],GOOGLE["Close"],GM["Close"],APPLE["Close"]],axis = 1)df.columns = ["TESLA","GOOGLE","GM","APPLE"]#Find daily returndaily_return = ((df/df.shift(1))-1)*allocationTotal_daily_return = daily_return.sum(axis = 1)#Find mean and std of daily returndaily_return_mean = Total_daily_return.mean()daily_return_std = Total_daily_return.std()#Find SR and ASRSR = daily_return_mean/daily_return_stdASR = SR*sqrt(252)print(ASR)]]></content>
      <categories>
        <category>Finance</category>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Finance</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python for Finance part 1]]></title>
    <url>%2FPython_for_Finance_1%2F</url>
    <content type="text"><![CDATA[1. Introduction First do activate pyfinance to activate the conda environment. Then do jupyter notebook to run the note book 2. Python review 0 also means False in python. 0.1 is True [1,2,3] can also means True but [] means False If you have something, we can say it is True. If there is nothing(empty), we can say it is False. .format() 12print("My name is &#123;x&#125;, I am &#123;y&#125; years old".format(y=19,x="Oscar"))print("My name is &#123;&#125;, I am &#123;&#125; years old".format("Oscar",19)) The two methods above are equivalent. Lambda expression: anonymous function, we don’t have to write the whole def structure. Basics: 1234567a = lambda x,y:x+yprint(a(1,2))def plus(x,y): return x+yprint(plus(1,2)) These two methods are equivalent. Jump table: 1234jump = [lambda x:x+1,lambda x:x+2,lambda x:x+3]print(jump[0](1))print(jump[1](1))print(jump[2](1)) map() : takes two arguments, the first argument is a function, the second argument is an iterable object. Each element within the iterable object will be passed in the function respectively. See example below. One way: 12345678def plus(x): return x+2list1 = [1,2,3,4]list2 = []for i in list1: tem = plus(i) list2.append(tem)print(list2) As you can see, super tedious. Using lambda expression and map function: 1print(list(map((lambda x:x+2),[1,2,3,4]))) We can simply make it one line of code only(for demo purpose only, can be hard to read). Don’t forget to put a list() or something similar functions after using map() filter(): similar to map()takes two arguments, a function(must return a Boolean value) and an iterable object. Elements can only pass the filter if the function returns True. See the demo below. 12list1 = [1,2,4,6,7,8]print(list(filter((lambda x:(x%2==0)),list1))) Again, for demo purpose only and don’t forget list(). zip(): we can combine two list into one. See below. 123list1 = [1,2,3]list2 = [4,5,6]print(list(zip(list1,list2))) This gives [(1,4),(2,5),(3,6)]. A useful trick, we can combine two lists of same length into one dictionary. See below. 123list1 = ["one","two","three"]list2 = [1,2,3]print(dict(zip(list1,list2))) This gives {&#39;one&#39;: 1, &#39;two&#39;: 2, &#39;three&#39;: 3} Please view Python basics and Python revision notes for more information about Python. 3. Numpy introductionPlease refer to my Numpy notes. 4. Pandas introductionPlease refer to my Pandas basics notes, Pandas advanced notes and Pandas visualization notes. 5. Matplotlib introductionPlease refer to my Matplotlib notes. 6. Data sources Two ways of obtaining data: Pandas-datareader and Quandl. Pandas-datareader: Documentation: https://pandas-datareader.readthedocs.io/en/latest/index.html Using Pandas-datareader to access Yahoo API: 12345678import pandas_datareader.data as pdrimport yfinance as yfimport datetimeyf.pdr_override()start = datetime.date(2019,1,1).__format__('%Y-%m-%d')end = datetime.date(2019,6,6).__format__('%Y-%m-%d')data = pdr.get_data_yahoo("FB",start,end)print(data.head()) Using Pandas-datareader to access Quandl: 1234567import pandas_datareader.data as pdrimport datetimeapi_key= "Fill in your api key"start = datetime.date(2014,1,1)end = datetime.date(2015,6,6)data = pdr.DataReader("WIKI/FB","quandl",start,end,access_key=api_key)print(data.head()) &quot;WIKI/FB&quot; is the key on Quandl, which is in the format of DB_name/Sticker_name. You can find out these keys on their website. Quandl 12345import datetimeimport quandlquandl.ApiConfig.api_key = "Fill in your api key"data = quandl.get("WIKI/FB")print(data.head()) 7. Pandas with time series data Python datatime basics: refer to my notes. Creating datetime index: df[&quot;A&quot;]=pd.to_date_time(df[&quot;A&quot;],format = &quot;%d/%m/%Y&quot;) to convert a string date object to datetime.date object so it can be manipulated easily using Pandas. format argument gives the format that the string datetime is in. index = pd.DatetimeIndex(list_of_datetime) to convert Python datetime objects to the format that can be used in Pandas as a datetime index. A quick demo: 1234567import pandas as pdimport datetimeimport numpy as nplist1 = [datetime.date(2019,9,12),datetime.date(2019,9,13)]index1 = pd.DatetimeIndex(list1)df = pd.DataFrame(np.random.rand(2,3),columns = ["A","B","C"],index = index1)print(df) Methods of datetime index: df.index.argmax(): return the index of the latest date. df.index.max(): return the latest date. df.index.argmin(): return the index of the earliest date. df.index.min(): return the earliest date. Time resampling(need index to be datetime index): Similar to the groupby method, we can groupby datetime index using year-end frequency etc. In other words, put rows within one year together for aggregate functions. df.resample(rule = &quot;A&quot;).sum() perform aggregate functions just like doing groupby Another example: df.resample(rule = &quot;W&quot;).apply(lambda x:x[0]) List of rules: Alias Description B Business day frequency D Calendar day frequency W Weekly frequency SM Semi-month end frequency(15th and end of month) M Month end frequency Q Quarter end frequency A Year end frequency BA Business year end frequency AS Year start frequency H Hourly frequency T, min Minutely frequency S Secondly frequency L, ms Millisecond frequency U, us Microsecond frequency N, ns Nanosecond frequency df.resample(rule = &quot;A&quot;).mean().plot.bar() a quick bar plot Time shifts(need the index to be datetime.datetime): df = df.shift(periods = 1) push data forward by one day, leaving the first row NaN. In other words, data was on 2019-01-01 is now on 2019-01-02. df = df.shift(periods = -1) push data back by one day, leaving the last row NaN. In other words, data was on 2019-01-02 is now on 2019-01-01. df = df.tshift(freq = &quot;M&quot;) push dates within each month to the end of the month. For example, 2019-01-01 becomes 2019-01-31 and 2019-01-02 becomes 2019-01-31 etc. freq arguments also followed the table above. Rolling average(Moving mean): df[&quot;A&quot;].rolling(window = 5).mean() : This means we are setting the value at row 4 to be the average of row 0 to row 4 and leaving row 0 to row 3 NaN. Similarly, we are setting the value at row 5 to be the average of row 1 to row 5 and keep going. This method can remove noise from the graph and help find a general trend. Quick demo: 123456789101112131415import pandas_datareader.data as pdrimport yfinance as yfimport datetimeimport matplotlib.pyplot as pltyf.pdr_override()start = datetime.date(2019,1,1).__format__('%Y-%m-%d')end = datetime.date(2019,9,15).__format__('%Y-%m-%d')data = pdr.get_data_yahoo("FB",start,end)fig,axe = plt.subplots(1,1)axe.plot(data.index,data["Open"],label = "acutal data")axe.plot(data.index,data["Open"].rolling(14).mean(), label = "rolling data")axe.legend(loc = 0)plt.show() Expanding method: df[&quot;A&quot;].expanding().mean() This means we are setting the value at each row to be the average of all values in previous rows. Quick demo: 12345678910111213141516import pandas_datareader.data as pdrimport yfinance as yfimport datetimeimport matplotlib.pyplot as pltyf.pdr_override()start = datetime.date(2019,1,1).__format__('%Y-%m-%d')end = datetime.date(2019,9,15).__format__('%Y-%m-%d')data = pdr.get_data_yahoo("FB",start,end)fig,axe = plt.subplots(1,1)axe.plot(data.index,data["Open"],label = "acutal data")axe.plot(data.index,data["Open"].rolling(30).mean(), label = "rolling data")axe.plot(data.index,data["Open"].expanding().mean(), label = "expanding data")axe.legend(loc = 0)plt.show() The .rolling() method is more popular than the .expanding() method. Bollinger bands(布林线): General information: Bollinger bands are volatility bands placed above and below the moving average. Volatility is based on the standard deviation. Bands widen when volatility increases and narrow when volatility decreases. Bands are used to determine whether a price movement is significant. Price is relatively high when it is above the upper band and relatively low under the lower band. You shouldn’t use Bollinger bands solely for trading. Full code for plotting: 12345678910111213141516171819202122232425import pandas_datareader.data as pdrimport yfinance as yfimport datetimeimport matplotlib.pyplot as pltyf.pdr_override()start = datetime.date(2019,1,1).__format__('%Y-%m-%d')end = datetime.date(2019,9,15).__format__('%Y-%m-%d')data = pdr.get_data_yahoo("FB",start,end)fig,axe = plt.subplots(1,1)#Source dataaxe.plot(data.index,data["Close"],label = "Source data")#20MAaxe.plot(data.index,data["Close"].rolling(20).mean(), label = "20MA")#Upper bandaxe.plot(data.index,data["Close"].rolling(20).mean()+2*data["Close"].rolling(20).std(), label = "Upper band")#Lower bandaxe.plot(data.index,data["Close"].rolling(20).mean()-2*data["Close"].rolling(20).std(), label = "Lower band")axe.set_xlabel("Time")axe.set_ylabel("Price")axe.set_title("Bollinger bands for Facebook between 1/1/2019 and 15/9/2015")axe.legend(loc = 0)plt.show() 20 days closing moving average is used(20MA) Upper band = 20MA + 2$\times$ std(20 days) Lower band = 20MA - 2$\times$ std(20 days) 8. Notes on the capstone project Two ways of finding the index of the maximum value in a column: data3.sort_values(&quot;Volume&quot;,ascending= False).iloc[0:1].index data3[&quot;Volume&quot;].argmax() Market cap = share price $\times$ total units of stock present A company with higher share price does not necessary be more valuable than the other with a lower share price as we also need to take into account the total units of stock present. Plotting scatter matrix: 12from pandas.plotting import scatter_matrixscatter_matrix(df1,figsize=(16,8),alpha = 0.2,hist_kwds= &#123;'bins':30&#125;) Candlestick chart(K线图): 12345678910111213141516171819202122232425262728293031323334353637383940import matplotlib.pyplot as pltimport pandas_datareader as pdrimport yfinance as yffrom mpl_finance import candlestick_ohlcfrom matplotlib.dates import DateFormatter, date2num, WeekdayLocator, DayLocator, MONDAYimport datetime#Fetching datayf.pdr_override()start = datetime.date(2019,8,16).__format__("%d-%m-%Y")end = datetime.date(2019,9,16).__format__("%d-%m-%Y")data = pdr.get_data_yahoo("TSLA",start,end)#Reset index because there is no .apply() method on datetimeindex, we need to change it into a normal column first.df2 = data.reset_index()#Change datetime.date into integer days so it can be recognised by Matplotlibdf2["date in num"] = df2["Date"].apply(lambda x:date2num(x))#candlestick_ohlc() is taking a list with tuples(date_num,Open,High,Low,Close) insidelist_for_plotting = []for i in range(len(df2["Date"])): info=(float(df2.loc[i,"date in num"]),float(df2.loc[i,"Open"]),float(df2.loc[i,"High"]),float(df2.loc[i,"Low"]),float(df2.loc[i,"Close"])) list_for_plotting.append(info) #Formatting candlestick chartmondays = WeekdayLocator(MONDAY) # major ticks on the mondaysalldays = DayLocator() # minor ticks on the daysweekFormatter = DateFormatter('%b %d') # e.g., Jan 12dayFormatter = DateFormatter('%d') # e.g., 12#Plot itfig, ax = plt.subplots(figsize = (16,8))fig.subplots_adjust(bottom=0.2)ax.xaxis.set_major_locator(mondays)ax.xaxis.set_minor_locator(alldays)ax.xaxis.set_major_formatter(weekFormatter)candlestick_ohlc(ax, list_for_plotting, width=0.6, colorup='g',colordown='r')ax.set_title("Candlestick chart for Tesla between 17/8/2019 and 17/9/2015")plt.show() Daily percentage change(Daily return) = $\frac{P_{t}}{P_{t-1}}-1$ $P_{t}$: price at time t $P_{t-1}$: price at time t-1 Percentage of gain in one day relative to the price of yesterday. If you plot daily return in a histogram and it is wide means high volatility Python code: Method 1: 1df["daily return"] = (df["Close"]/df.shift(1)["Close"]) - 1 Method 2” 1df["daily return"] = df["Close"].pct_change(1) .pct_change(1) means percentage change in a period of 1 day and it is exactly what we do in method 1. Cumulative daily returns: The aggregate amount an investment has gained or lost over time, independent of the period of time involved. Daily return is useful but it doesn’t give a insight into how much a investor is actually making. Cumulative return is computed relatively to the day investment is made. Formula: $R_{c} = \frac{P_{t}}{P_{0}}-1$]]></content>
      <categories>
        <category>Finance</category>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Finance</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pandas visulisation basics]]></title>
    <url>%2Fpandas_visulisation%2F</url>
    <content type="text"><![CDATA[import seaborn as sns to make your plots more stylish(optional). df1[&quot;A&quot;].plot.hist(bins = 30) to produce a histogram from values, y axis will be frequency. df1[&quot;A&quot;].plot.line() to produce a line plot. It is also the graph you get if you do df1[&quot;A&quot;].plot() df1.plot.area(alpha = 0.5) to produce an area plot which is similar to a line plot but the area under the lines is filled. df1.plot.bar() to produce a bar plot df1.plot.scatter(x=&quot;A&quot;,y=&quot;B&quot;,c=&quot;C&quot;) to produce a scatter plot(散布图). Use the argument c to set intensity of the color so we have a scatter plot in 3D. df1.plot.scatter(x=&quot;A&quot;,y=&quot;B&quot;,s=df1[&quot;C&quot;]*100) we can also use sizes of the dots rather than intensity of the color to express values of the third column. df = pd.read_csv(&quot;Filename.csv&quot;,index_col = &quot;A&quot;, parse_dates= True) to read data with datetime information. df.plot.line(xlim = [&quot;2007-01-01&quot;,&quot;2008-01-01&quot;],ylim = [20,50]) set boundaries for x axis and y axis of the plot. Formatting plots with datatime information: Full code: 12345678910111213141516171819202122232425import matplotlib.pyplot as pltimport matplotlib.dates as datesdf = pd.read_csv('mcdonalds.csv',index_col='Date',parse_dates=True)#Slcing date informationidx = df.loc["2007-01-01":"2007-01-29"].index#slicing datadata = df.loc["2007-01-01":"2007-01-29","Adj. Close"]#Creating a plot on Matplotlibfig,axe = plt.subplots(1,1)#A special line of code when ploting time series dataaxe.plot_date(idx,data,"-")#Setting scale and formatting of the minor axisaxe.xaxis.set_minor_locator(dates.DayLocator())axe.xaxis.set_minor_formatter(dates.DateFormatter("%d"))#Setting scale and formatting of the major axisaxe.xaxis.set_major_locator(dates.WeekdayLocator(byweekday=0))axe.xaxis.set_major_formatter(dates.DateFormatter("%A"))#Fixing overlapfig.autofmt_xdate()plt.tight_layout()plt.show() Basically slicing data from the dataframe first. Then, plot and format data again in Matplotlib. import matplotlib.dates as dates the module used for formatting dates 12idx = df.loc["2007-01-01":"2007-01-29"].indexdata = df.loc["2007-01-01":"2007-01-29","Adj. Close"] Slicing dates and values from the dataframe axe.xaxis.set_major_locator(dates.Monthlocator()) setting the scale(刻度) of the major axis and the minor axis. There are: .MinuteLocator(): set minute as the scale .HourLocator(): set hour as the scale .DayLocator(): set day as the scale .WeekdayLocator(byweekday = 0): Set week as the scale and every Monday will be shown .MonthLocator(): Set month as the scale .YearLocator(): Set year as the scale axe.xaxis.set_major_formatter(dates.DateFormatter(&quot;%b-%Y&quot;)) formatting date expression 12axe.xaxis.set_minor_locator(dates.MonthLocator())axe.xaxis.set_minor_locator(dates.DateFormattor("%n")) Works exactly the same for setting minor axis. fig.autofmt_xdate() solve the overlapping problem in the x axis]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python datetime summary]]></title>
    <url>%2Fdatetime_summary%2F</url>
    <content type="text"><![CDATA[import datetime 1. datetime.date datetime.date.today() return the date of today. Accessing year, month and date attributes: 1234a = datetime.date.today()print(a.year)print(a.month)print(a.day) b = datetime.date(Year,Month,Day) create a datetime.date object manually Difference between two datetime.date objects: 12345a = datetime.date.today()b = datetime.date(2019,3,15)diff = a - bprint(diff)print(diff.day) diff is a datetime.timedelta object with day, hour, minute, second and microsecond attributes but you can’t print() these attributes directly. In stead, you need to add datetime.timedelta to datetime.date or datetime.datetime. Compare size between datetime.date objects 123a = datetime.date.today()b = datetime.date(2019,3,15)print(a.__gt__(b)) There are a list of similar methods available: Methods Operators a.__eq__(b) a==b a.__ge__(b) a&gt;=b a.__gt__(b) a&gt;b a.__le__(b) a&lt;b a.__lt__(b) a&lt;=b a.__ne__(b) a!=b datetime.date() methods: .isocalendar() 1234day = datetime.date(2019,9,3)tup_format = day.isocalendar()print(tup_format)#(2019, 36, 2) Returns a tuple in the format of (year, week number, weekday) String formatting .isoformat() 1234day = datetime.date(2019,9,3)str_format = day.isoformat()print(str_format)#"2019-09-03" Change datetime.date into a string(“%Y-%m-%d”) .__format__() 1234day = datetime.date(2019,9,3)str_format = day.__format("%d/%m/%Y")print(str_format)#"03/09/2019" Use the table in the appendix as reference. More control of the string format. .__str__() Does the same as .isoformat() .isoweekday() 1234day = datetime.date(2019,9,3)weekday = day.isoweekday()print(weekday)#2 1 stands for Monday and 2 stands for Tuesday etc. .fromtimestamp() 123456import timeimport datetimestamp = time.time()day = datetime.date.fromtimestamp(stamp)print(day.isoformat())#"2019-09-16" Change a time stamp to datetime.date 2. datetime.time Create a datetime.time() object manually: b = datetime.time(Hour,Minute,Second,microsecond) Accessing hour, minute, second, microsecond attributes 123456a = datetime.time(19,31,30,113232)print(a)print(a.hour)print(a.minute)print(a.second)print(a.microsecond) Compare size between datetime.time objects: works the same as datetime.date String formatting: .__format__(): works the same as datetime.date .__str__(): return a string in Hour:Minute:Second:Mircosecond format. 3. datetime.datetime datetime.datetime() is like a combination of datetime.date and datetime.time Create a datetime.datetime() object manually: 1b = datetime.datetime(Year,Month,Day,Hour,Minute,Second,microsecond) Accessing date and time attributes: 123b = datetime.datetime(2019,9,17,9,13,42,352445)print(b.date())print(b.time()) In other words, splitting datetime.datetime into datetime.date and datetime.time datetime.datetime.now() return the current datetime datetime.datetime.combine(): 1234a = datetime.date(2019,9,17)b = datetime.time(9,13,42,352445)c = datetime.datetime.combine(a,b)print(c) Combine a datetime.date and a datetime.time into a datetime.datetime Difference between two datetime.datetime objects: 12345import datetimea = datetime.datetime.now()b = datetime.datetime(2019,9,17,9,13,42,352445)diff = b-aprint(diff) diff is a datetime.timedelta object, we can also add a datetime.timedelta to another datetime.datetime to obtain a datetime.datetime. 4. Appendix 符号 说明 %y 两位数的年份表示（00-99） %Y 四位数的年份表示（000-9999） %m 月份（01-12） %d 月内中的一天（0-31） %H 24小时制小时数（0-23） %I 12小时制小时数（01-12） %M 分钟数（00=59） %S 秒（00-59） %a 本地简化星期名称 %A 本地完整星期名称 %b 本地简化的月份名称 %B 本地完整的月份名称 %c 本地相应的日期表示和时间表示 %j 年内的一天（001-366） %p 本地A.M.或P.M.的等价符 %U 一年中的星期数（00-53）星期天为星期的开始 %w 星期（0-6），星期天为星期的开始 %W 一年中的星期数（00-53）星期一为星期的开始 %x 本地相应的日期表示 %X 本地相应的时间表示 %Z 当前时区的名称 %% %号本身]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Matplotlib basics]]></title>
    <url>%2FMatplotlib_basics%2F</url>
    <content type="text"><![CDATA[There are two ways of working with Matplotlib: function method and OOP method. import matplotlib.pyplot as plt %matplotlib inline to visualize plots inside the Jupyter notebook. plt.show() to visualize plots in other IDE. Quick examples: Functional method: 123456789import matplotlib.pyplot as pltimport numpy as npx = np.arange(1,10,0.01)y = x**2plt.plot(x,y)plt.xlabel("X Label")plt.ylabel("Y Label")plt.title("Fill in the title")plt.show() Just putting data into plt.plot() Subplot method: 1234567891011import matplotlib.pyplot as pltimport numpy as npx = np.arange(1,10,0.01)y = x**2#First part of the subplot with 1 row and 2 column and the serial number: 1plt.subplot(1,2,1)plt.plot(x,y)#Second part of the subplot with 1 row and 2 column and has the serial number: 2plt.subplot(1,2,2)plt.plot(y,x)plt.show() A bit messy as we are using the function method, everything will be clear after we do the OOP method. OOP method: Full codes: 123456789101112131415161718 import numpy as np import matplotlib.pyplot as plt x = np.arange(1,5,0.1) y = x**2 fig = plt.figure() axes1 = fig.add_axes([0.1,0.1,0.3,0.3]) axes1.set_xlabel("Fill in the name for x axis") axes1.set_ylabel("Fill in the name for y axis") axes1.set_title("Fill in the title") axes1.plot(x,y) axes2 = fig.add_axes([0.5,0.5,0.3,0.3]) axes2.set_xlabel("Fill in the name for x axis") axes2.set_ylabel("Fill in the name for y axis") axes2.set_title("Fill in the title") axes2.plot(y,x)plt.show() fig = plt.figure() creating a figure object, you can consider this as a large canvas we may put multiple axes and plots on the canvas. axes = fig.add_axe([origin_x,origin_y,length_x,length_y]) Creating an axes object on the canvas, we can put graph inside this axes object. It takes four arguments, first two set the origin of the axes, the remainder two determines the length of the axes, where 1.0 is the maximum length of the canvas. A quick example: axes = fig.add_axe[0.1,0.1,0.8,0.8] axes.plot(x,y) plot the graph inside the axis. We have two axis on one canvas. It is very clear and flexible. I highly recommend using the OOP method rather than the function method. .subplots(): Full codes: 12345678910111213141516import numpy as npimport matplotlib.pyplot as pltx = np.arange(1,5,0.1)y = x**2# 1*2 layoutfig,axes = plt.subplots(1,2)axes[0].plot(x,y)axes[1].plot(y,x) plt.tight_layout()plt.show()# 2*1 layoutfig1,axes1 = plt.subplots(2,1)axes1[0].plot(x,y)axes1[1].plot(y,x) plt.tight_layout()plt.show() .subplot() will do the formatting for us when creating multiple axes so we don’t have to fill in .add_axis() manually which is quite laborious. fig,axes = plt.subplots(nrows = 1,ncols = 2) This will automatically set locations of axes on the canvas. We have one row and two columns of axes here(1$\times$2 axes). axes here is an array. We can access individual axes by indexing axes[0] etc. plt.tight_layout() will fix the problem that axes overlapping with each other. I would say just add this line every time you do plt.show()in case. Figure size and DPI(分辨率) fig = plt.figure(figsize = (3,2),dpi = 100) figsize sets the size of the ‘canvas’ and unit is inch. dpi stands for dots per inch, normally we can just use the default dpi. fig,axes = plt.subplots(2,1,figsize = (4,4),dpi = 100) works for .subplots() as well Save the plot: fig.savefig(&quot;filename.png&quot;) to save the plot, also supports .jpg, .pdf etc. Must save the plot before plt.show() Legends(图例): We can put multiple plots in one axe. By adding legends, the graph will become more clear. Full codes: 123456789import matplotlib.pyplot as pltimport numpy as npa = np.arange(0,5,0.1)figure = plt.figure()axe = figure.add_axes([0.1,0.1,0.8,0.8])axe.plot(a,a**2,label = "X^2")axe.plot(a,a**3,label = "X^3")axe.legend(loc = 0)plt.show() add another argument label in axe.plot() axe.legend(loc = 0) before plt.show(). loc argument will pick the best location for the legend to prevent overlapping with plots. Styling: Full codes: 1234567891011121314import matplotlib.pyplot as pltimport numpy as npa = np.arange(0,5,0.1)figure = plt.figure()axe = figure.add_axes([0.1,0.1,0.8,0.8])axe.plot(a,a**2,color = "orange", linewidth = 3, alpha = 0.6, linestyle = "--", marker = "o", markersize = 2, markerfacecolor = "blue", )plt.show() color = &quot;orange&quot; to customize the color of the line, we can also use RGB hex code here for rare colors(Cambridge Blue:-) ). linewidth = 3 to set the width of the line, by default it is 1. alpha = 0.6 to set the transparency of our line, by default it is 1 which means not transparent at all. linestype = &quot;--&quot; to set the style of the line, refer to the doc for other options. marker = &quot;o&quot; to set some markers on the line, refer to the doc for other options. markersize = 2 to set the size of markers. markerfacecolor = &quot;blue&quot; to set the color of markers. Plot range: Full code: 123456789import matplotlib.pyplot as pltimport numpy as npa = np.arange(0,5,0.1)figure = plt.figure()axe = figure.add_axes([0.1,0.1,0.8,0.8])axe.plot(a,a**2)axe.set_xlim([0,5])axe.set_ylim([0,30])plt.show() axe.set_xlim([lower_boundary,higher_boundary]) to set boundaries for the x axis. axe.set_ylim([lower_boundary,higher_boundary]) to set boundaries for the y axis. Further reading: http://www.matplotlib.org - The project web page for matplotlib. https://github.com/matplotlib/matplotlib - The source code for matplotlib. http://matplotlib.org/gallery.html - A large gallery with various types of plots matplotlib can create. Highly recommended! http://www.loria.fr/~rougier/teaching/matplotlib - A good matplotlib tutorial. http://scipy-lectures.github.io/matplotlib/matplotlib.html - Another good matplotlib reference.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Matplotlib</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pandas advanced]]></title>
    <url>%2Fpandas_advanced%2F</url>
    <content type="text"><![CDATA[1. Handling missing data Creating a dataframe with NaN: 12345import numpy as npimport pandas as pddict1 = &#123;"A":[1,2,3],"B":[1,2,np.nan],"C":[1,np.nan,np.nan]&#125;df = pd.DataFrame(dict1)print(df) Drop missing values: df = df.dropna() drop rows with at least one NaN inside df = df.dropna(axis = 1) drop columns with at least one NaN inside df = df.dropna(axis = 1,thresh = 2) The column won’t be dropped if there are at least two non-NaN values in the column. Replace missing values: df = df.fillna(value=&quot;Filled in value&quot;) replace every NaN in the dataframe with a string. df[&quot;B&quot;] = df[&quot;B&quot;].fillna(value=df[&quot;B&quot;].mean()) a very common operation in Pandas, replace NaN with the mean of other values within that column. There are many other Math or Statistical methods you may use to determine values for missing data. 2. Group by method It allows you to group together rows based on values in a column and perform an aggregate function(sum, average, std……) on them. See the example below. ID Value 1 100 1 110 1 120 2 130 2 140 2 150 3 160 3 170 3 180 We can change it into: ID Value 1 330 2 420 3 510 Creating the dataframe: 12345import pandas as pddata = &#123;'Company':['GOOG','GOOG','MSFT','MSFT','FB','FB'], 'Person':['Sam','Charlie','Amy','Vanessa','Carl','Sarah'], 'Sales':[200,120,340,124,243,350]&#125;df = pd.DataFrame(data) Perform aggregate functions: 1234567891011by_Comp = df.groupby("Company")#by_company is not a dataframe but an objectprint(by_Comp.mean())print(by_Comp.std())print(by_Comp.sum())print(by_Comp.count())print(by_Comp.max())print(by_Comp.min())print(by_Comp.count())print(by_Comp.describe())print(df.groupby('Company').sum().loc['GOOG']) A dataframe is returned after performing the aggregate function, so we can perform all dataframe operations on it such as the last line of the code print(by_Comp.describe()) a super powerful aggregate function. It is the sum of all other aggregated functions listed above. 3. Merging, joining and concatenating Creating dataframes 1234567891011121314151617181920212223242526272829303132333435import pandas as pd# Concatenatingdf1 = pd.DataFrame(&#123;'A': ['A0', 'A1', 'A2', 'A3'], 'B': ['B0', 'B1', 'B2', 'B3'], 'C': ['C0', 'C1', 'C2', 'C3'], 'D': ['D0', 'D1', 'D2', 'D3']&#125;, index=[0, 1, 2, 3])df2 = pd.DataFrame(&#123;'A': ['A4', 'A5', 'A6', 'A7'], 'B': ['B4', 'B5', 'B6', 'B7'], 'C': ['C4', 'C5', 'C6', 'C7'], 'D': ['D4', 'D5', 'D6', 'D7']&#125;, index=[4, 5, 6, 7]) df3 = pd.DataFrame(&#123;'A': ['A8', 'A9', 'A10', 'A11'], 'B': ['B8', 'B9', 'B10', 'B11'], 'C': ['C8', 'C9', 'C10', 'C11'], 'D': ['D8', 'D9', 'D10', 'D11']&#125;, index=[8, 9, 10, 11])#Mergingleft = pd.DataFrame(&#123;'key': ['K0', 'K1', 'K2', 'K3'], 'A': ['A0', 'A1', 'A2', 'A3'], 'B': ['B0', 'B1', 'B2', 'B3']&#125;) right = pd.DataFrame(&#123;'key': ['K0', 'K1', 'K2', 'K3'], 'C': ['C0', 'C1', 'C2', 'C3'], 'D': ['D0', 'D1', 'D2', 'D3']&#125;) #Joiningleft1 = pd.DataFrame(&#123;'A': ['A0', 'A1', 'A2'], 'B': ['B0', 'B1', 'B2']&#125;, index=['K0', 'K1', 'K2']) right1 = pd.DataFrame(&#123;'C': ['C0', 'C2', 'C3'], 'D': ['D0', 'D2', 'D3']&#125;, index=['K0', 'K2', 'K3']) Concatenating: simply glues multiple dataframes together. Leaving the missing data NaN, no need to set a column as the key. 12print(pd.concat([df1,df2,df3],axis = 0))print(pd.concat([df1,df2,df3],axis = 1)) When axis = 0, sticking rows together when axis = 1, sticking columns together Merging: combine dataframes together by using a column(s) other than the index column as the key. 1234print(pd.merge(left,right,on = "key",how = 'inner'))print(pd.merge(left,right,on = "key",how = 'outer'))print(pd.merge(left,right,on = "key",how = 'left'))print(pd.merge(left,right,on = "key",how = 'right')) inner: only keep rows which contain keys that appear in both dataframes(intersection; 交集) outer: keep all rows even though keys may only appear in one dataframes(union set; 并集) left: keep every row in the left dataframe and remove rows in the right dataframe whose keys can not be found in the left dataframe(left join in SQL) right: keep every row in the right dataframe and remove rows in the left dataframe whose keys can not be found in the right dataframe(right join in SQL) Joining: very similar to the merging method but the index column is used as the key. 1234print(left1.join(right1, how = "inner"))print(left1.join(right1, how = "outer"))print(left1.join(right1, how = "left"))print(left1.join(right1, how = "right")) 4. Further pandas operations df[&quot;column_name&quot;].unique() return unique values in a column df[&quot;column_name&quot;].nunique() return the number of unique values in a column len(df[&quot;column_name&quot;]) does the same df[&quot;column_name&quot;].value_counts() return how many times each unique value appears .apply(): There are already many built in functions in pandas such as .sum() We can use .apply() to call customized functions or Python built-in functions to the dataframe(series). Example: 1234567891011import pandas as pdimport numpy as npdef by_two(value): return (value*2)df = pd.DataFrame(&#123;'col1':[1,2,3,4],'col2':[444,555,666,444]&#125;)print(df.apply(by_two))df = df['col2'].apply(lambda x: x*2)df = df.apply(str)print(df.apply(len)) Make sure to understand the codes above. df.isnull() returns a dataframe with Boolean value. True if the value is NaN, False otherwise. Pivot table(数据透视表): an advanced Excel technique, not often used. See the example below. Creating the dataframe: 12345data = &#123;'A':['foo','foo','foo','bar','bar','bar'], 'B':['one','one','two','two','one','one'], 'C':['x','y','x','y','x','y'], 'D':[1,3,2,5,4,1]&#125;df = pd.DataFrame(data) A B C D 0 foo one x 1 1 foo one y 3 2 foo two x 2 3 bar two y 5 4 bar one x 4 5 bar one y 1 df.pivot_table(values=&#39;D&#39;,index=[&#39;A&#39;, &#39;B&#39;],columns=[&#39;C&#39;]) It mainly takes three arguments, we can specify which column we want it to become values, index or columns names Pivot table: C X Y A B one 4.0 1.0 bar two NaN 5.0 one 1.0 3.0 foo two 2.0 NaN We have a compound index which are A and B We have column names which are in C Values are allocated according to index and columns 5. Data input &amp; output Main data input: csv pandas data reader Excel HTML SQL CSV stands for Comma Separated Values. CSV: df=pd.read_csv(&quot;filename.csv&quot;) read data from a .csv file df.to_csv(&quot;filename.csv&quot;,index = False) convert a dataframe to csv We normally put index = False, otherwise there will be two columns of index when we .read_csv() again Excel: df=pd.read_excel(&quot;filename.xlsx&quot;,sheetname = &quot;Name_of_the_sheet&quot;) Don’t forget to specify the sheet name. If there are formulae or images in the Excel file, pandas is very likely to crash. df.to_excel(&quot;new_filename.xlsx&quot;,sheet_name = &quot;New_sheet&quot;) A bit wired as the attribute name is sheet_name HTML: A number of packages need to be installed for reading data from HTML 123pip install lxmlpip install html5libpip install BeautifulSoup4 data = pd.read_html(&quot;link_of_the_data&quot;) read data between &lt;table&gt; &lt;/table&gt; This returns a Python list with tables as elements inside. Use data[0] to access them. Data obtained from HTML may get messy. Some operations are needed to tidy up. df.to_html(&quot;filename.html&quot;) convert a dataframe to HTML. SQL database: use external packages such as Pymysql to read data from SQL database.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pandas basics]]></title>
    <url>%2Fpandas_basics%2F</url>
    <content type="text"><![CDATA[Pandas(Python data analysis library) basics 12import numpy as npimport pandas as pd pd.Series() is similar to np.array() but we can assign series with a string or datetime index rather than just numerical index. Convert list, array and dictionary to a series: 1234567891011import numpy as npimport pandas as pdlist1 = [10,20,30,40]array1 = np.array([10,20,30,40])dict1 = &#123;1:10,2:20,3:30,4:40&#125;series1 = pd.Series(list1)series2 = pd.Series(array1)series3 = pd.Series(dict1)print(series1)print(series2)print(series3) By default, we have ascending numerical index Assign index to a series 123456789101112import numpy as npimport pandas as pdindex1 = ["a","b","c","d"]list1 = [10,20,30,40]array1 = np.array([10,20,30,40])dict1 = &#123;"a":10,"b":20,"c":30,"d":40&#125;series1 = pd.Series(list1,index1)series2 = pd.Series(array1,index1)series3 = pd.Series(dict1)print(series1)print(series2)print(series3) We now have a string index &quot;a&quot;, &quot;b&quot;, &quot;c&quot; and &quot;d&quot; Indexing series 123456789import numpy as npimport pandas as pdseries1 = pd.Series([1,2,3,4],["USA","CHINA","UK","IRELAND"])series2 = pd.Series([1,2,3,4],["USA","CHINA","FRANCE","GERMANY"])value = series1["USA"]#value = series1.USAprint(value)series3 = series1 + series2print(series3) There are two ways of indexing, see above. Also, we can do mathematical operations between two series. Pandas will only carry out operations between values with the same index. For those index without a matching index in the other series, their value will be set to NaN. See below CHINA 4.0 FRANCE NaN GERMANY NaN IRELAND NaN UK NaN USA 2.0 The main data structure in pandas is dataframe and it is built on top of series. We could say a dataframe is a number of series that share the same index with each other. Each column or row in a dataframe is a series if we consider it independently. Hard code method for creating a dataframe: Method 1(filling each column in a dictionary): 123456import pandas as pddic1 = &#123;"date":[1,2,3,4,5,6,7,8,9,10], "value":[2,35,64,53,67,64,32,66,87,12], "ratio":[0.2,0.3,0.43,0.52,0.41,0.87,0.12,0.32,0.15,0.76]&#125;df = pd.DataFrame(dic1)print(df) Method 2(filling each row in a list): 123456789101112import pandas as pddf=pd.DataFrame([[1,2,0.2], [2,35,0.3], [3,64,0.43], [4,53,0.52], [5,67,0.41], [6,64,0.87], [7,32,0.12], [8,66,0.32], [9,87,0.15], [10,12,0.76]],columns=['date','value','ratio'])print(df) Another example: 1234import numpy as npimport pandas as pddf = pd.DataFrame(np.random.rand(5,4),columns = ["A","B","C","D"],index = ["CHINA","USA","UK","FRANCE","GERMANY"])print(df) Adding new columns to an existing dataframe df[&#39;new_column&#39;]=(df.old_1+df.old_2) add a new column from existing columns. df[&#39;name_of_new_column&#39;] = list_of_data add a new column into the dataframe directly. df.drop(&quot;column name&quot;,axis = 1) remove a column from the dataframe df.drop([&quot;row_index_1&quot;,&quot;row_index_2&quot;],axis = 0) remove a row from the dataframe df.index return values in the index column of the dataframe. df.columns return all column names of the dataframe. If in the dataframe, we have missing data, we may assign np.nan to it which stands for not an number Slicing columns: df.Name_of_column return all values under a column which is a series. df[&#39;Name_of_column&#39;] does exactly the same. You are encouraged to use this method. df = df[[&#39;Name_of_column_1&#39;,&#39;Name_of_column_2&#39;]] slicing multiple columns from the dataframe The attribute method doesn’t need &quot;&quot; while the index method do. Slicing rows: df.head(n) return first n rows in the dataframe df.tail(n) return last n rows in the dataframe df = df[2:5] slicing the data frame i.e. row 2,3,4 df = df.loc[&quot;index_name&quot;,[&#39;Name_of_column_1&#39;,&#39;Name_of_column_2&#39;]] Extremely useful when values inside the index columns are not numerical. df = df.iloc[from_row:to_row,[Index_of_column_1,Index_of_column_2]] Very similar to .loc[] but we can treat index values as numerical based ascending index even though index values themselves may not be numerical. We must use the index numbers of columns instead of name of columns for .iloc. .loc and .iloc methods are based on indexing a matrix in numpy a[row_index,column_index] Example for .loc and .iloc: 12345import numpy as npimport pandas as pddf = pd.DataFrame(np.random.rand(5,4),columns = ["A","B","C","D"],index = ["CHINA","USA","UK","FRANCE","GERMANY"])print(df.loc[["UK","FRANCE"],["B","C"]])print(df.iloc[2:4,1:3]) These two methods both give data at column “B” and “C” from row “UK” and “FRANCE”. df.loc[row_num,[“Name of the column”]] = new_value modify values in the dataframe df.describle() will return a number of useful statistical data of the dataframe includes: count, mean, std, min, 25% percentile, 50% percentile, 75% percentile and max. df = df.sort_values(Name_of_column,ascending=True) sort the dataframe according to numerical values in the column specified. Filter: Filter by values in a column: df[df[&quot;column_name&quot;]&gt;1.0] applying the conditional selection method. This means return rows in the dataframe where we have a True. Example: 12345import numpy as npimport pandas as pddf = pd.DataFrame(np.random.rand(5,4),columns = ["A","B","C","D"],index = ["CHINA","USA","UK","FRANCE","GERMANY"])print(df[df&gt;0.5])print(df[df["A"]&gt;0.5]) df[df&gt;0.5] will return a dataframe with NaN for values less than 0.5. This is because df&gt;0.5 will return a dataframe. df[df[&quot;A&quot;]&gt;0.5] will only return rows whose values under column A are greater than 0.5. This is because df[&quot;A&quot;]&gt;0.5 will return a pandas series rather than a dataframe. What if we want to put in multiple conditions, we CANNOT simply do df[(df[&quot;A&quot;]&gt;0.5) and (df[&quot;B&quot;]&gt;0.3)] This is because normal python and doesn’t support pandas series. We need to use &amp; for and operator, | for or operator. See the example below: 12345import numpy as npimport pandas as pddf = pd.DataFrame(np.random.rand(5,4),columns = ["A","B","C","D"],index = ["CHINA","USA","UK","FRANCE","GERMANY"])print(df[(df["A"]&gt;0.5) &amp; (df["B"]&gt;0.3)])print(df[(df["A"]&gt;0.5) | (df["B"]&gt;0.3)]) df.rename(columns = &quot;old name&quot;: &quot;new name&quot;, inplace = True) to change a column name df = df.rename(columns = &quot;old name&quot;: &quot;new name&quot;) does exactly the same Change multiple column names: 12new_name = ["new_date","new_value","new_ratio"]df.columns = new_name Treating the dataframe as an iterable object, see the example below: 123for index,row in df.iterrows(): print(index) print(row["A"],row["B"],row["C"],row["D"]) In other words, .iterrows() function will slice each row into pandas series. df = df.reset_index() reset customized index back to numerical ascending index, the old index column will become a new column called &quot;index&quot; of the dataframe. It won’t cause confusion as we need to use df.index for new numerical index column and df[&quot;index&quot;] for old index column. df = df.set_index(“name_of_the_column”) will automatically remove the column we select and make it become the index column. We may use df.index = df[“name_of_the_column”] but we still need to remove the “name_of_the_column” column using df.drop(&quot;name_of_the_column&quot;,axis = 1) Working with compound index: indexing from the outside to inside Producing a dataframe with compound index 123456outside = ['G1','G1','G1','G2','G2','G2']inside = [1,2,3,1,2,3]hier_index = list(zip(outside,inside))hier_index = pd.MultiIndex.from_tuples(hier_index)df = pd.DataFrame(np.random.randn(6,2),index=hier_index,columns=['A','B'])print(df) This will produce the following dataframe with two columns of index. Group Num A B 1 0.153661 0.167638 G1 2 -0.765930 0.962299 3 0.902826 -0.537909 1 -1.549671 0.435253 G2 2 1.259904 -0.447898 3 0.266207 0.412580 If we want to index 0.412580 at the bottom right corner, use: print(df.loc[&quot;G2&quot;].loc[3,&quot;B&quot;]) df.loc[&quot;G2&quot;] returns a dataframe with 3 rows under G2. Do .loc again inside this dataframe. df.index.names = [&#39;Group&#39;,&#39;Num&#39;] assign column names to compound index What if rows with inside index Num=1 are needed? It is a bit tedious to use .loc multiple times. There is another method: print(df.xs(1,level=&#39;Num&#39;)) The level attribute specifies the column inside the compound index.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Numpy notes]]></title>
    <url>%2Fnumpy_notes%2F</url>
    <content type="text"><![CDATA[Numpy(Numerical Python) notes1. Basics import numpy as np The data type in Numpy is called array a = np.array([1,2,3]) to create a new array Alternatively: 1234import numpy as nplist1 = [1,2,3]array1 = np.array(list1)print(array1) a=np.arange(1,12,3) from 1 to 11 with a step of 3 i.e. [1,4,7,10] Super useful in matplotlib. The starting value will be included for sure but the ending value may not be included(depend on step). arange stands for array range a=np.linspace(1,13,5) create an evenly spaced array with 5 values i.e.[1,4,7,10,13] Both, beginning and ending values will be included. a = a.reshape(3,2) change the dimension of an existing array. It means 3 rows and 2 columns here(2d array or matrix). We may also create a 2d array(matrix) manually using a = np.array([[1,2,3],[4,5,6],[7,8,9]]) Alternatively: 123list1 = [(1,2,3),(4,5,6),(7,8,9)]array1 = np.array(list1)print(array1) print(a.shape) will give us the shape of the array. print(a.size) will give us the length of the array kinda similar to len(list1) print(a.dtype) will give us the datatype of elements inside the array. a = np.zeros((3,4)) This creates a 3*4 matrix with zeros. Similarly, we have a = np.ones((3,4)) Be careful, a = np.ones((1,4)) will return a 2d matrix [[1,1,1,1]] . However, a = np.ones(4) will return an 1d array [1,1,1,1]. a = np.random.rand(3,4) create a 3*4 matrix with random decimal values under 1. Each value has the equal possibility being picked. a= np.random.randn(3,4) The difference between np.random.rand() is that the possibility for each value being picked follows the standard normal distribution with mean at 0 and variance equals 1. a = np.random.randint(0,10,5) create an array with 5 elements random integers ranging 0-10. value = np.random.choice(a) will help you choose a random value from the array a. print(a.sum()) will sum up all elements inside the array. print(a.sum(axis=1)) sum up elements in each row (This axis trick also works for min, max, mean and std below) print(a.sum(axis=0)) sum up elements in each column print(a.min()) will give the minimum element. print(a.max()) will give the maximum element. print(a.argmin()) will give the index of the minimum element. print(a.argmax()) will give the index of the maximum element. print(a.mean()) will give the mean of the array. print(a.std()) will give the standard deviation of the array. print(a.ndim) to find the dimension of the array. print a sin function using both numpy and matplotlib: 123456import numpy as npimport matplotlib.pyplot as pltx = np.arange(0,3*np.pi,0.1)y = np.sin(x)plt.plot(x,y)plt.show() 2. Advanced a = a*3 will multiply every element in array by 3. Other Math operations(+,-,/,**) can also be applied this way. There is a lot of math functions in numpy. You can do np.sin(a), np.log(a), np.exp(a), np.sqrt(a) etc. Check the doc for more information Product of metrics is super easy to do in numpy. See the example below 12345678import numpy as npa = np.array([[1,2,3], [4,5,6], [7,8,9]])b = np.array([[1], [2], [3]])print(a.dot(b)) Either a.dot(b) or np.dot(a,b) may be used. It is a good practice to make sure both arrays are 2d before doing dot product Dot product and cross product between two vectors 12345import numpy as npa = np.array([1,2,3])b = np.array([1,2,3])print(np.dot(a,b))print(np.cross(a,b)) Indexing of an array: a=np.array([1,2,3,4,5,6,7,8]) Very similar to Python list print(a[3]) This will return 4. print(a[3:5]) This will return 4, 5. Indexing of the matrix a = np.array([(1,2,3),(4,5,6)]) A bit different from Python, in the format matrix[row,column] print(a[0,2]) This will return 3. print(a[0:,2]) or print(a[0:2,2]) These will return [3, 6]. Broadcasting: super cool, not working for standard Python list. See below: 1234import numpy as npa=np.array([1,2,3,4,5,6,7,8])a[0:3]=20print(a) a becomes [20,20,20,4,5,6,7,8] See the example below. 123456import numpy as npa = np.array([1,2,3,4])b = aa[0:2]=10print(a)print(b) You will find out both a and b are changed even though we didn’t write any code to change b. It is because b=a is in fact setting the pointer of b to the pointer of a(in order to save RAM). If we want to fix this issue. We need to use .copy(). See below. 123456import numpy as npa = np.array([1,2,3,4])b = a.copy()a[0:2]=10print(a)print(b) Conditional selection print(a&gt;1) to test size of elements inside the array. This will automatically compare all elements inside the array with 1 and return True or False for each element. This is the basis for conditional selection. 12345import numpy as npa = np.array([1,2,3,4,5,6,7,8,9])a_compare = a&gt;4b = a[a_compare]print(b) This will give us all elements which are greater than 4. We can shorten the operation above, see below. 1234import numpy as npa = np.array([1,2,3,4,5,6,7,8,9])b = a[a&gt;4]print(b) This trick is used in Pandas a lot. Another example: 123import numpy as npa = np.arange(10,51)print(a[a%2==0]) The identical matrix $I$ is often used, we can produce one using np.eye(3). 3 is the dimension of the identical matrix. In other words, it is a $3\times 3$ matrix. Putting two array together. We can do it in two directions vertically &amp; horizontally Vertically: 12345import numpy as npa = np.array([(1,2,3),(3,4,5)])b = np.array([(1,2,3),(3,4,5)])c = np.vstack((a,b))print(c) Horizontally: 12345import numpy as np a = np.array([(1,2,3),(3,4,5)]) b = np.array([(1,2,3),(3,4,5)]) c = np.hstack((a,b)) print(c) Change 2d array to one dimension 1234import numpy as npa = np.array([(1,2,3),(4,5,6)])a = a.ravel()print(a) We get [1,2,3,4,5,6]]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Finance basics notes]]></title>
    <url>%2Ffinance_basics%2F</url>
    <content type="text"><![CDATA[Week 1The interest rate in general Get money earlier is good because there is opportunity cost, inflation and uncertainty of the financial condition(risk). Interest: we are in fact losing for getting money back later, there need to be something to compensate for our loss. We call it interest. People pay interests for time. Interest rate kinda describes the risk of being patient. What affects interest rates, same as the three things we talked about: opportunity cost(How strong is the economic growth?), inflation rate and level of risk(interest rate is higher during the war while lower during the peaceful time). Interest is the foundation of economics as it describes the cost of time. Everything else is built based on this. Compounding and earning returns over time Compound interest growth exponentially Future value(FV) = $PV\times (1+r)^{n}$ Annual percentage rate(APR), stated rate or nominal rate are the same thing: It means the periodic rate. We can multiply APR and the number of periods. It doesn’t take into account compounding interest. Effective rate: The rate you actually earn if APR is compounded. This is the rate you are actually paying(getting) over a period of time. $R_{effective}=(1+\frac{APR}{n})^{n}$ Discounting future cash present value(PV) = $\frac{FV}{(1+r)^{n}}$ Two things will affect the PV of future cash: interest rates and time. Valuation by discounted cash flow(DCF) DCF is the base for all financial valuation. We can put a price on anything as long as we know when does cash come in? How much cash is coming in? We can use the DCF method to valuate a bond, share etc. As long as we know how much cash will come in in the future, we can discount it back to today and find the total value of a bond. mergers and acquisitions 兼并和收购 Valuation by Comparable Often referred as Comps: Comparable transactions or prices or value-relevant ratio. Quick, easy but dangerous, not as accurate as DCF. $\frac {price}{attribute}$ gives you a ratio of your asset. You can compare this ratio of other asset to estimate the value of your asset. Attributes we may use are: P/E ratio(price earning ratio) earnings yield dividend yield return on assets EBITDA multiples return on asset(ROA) return on equity(ROE) return on invested capital PEG ratio(P/E ratio over the growth in earning) Bond Simple debt instruments that promise interest and face value. We have national bonds(国家债券), corporate bonds, municipal bonds(地方债券) and sovereign bonds(主权债券). Valuate a bond: Map up cash flow Discount them accordingly sum up all discounted cash Mortgage Simple debt instruments, each repayment includes the principal(本金) and the interest. Amortization schedule(贷款分期偿付时间表): Question: Assume a bank charges 7% interest per year. You borrow $10,000 to be repaid in equal yearly instalments of $3810.52 over 3 years. Let’s amortize the loan schedule and compute interest and principal repayments. Solution: Year Payment Interest Principal repayment Balance 0 $0 $0 $0 $10,000 1 $3,810.52 $700 $3,110.52 $6,889.48 2 $3,810.52 $482.26 $3,328.26 $3,561.22 3 $3810.52 $249.29 $3561.22 $0 Create this table and calculate the amount of interest paid, the remainder will be principal repayment. Annuity(年金) Annuities are a series of equal payments at regular intervals. For example, pension payment and monthly mortgage payment. It is calculation is pretty standard, simply change annual rate back to monthly rate and discounting cash. 12345total = 0for i in range(1,121): tem = (500)/((1+0.011715)**i) total+=temprint(total) Python may be used to calculate annuity. To sum up, all these valuation methods are used in the industry. Practitioner put them on different weight according to their confidence of these methods. Week 2Overview of the capital budgeting process The firm uses its assets to generate cash flow(profit). CFO decides how to deal with the cash flow. We may: Pay out to the capital markets to debt holders, bondholders or equity holders through dividends or repurchases. Re-invest within the firm to increase the firm’s profitability. If existing assets are not producing enough cash flow, CFO may decide to issue extra bonds, equity or mortgage in order to pull cash from the capital market into the firm. The science of the capital budgeting process is actually HOW, WHEN, WHERE should the firm spend its money in order to maximize the return to equity holders. Practice for capital budgeting: Arm’s-length(公平交易准则) Objective Transparent Common things to do during the capital budgeting process: Accept or reject a proposal Find the best proposal within a set Rank different proposals Net present value(NPV) Present value(PV) = total present value of all future cash flow of this project Net present value(NPV) = PV - initial investment of this project Decision rule: whether $NPV&gt;0$ In other words, whether money coming in out weight the money going out. Here is an example, discount rate = 10%: Period Cash Flow Present Value 0 $-1500 $-1500 1 $900 $818.18 2 $750 $619.83 Total $150 $-61.99 We have a net cash inflow so the project is profitable but $NPV&lt;0$ so it is not worth doing. In other words, the project is not profitable enough. NPV is the best capital budgeting tool This is because: It includes the effect cash flow, timing, opportunity cost and risk(discount rate). It is an objective, arms-length and transparent metrics(衡量指标) for capital budgeting Sometimes, projects will still be accepted even though $NPV&lt;0$. For example, government policies or environmental cleanup. Payback period Payback period means how long it takes to earn back initial investment(no discount rate included) Decision rule: If the payback period$&lt;X$, we will invest Example: Project Pay back period 0 1 2 3 X $-500 $500 $250 $0 1 Y $-500 $100 $200 $600 3 Z $-500 $300 $400 $400 1.5 It seems that X project has the shortest pay back period but it may not always be reliable. See cons below. Pros: reflect time directly reflects opportunity costs Cons: Neglect cash flow after pay back period neglect timing Neglect risk(no discount rate included) Project Payback period NPV(10%) 0 1 2 3 X $-500 $500 $250 $0 1 $161 Y $-500 $100 $200 $600 3 $207 Z $-500 $300 $400 $400 1.5 $404 ​ If we calculate NPV for these projects, we get a different answer i.e. project Z Pay back period is a weak capital budgeting tool, it often acts as a back up of NPV. Accounting ratios Basically, putting one piece of accounting data over the other piece of accounting data. Example: Return on invested capital(ROIC)= $\frac{NOPAT}{invested ; capital}$ NOPAT stands for net operating profit after tax Return on assets(ROA)= $\frac{net ; income}{total ; asset}$ Return on equity(ROE)=$\frac {ASE}{net ; income}$ ASE stands for average shareholder’s equity Gross margin = $\frac{gross ; profit}{sales}$ Profit margin = $\frac {net ; profit}{net ; sales}$ Profitability index = $\frac {PV; of ; future ; flow}{initial ; investment}$ Pros: Makes numerical sense Reflects the use of capital Cons: Neglect timing(no discount ratio included) Include too much accounting distortions(like depreciation) Neglects risk Accounting ratio is a useful tool but it should act as a back up of NPV as well. Internal rate of return(IRR) IRR is basically the discounting rate which will make NPV = 0. In other words, we discount cash flow harder and harder until NPV reaches naught. IRR is kind of a measure of the resiliency of the project. There is no direct connection between IRR and NPV. A large NPV doesn’t always mean we will have a high IRR. It is always a good practice to put NPV and IRR together IRR holds all the pros of NPV. In addition, it scales NPV into percentage interpretation to make it more intuitive(直观的). However, percentage interpretation may cause problems as well because we don’t know the actual size. For example, 2% of 1billion dollar is greater than 30% of 1000 dollar. WARNING: be careful about using IRR solely when directions of cash flow are often reversed. Project Year 0 Year 1 IRR NPV(10%) X $-400 $500 25% $54.54 Y $400 $-500 25% $-54.54 Project X is a standard case. Project Y is like issuing a mortgage of $400 at year 0 and pay back $500 at year 1. They both have the IRR but their NPV are opposite. That is another reason why we often present IRR together with NPV. There is a chance that we can have multiple IRR or no IRR because we are solving a polynomial equation. Math :) We can calculate NPV, IRR using built-in functions in Microsoft Excel. Sensitivity analysis Most CFOs rely on multiple metrics. Everything depends on forecasts while all forecasts are technically wrong as there is always uncertainty in the financial market. Forecasts depend on assumptions. Sensitivity analysis focus on how forecast results will change if assumptions changed slightly. See the example below Time Pessimistic Expected Optimistic 0 -$6,000 -$5,000 -$5,000 1 $2,500 $3,200 $4,000 2 $2,000 $2,500 $3,000 3 $1,000 $1,200 $2,000 4 $1,000 $1,200 $1,500 5 $1,000 $1,200 $1,500 NPV(15%) $-587 $1,745 $3,665 We’ve got three different NPV depending on the assumptions we made and our forecasts make more sense. Week 3Overview of financial statements Balance sheet What does the firm own? Assets = Liabilities + owner’s Equity There are three types of asset: current asset, fixed asset and other asset. There are three types of liabilities: current liability, long-term liability and shareholder’s equity. Profit and loss statement Whether the firm is making money? EBITDA(Earning before interest, tax, depreciation and amortization) = Net sale(Revenue) - Cost of goods sold - SG&amp;A expense(Selling, General &amp; Administrative expense) EBIT(Earning before interest and tax) = EBITBDA - Depreciation - Amortization Taxable income = EBIT - Interest expense Net income(profit) = Taxable income - Tax - Dividends Cash flow statement Accrual method(权责发生制) of accounting. Reports on cash movements Reconciles cash movement between balance sheet and P/L statement Hunting for cash creation Having earnings doesn’t equal to having cash. It is due to the accrual method used in accounting. Sales are booked before cash actually comes in and there are non-cash items. We really need to find free cash flow because all our tools of discounting cash and capital budgeting depend on cash flow. Without cash, those formulae are useless. Free cash flow(FCF) will tell us how much cash is there actually in the business. FCF = Operating Profit(after tax) - Increase in working capital + Depreciation - Capital expenditure + After-tax salvage value(税后残值) Working capital = Non-cash current asset - Current liability Salvage value is the book value of an asset less depreciation. It is only included in FCF formula if assets are sold at the end of the project. Working with capital adjustment Increase in current liability is good for cash. Increase in current asset is bad for cash. Working capital is an opportunity cost, you have some net current asset in your hand but you can’t change it into cash to generate profit. Depreciation and capital expenditure(income) Depreciation represents losing value due to wear and tear and it is a non-cash expenditure. Amortization is kinda similar, it represents ‘depreciation’ for intangible assets. Capital expenditure is a cash expenditure and it is not treated as expenditure in accounting often due to its large numerical size. Salvage value of an asset is also an opportunity cost, we want to change it back to cash at the end of the project. It is the opposite of capital expenditure. Taxes Taxes are real cash flow. All expenses shield revenue from tax, a firm should make use of all its shields. Interest paid for debts can deduct tax and it’s part of the reason why debt is so attractive to firms. Example of free cash flow Year 0 1 2 3 Revenue $500 $500 $500 Total costs $300 $300 $300 Depreciation $100 $100 $100 EBIT $100 $100 $100 Taxes(30%) $30 $30 $30 NOPAT $70 $70 $70 Capital spending $500 $0 $0 $0 Net PP&amp;E $500 $400 $300 $200 Cash from operations $0 $170 $170 $170 Working capital $150 $100 $50 $0 Asset sales $0 $0 $0 $200 Free cash flow -$650 $220 $220 $420 NOPAT: net operating profit after tax Cash from operations = Depreciation + NOPAT Discount rate = 10% NPV = $47.37 IRR = 14%(using Excel function) Payback period = 2.5 years $$ROIC = \frac{ave(NOPAT)}{ave(Net; PP&amp;E)}=\frac{(0+70+70+70)\div 3}{(500+400+300+200)\div 4}=20%$$ Week 4Debt vs Equity(股本) For a firm, it usually has two sources of capital: debt($r_{d}$) and equity($r_{e}$). They have different discounting rate due to different level of risk. Debt: Non-contingent claim: not contingent on the financial condition of the firm. In other words, you have to pay me back no matter what happened. Collateral(需要抵押的) Debt has priority in bankruptcy. A lot of monitoring or restrictions on how a firm uses the money. Types of debt: From banks: straight loan; line of credit; mortgage; business loan; industrial loan From the public: bonds Equity: Ownership of the company Contingent claim: contingent on the financial condition of the firm. Equity holders will get all the residual cash. Equity holders experience higher risk than debt holders. Equity will be wiped out in bankruptcy. Capital structure: how firm mix the use of debt and equity IT DOES NOT CHANGE THE UNDERLYING BUSINESS RISK OF THE FIRM. For example, if a firm takes lots of debt, it doesn’t get riskier but the equity holders become riskier. Another example, if KFC takes lots of debt, it won’t affect consumers’ desire to buy chicken so the business risk level stays unchanged. Risk free rate Risk free rate acts as the baseline for the interest rate. Safest possible place to put money in the US will be US Treasury bonds. Rate of return = risk free rate(US treasury bonds) + risk premium If we go through historical data up to ancient Rome, we will find national bonds fluctuated between 5% and 7% in most years. Bonds with longer maturity have a higher risk because the rate may rise in the future(opportunity cost) and there is more liquidity risk for long term bonds. Historical risk and return The riskier asset I buy, greater the return I will get. Stork return rates are around 10% - 12% per year on average in the U.S. Storks generally do better in the long run. Stork’s volatility(易变性) is much higher than bonds or equity. Equity risk premium Equity premium = $R_{m} - r.f.$ $R_{m}$: Stork market return rate $r.f.$: risk free rate From historical data, $R_{m}=11%$, $r.f. = 5.5%$ . We have equity premium $=5.5%$ on average on condition that we are investing in a wide range of portfolio. It is kind of the fair rate to compensate for the stork market risk. In the real world, equity premium around $4.5% - 6.5%$ is considered to be good. Factors affecting equity premium: systemic risk, investors’ attitude toward risk. Beta and cost of equity Diversification of a portfolio may decrease risk while the market risk can’t be diversified. Ideally, we want a portfolio which wiggles less and provides a stable return. 如果我们想要一个震荡幅度小的组合投资，并不是说我们把它内部的股票全换成比较稳定的就能达到，因为可能多个稳定的股票同时跌。我们还要考虑股票的相互影响，最好是找到规律比如说：一个股票跌，另一个很容易涨，这样在组合投资外部看来，它的震荡幅度还是小的。 We want to measure how does a stork change the risk of my portfolio. Beta(贝塔系数）: a measure of the risk arising from exposure to general market movements as opposed to idiosyncratic(特殊) factors. In other words, it is a measure of the sensitivity of a stork to the market risk. It depends on the variance and covariance of the stork. Variance: how a stork wiggle by itself? Covariance: how two or storks wiggle with each other? $\beta = \frac{Cov(R_{i},R{m})}{Var(R{m})}$ $Cov$: covariance $R_{i}$: a specific stork $R_{m}$: the whole stork market In other words, beta equals to the covariance of a specific stork and the whole stork market over the variance of the whole stork market. If beta = 2, this means the stork return is about twice the market return Capital asset pricing model(CAPM): giving us the return of putting on risk to any stork. $$return(cost ;of; equity) =risk; free; rate + \beta \times market ; risk; premium(equity ; premium)$$ If a stork has $\beta = 1.8$, equity premium $=5.5%$ and risk free rate $=3%$. We have: cost of equity = $3%+1.8\times 5.5% = 12.9%$ We can use this value as the discounting rate for future cash inflow. It also shows how much return I should get by taking that amount of risk. Credit rating A debt may default(无法偿还). Investor concerns the possibility of default and the principal recovery rate in default. These two things put a risk premium on debt and determine the credit rating of a company. Possibility of default depends on: Maturity Cash flow Debt level Profitability Current economic conditions Ability to raise capital Principal recover rate depends on: Tangibility Marketability(易转让程度) Transportability Cost of debtWe have three methods to estimate the cost of debt. Historical cost: what is the rate of interest last time the company borrow money? It is a fine method but won’t reflect the current market conditions. Need to be cautious. Current yield to maturity: If we have outstanding debt and that debt is still traded on the market, we can use the current yield to maturity directly. It is the best method but only works if the company has an existing debt. Works well for big companies. Ratings adjusted yield: put a risk premium on risk free rate according to the company’s credit rating. We can also use other companies with a similar credit rating for reference. Interest rates are tax deductible. The effective rate = $r_{d}\times (1-r_{t})$ Weighted average cost of capital(WACC) WACC is obtained by allocating different weight for $r_{e}$, $r_{d}$ then find the average. WACC = $\frac{Equity}{Equity+Debt}\times r_{e}+\frac {Debt}{Equity+Debt}\times r_{d}(1-r_{t})$]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ basics]]></title>
    <url>%2Fc%2B%2B_basics%2F</url>
    <content type="text"><![CDATA[1. Basics information C++ file ends up with .cpp We always need to build the project first before running it. Build will translate your code to the language that the computer can understand MAKE SURE TO PUT ; EVERY TIME YOU FINISH A LINE IN C++. 2. Drawing a shape 123456789#include &lt;iostream&gt;using namespace std;int main() &#123; cout &lt;&lt; "Hello, World!" &lt;&lt; endl; return 0;&#125; You need #include &lt;iostream&gt; and using namespace std at the beginning of your code. Don’t worry their meanings for now, will explain later. int main() is a function in c++, like a container so we can put our codes inside. Codes within the {} will be executed when we run the program. return 0; don’t worry too much for now, remember we need it inside the bracket. cout stands for console out. This will print out the string in the console. endl means ending a line in console. c++ will read code from top to bottom Here I am drawing out a triangle: 123456789#include &lt;iostream&gt;using namespace std;int main() &#123; cout &lt;&lt; " /|" &lt;&lt; endl; cout &lt;&lt; " / | " &lt;&lt; endl; cout &lt;&lt; " / |" &lt;&lt; endl; cout &lt;&lt; "/___|" &lt;&lt; endl; return 0;&#125; 3. Variable Variable is basically a container where we can store information To create a variable, we need to tell c++ the data type. Let me create a string variable as example: 1string student_name = "John"; We can also create a integer type variable in another format as followed: 12int student_age;student_age = 35; These two formats are equivalent. 1int age,gpa; We may also create multiple variables of the same data type in one line as above. 12345678910#include &lt;iostream&gt;using namespace std;int main() &#123; string student_name = "John"; cout &lt;&lt; "Hello, my name is "&lt;&lt; student_name &lt;&lt; endl; return 0;&#125; We can insert a string variable at the end of another string by putting the variable after &lt;&lt;. This operation is like print(f&quot;Hello, my name is{student_name}&quot;) is Python. If we want to insert the variable in the middle of another string, we can use the trick below: 12345678910#include &lt;iostream&gt; using namespace std; int main() &#123; int student_age = 19; cout &lt;&lt; "Hello, I am "&lt;&lt;student_age&lt;&lt;" years old"&lt;&lt; endl; return 0; &#125; Make sure to put the variable in between &lt;&lt;. These &lt;&lt; are linking strings and variables together. We can also print two variables in a raw, see the example below: 12345678910111213#include &lt;iostream&gt;using namespace std;int main()&#123; int student_age; student_age = 19; bool isMale; isMale = 0; cout &lt;&lt;student_age&lt;&lt;isMale&lt;&lt; endl; return 0;&#125; It works kinda the same, we use &lt;&lt; link up variables. 4. Data types char grade = &#39;A&#39;; stands for character, it can only store one character. Be careful, we must put the character in between &#39;&#39; rather than &quot;&quot;. string phase = &quot;Hello there&quot;; stands for a string of characters. int age = 50; stands for a whole number. It can be either positive or negative float value = 13.5; can store decimal values. double value = 3.1415; can store decimal values. The difference between double and float is: float can take more decimal points. As a beginner, stick with double bool isMale = false This stands for Boolean values, can either be true or false. 5. Working with strings endl: 12345678910#include &lt;iostream&gt;using namespace std;int main()&#123; cout &lt;&lt; "Hello World! " ; cout &lt;&lt; "Whats up." &lt;&lt; endl; return 0;&#125; endl basically tells c++ to start a new line in the console after each cout operation. If we don’t want to move to a new line, we can remove &lt;&lt; endl. Similar to Python, \n means starting a new line so cout &lt;&lt; &quot;Hello world&quot; &lt;&lt; endl; is equivalent to cout &lt;&lt; &quot;Hello world \n&quot;; string functions: .length() 123456789#include &lt;iostream&gt;using namespace std;int main()&#123; string trial; trial = "Hello world"; cout &lt;&lt; trial.length() &lt;&lt; endl; return 0;&#125; This will print out the length of a string variable. Be aware, we need to define the variable first. If we do cout &lt;&lt; &quot;Hello world&quot;.length() &lt;&lt; endl, an error will show up. Indexing: 12345678910#include &lt;iostream&gt;using namespace std;int main()&#123; string trial; trial = "Hello world"; cout &lt;&lt; trial[0] &lt;&lt; endl; cout &lt;&lt; "Hello world"[0] &lt;&lt; endl; return 0;&#125; Similar to Python, we can access a certain character in the string by indexing and we don’t have to define a string variable first like what we do for .length(). Assigning a new character: We can modify a character in the string by assigning a new character to it. trial[1] = &#39;E&#39; Now, we have &quot;HEllo world&quot; instead of &quot;Hello world&quot;. .find(): 123456789#include &lt;iostream&gt;using namespace std;int main()&#123; string trial; trial = "Hello world"; cout &lt;&lt; trial.find("world",0) &lt;&lt; endl; return 0;&#125; We can pass in two parameters, the first will be the substring we wish to find and the second will be where do we want c++ to start searching. By default, the second parameter will be 0. If that substring can’t be find. C++ will return 4294967295. It is a bit odd but this value is actually the largest 32 bits unsigned value, which kind of make sense. .substr(): 1234567891011#include &lt;iostream&gt;using namespace std;int main()&#123; string trial; trial = "Hello world"; string trial_1; trial_1 = trial.substr(2,3); cout &lt;&lt; trial_1 &lt;&lt; endl; return 0;&#125; This function will help us cut a substring out of the main string. It requires two parameters, the first parameter will tell c++ where to start cutting. The second parameter will tell c++ how many characters do we need. trial_1 = trial.substr(2,3); Here, we start from the 2 position which is &quot;l&quot; and we need 3 characters. We get llo as expected. 6. Working with numbers A quick demo of the math operations 123456789101112#include &lt;iostream&gt;using namespace std;int main()&#123; cout &lt;&lt; 5 + 7; cout &lt;&lt; 5 - 7; cout &lt;&lt; 15.0 / 7; cout &lt;&lt; 5 * 7; cout &lt;&lt; 10 % 3; return 0;&#125; Here is one thing interesting, if we do cout &lt;&lt; 15/7; C++ will return 2 as we are dividing an int by an int so the result is also an int. How can we fix this, use 15.0 or 7.0 instead. 12345678910111213141516#include &lt;iostream&gt;using namespace std;int main()&#123; double value; value = 1; cout &lt;&lt; value &lt;&lt; endl; value++; cout &lt;&lt; value &lt;&lt; endl; value--; cout &lt;&lt; value &lt;&lt; endl; value +=3; cout &lt;&lt; value &lt;&lt; endl; return 0;&#125; Here value++ means an increment of 1 to a numerical variable. A short hand in c++. Here value-- means decreasing a numerical variable by 1. A short hand in c++. += -= etc works the same as Python If we do int+int, we get int. That is kinda the reason why int/int will give int as well. Math function: #include &lt;cmath&gt; We need to import these functions before using them. 123456789#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;int main()&#123; cout &lt;&lt; pow(2,3); return 0;&#125; This pow(A,B) function has two parameters, will return A to the power of B. 123456789#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;int main()&#123; cout &lt;&lt; sqrt(4); return 0;&#125; This sqrt(A) takes one parameter, will return the square root of A. 123456789#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;int main()&#123; cout &lt;&lt; round(4.3); return 0;&#125; This round(A) function will follow the normal rounding rule(四舍五入). We also have ceil(A) function, which will round up(向上取整). Oppositely, we have floor(A) function, which will round down(向下取整) 123456789#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;int main()&#123; cout &lt;&lt; fmax(3,10); return 0;&#125; fmax(A,B) function will take two parameters, return the greater value between A and B. fmin(A,B) function will do the opposite. 7. Getting input from the user Most data types: 12345678910#include &lt;iostream&gt;using namespace std;int main()&#123; int age; cout &lt;&lt;"Please enter your age"; cin &gt;&gt; age; cout &lt;&lt; "You are "&lt;&lt; age &lt;&lt; " years old"&lt;&lt; endl; return 0;&#125; Create a variable first as we want input from the user and we need to store it somewhere. Getting an input is kinda the opposite of cout &lt;&lt;. We use cin &gt;&gt; and put the variable name after the &gt;&gt; sign. This method works for most data types except for string. string type: 12345678910#include &lt;iostream&gt;using namespace std;int main()&#123; string name; cout &lt;&lt;"Please enter your name"; getline(cin,name); cout &lt;&lt; "You are "&lt;&lt; name &lt;&lt; "."&lt;&lt; endl; return 0;&#125; We need to use the getline() function when input is the string type. It takes two parameters which are cin and variable_name. 8. Building a calculatorOur target is to get two input figures from the user and add them together and print out the result. 123456789101112#include &lt;iostream&gt;using namespace std;int main()&#123; int num1, num2; cout &lt;&lt;"Please fill in the first number: "; cin &gt;&gt; num1; cout &lt;&lt;"Please fill in the second number: "; cin &gt;&gt; num2; cout &lt;&lt; "The result is: " &lt;&lt; num1+num2 &lt;&lt; endl; return 0;&#125; 9. Building a Mad Libs Game(疯狂填词 wth???)Basically, let the user to input three words and put these words into three sentences. Funny? Maybe. 12345678910111213141516#include &lt;iostream&gt;using namespace std;int main()&#123; string color,plural_none,celebrity; cout &lt;&lt; "Please fill in a colour." &lt;&lt; endl; getline(cin,color); cout &lt;&lt; "Please fill in a plural none." &lt;&lt; endl; getline(cin,plural_none); cout &lt;&lt; "Please fill in a celebrity." &lt;&lt; endl; getline(cin,celebrity); cout &lt;&lt; "Roses are " &lt;&lt; color &lt;&lt; endl; cout &lt;&lt; plural_none &lt;&lt; " are blue" &lt;&lt; endl; cout &lt;&lt; "I love " &lt;&lt; celebrity &lt;&lt; endl; return 0;&#125; 10. Arrays A variable can only store one value while an array can hold multiple data values. Array operations: 123456789#include &lt;iostream&gt;using namespace std;int main()&#123; int lucky_nums[20] = &#123;4,8,12,15,23,42&#125;; cout&lt;&lt;lucky_nums[3]&lt;&lt;endl; lucky_nums[1] = 50; cout&lt;&lt;lucky_nums[1]&lt;&lt;endl;&#125; It is similar to creating a variable but we need to put a [] after the array name and put its elements inside {}. We can limit the length(size) of the array by putting a value inside [](optional). We can obtain an element inside the array by indexing, standard stuff. We can modify an element’s value by assigning a new value to it. If we want to cout the whole array, we need to use for loop 11. Function A container to put codes so we can re-use them in the future main() is actually a function. Create a basic function: 1234567891011#include &lt;iostream&gt;using namespace std;void say_hi()&#123; cout&lt;&lt;"Hello user"&lt;&lt;endl;&#125;int main()&#123; say_hi();&#125; We need to define a function’s return type at the start of defining a function. Everything inside {} are codes of the function. void basically means return nothing. Don’t forget to call the function inside the main(). Create a function with parameters 1234567891011#include &lt;iostream&gt;using namespace std;void say_hi(string name)&#123; cout&lt;&lt;"Hello "&lt;&lt;name&lt;&lt;endl;&#125;int main()&#123; string student = "Oscar"; say_hi(student);&#125; It is kinda similar to Python I guess but we must specify the data type of the formal parameter(形参) we want to input. In terms of the example above, say_hi(string name). 123456789101112#include &lt;iostream&gt;using namespace std;void say_hi(string name, int age)&#123; cout&lt;&lt;"Hello "&lt;&lt;name&lt;&lt;". You are "&lt;&lt; age &lt;&lt; " years old" &lt;&lt; endl;&#125;int main()&#123; string student = "Oscar"; int student_age = 19; say_hi(student,student_age);&#125; We may pass in multiple parameters if we wish. MAKE SURE TO SPECIFY THE DATA TYPE. Order is important in c++, make sure to define the function before calling it in main. If we really want to reverse the order, see the example below, there is a trick we can do. 123456789101112131415#include &lt;iostream&gt;using namespace std;void say_hi(string name, int age);int main()&#123; string student = "Oscar"; int student_age = 19; say_hi(student,student_age);&#125;void say_hi(string name, int age)&#123; cout&lt;&lt;"Hello "&lt;&lt;name&lt;&lt;". You are "&lt;&lt; age &lt;&lt; " years old" &lt;&lt; endl;&#125; We can declare a function first by void say_hi(string name, int age); and fill in codes later. We may pass parameters into a function, but we are actually passing in their values instead of variables themselves. If we want to modify values of variables, WE MUST PASS IN POINTERS AND DEFERENCE THEM. 12. Return statement We must specify the return data type when defining a function. We can set any one of the data types we know as return. If we don’t want anything to return, use void Define a function with return: 123456789101112131415#include &lt;iostream&gt;using namespace std;double cube(double figure)&#123; double result; result = figure*figure*figure; return result;&#125;int main()&#123; double value = 3.14; cout&lt;&lt;cube(value)&lt;&lt;endl;&#125; return is very similar to Python. The function will be terminated when return is executed. Don’t forget to put a ; after the return statement. 13. If statement Allow our program to respond to different conditions。 if(condition){operation} In other words, if the condition in () is true, codes within {} will run. See the example, below 12345678910#include &lt;iostream&gt;using namespace std;int main()&#123; bool is_male = false; if(is_male)&#123; cout&lt;&lt;"Hey, this is a boy"&lt;&lt;endl; &#125;&#125; We can also do logic operators inside (). We have &amp;&amp; for and operator. || for or operator. Example:if(is_male &amp;&amp; is_tall){cout&lt;&lt;&quot;You are both tall and male&quot;&lt;&lt;endl;} The basic logic structure in C++ is similar to Python. 12345678910111213141516#include &lt;iostream&gt;using namespace std;int main()&#123; if()&#123; &#125; else if()&#123; &#125; else&#123; &#125;&#125; We can also do if, else and else if The negation operator in C++ is !. Basically, if we have is_tall = true, !is_tall will be false. This basically reverses the answer. 14. More if statement(comparison operators) A quick example, see below 1234567891011121314151617181920#include &lt;iostream&gt;using namespace std;int main()&#123; double num1,num2; cout&lt;&lt;"Please fill in the first number"&lt;&lt; endl; cin&gt;&gt; num1; cout&lt;&lt;"Please fill in the second number"&lt;&lt; endl; cin&gt;&gt; num2; if(num1&gt;num2)&#123; cout&lt;&lt;"The first number is greater which is "&lt;&lt;num1&lt;&lt;endl; &#125; else if(num1&lt;num2)&#123; cout&lt;&lt;"The second number is greater which is "&lt;&lt;num2&lt;&lt;endl; &#125; else if(num1==num2)&#123; cout&lt;&lt;"Two numbers are equal, they are both "&lt;&lt;num2&lt;&lt;endl; &#125;&#125; We have a number of comparison operators: &gt;, &lt;, ==, !=. We can mix these comparison operators with logic operators(&amp;&amp;, ||). 15. Build a more powerful calculatorThe user can fill in two numbers as well as the operator. 123456789101112131415161718192021222324252627282930313233#include &lt;iostream&gt;using namespace std;int main()&#123; char operat; double num1,num2,result; cout&lt;&lt;"Please fill in the first number"&lt;&lt;endl; cin&gt;&gt;num1; cout&lt;&lt;"Please fill in the operator"&lt;&lt;endl; cin&gt;&gt;operat; cout&lt;&lt;"Please fill in the second number"&lt;&lt;endl; cin&gt;&gt;num2; if (operat == '+')&#123; result = num1+num2; cout&lt;&lt;num1&lt;&lt;operat&lt;&lt;num2&lt;&lt;"="&lt;&lt;result&lt;&lt;endl; &#125; else if(operat == '-')&#123; result = num1-num2; cout&lt;&lt;num1&lt;&lt;operat&lt;&lt;num2&lt;&lt;"="&lt;&lt;result&lt;&lt;endl; &#125; else if(operat == '*')&#123; result = num1*num2; cout&lt;&lt;num1&lt;&lt;operat&lt;&lt;num2&lt;&lt;"="&lt;&lt;result&lt;&lt;endl; &#125; else if(operat == '/')&#123; result = num1/num2; cout&lt;&lt;num1&lt;&lt;operat&lt;&lt;num2&lt;&lt;"="&lt;&lt;result&lt;&lt;endl; &#125; else&#123; cout&lt;&lt;"Invalid operator input"&lt;&lt;endl; &#125;&#125; 16. Switch statements switch statement is a special type of if statement. See the example below. In this example, we want to convert 0 to Sunday, 1 to Monday and 2 to Tuesday etc. 12345678910111213141516171819202122232425262728293031323334353637#include &lt;iostream&gt;using namespace std;string convert(int choice)&#123; string day_result; switch (choice) &#123; case 0: day_result = "Sunday"; break; case 1: day_result = "Monday"; break; case 2: day_result = "Tuesday"; break; case 3: day_result = "Wednesday"; break; case 4: day_result = "Thursday"; break; case 5: day_result = "Friday"; break; case 6: day_result = "Saturday"; break; default: day_result = "Invalid input"; break;&#125; return day_result;&#125;int main()&#123; int figure; cout&lt;&lt;"Please fill in the number you wish to convert."&lt;&lt;endl; cin&gt;&gt;figure; cout&lt;&lt;convert(figure)&lt;&lt;endl;&#125; switch statement is very useful when we want to compare several values with a variable. In the case above, we could compare 1, 2, 3…. to choice variable but it is inefficient. We may write a switch (choice) and case 0: which will be equivalent to choice == 0. We need to put a break in each case. Otherwise, if choice == 3, it will enter case 3 and keep going into case4, case5, case6 and default unless there is a break in any case. We put a break in case 3 so it won’t go into the following cases. 17. While loops Basic structure: while(condition){codes} Quick demo: 12345678910#include &lt;iostream&gt;using namespace std;int main() int index; index = 0; while(index&lt;5)&#123; cout&lt;&lt;index&lt;&lt;endl; index ++; &#125;&#125; We get 0, 1, 2, 3, 4 as expected. There is also a loop called do while loop, see the example below 12345678910#include &lt;iostream&gt;using namespace std;int main()&#123; int index; index = 6; do&#123; cout&lt;&lt;index&lt;&lt;endl; index ++; &#125;while(index&lt;5);&#125; We get 6 as the answer. Let me explain, it is like the reverse of a while loop. We will run the codes insidedo{} first before checking where while() is met. If while is met, it will keep going. If not, it will terminate. That is kinda why we still get 6 even though index is already greater than 5. 18. Guessing game12345678910111213141516171819202122232425262728#include &lt;iostream&gt;using namespace std;int main()&#123; int result_figure,choice; result_figure = 5; int chance,max_chance; max_chance = 5; chance = 0; while(true)&#123; cout&lt;&lt;"Please guess a number"&lt;&lt;endl; cin&gt;&gt;choice; if(choice == result_figure)&#123; cout&lt;&lt;"Congrats, you win"&lt;&lt;endl; break; &#125; else&#123; cout&lt;&lt;"You are wrong"&lt;&lt;endl; chance ++; &#125; if(chance == max_chance)&#123; cout&lt;&lt;"You ran out of chance, lost"&lt;&lt;endl; break; &#125; &#125;&#125; Nothin too exciting :-( 19. For loops 12345678#include &lt;iostream&gt; using namespace std; int main()&#123; for(int i=1;i&lt;=5;i++)&#123; cout&lt;&lt;i&lt;&lt;endl; &#125; return 0; &#125; The for loop in c++ is a bit different from python. We must pass in three parameters, the first parameter is to define a i or index. The second is to set the condition which will terminate the loop and finally what should be done to i every time we go through one circulation of the loop. We separate these parameters using; . There is another way to write the above codes, see below. 123456789#include &lt;iostream&gt;using namespace std;int main()&#123; for(int i=1;i&lt;=5;)&#123; cout&lt;&lt;i&lt;&lt;endl; i++; &#125; return 0;&#125; One useful thing is to print out elements in an array. See below 123456789#include &lt;iostream&gt;using namespace std;int main()&#123; int list_of_nums[] = &#123;0,1,2,3,4,5,6,7,8,9,10&#125;; for (int i=0;i&lt;=11;i++)&#123; cout&lt;&lt;list_of_nums[i]&lt;&lt;endl; &#125; return 0;&#125; This basically print out every element in the list_of_nums array. 20. Exponent function123456789101112131415#include &lt;iostream&gt;using namespace std;int main()&#123; int result,base,power; base =3; power =3; result =1; for(int i=0;i&lt;power;i++)&#123; result*=base; &#125; cout&lt;&lt;result&lt;&lt;endl; return 0;&#125; Only consider positive power factor to simplify. 21. 2d arrays &amp; nested loops 2d arrays: every element in an array is an array like [[1,2,3],[4,5,6],[7,8,9]] in Python. Create a 2d array: 123456#include &lt;iostream&gt;using namespace std;int main()&#123; int number_grid[3][2]=&#123;&#123;1,2&#125;,&#123;4,5&#125;,&#123;7,8&#125;&#125;; return 0;&#125; When creating a 2d array, we need two []. The first [] is to define how many arrays do we have in the outside array. The second is two define how many elements do we have in each inside array. We can access any element in a 2d array using cout&lt;&lt;number_grid[row][column] Nested loop is superposing for loops. In other words, a for loop in a for loop. We can use this technique to return every element in thenumber_grid array. See below. 1234567891011#include &lt;iostream&gt;using namespace std;int main()&#123; int number_grid[3][2]=&#123;&#123;1,2&#125;,&#123;4,5&#125;,&#123;7,8&#125;&#125;; for(int i = 0; i&lt;3; i++)&#123; for(int j = 0;j&lt;2;j++)&#123; cout&lt;&lt;number_grid[i][j]&lt;&lt;endl; &#125; &#125; return 0;&#125; Basically, putting the other for loop inside the {} of the first for loop. 22. Comments We can use // to create one line of comments. We can use /* to start multiple lines of comments and */ to terminate. 23. Pointers(指针) A variable is physically stored at a specific address inside the RAM so the computer can keep track. If we want to print out the memory address of a variable, put &amp; before the variable name. 1234567#include &lt;iostream&gt;using namespace std;int main()&#123; int num1 = 12; cout&lt;&lt; &amp;num1&lt;&lt;endl; return 0;&#125; We get 0x6dfefc in this case, it is an address in hexadecimal. In c++, we won’t use the phrase memory address, instead, we call it pointer. We can create a variable to store pointer. See the example below. 1234567#include &lt;iostream&gt;using namespace std;int main()&#123; int num1 = 12; int* pNum1 = &amp;num1; return 0;&#125; When creating a pointer variable, we put *p on top of the original variable name. Also, the data type of the pointer variable is the same as the original variable data type. Let me explain, &amp;num1 is an address so do pNum1 while * means dereferencing, *pNum1 is actually the value at that pointer address, which is int. We can also dereference a pointer to find the actual value which is stored at that address. cout&lt;&lt;pNum1&lt;&lt;endl; will print out the pointer address, we get 0x6dfef8. cout&lt;&lt;*pNum1&lt;&lt;endl; will dereference and print out the actual value, we get 12. If we do cout&lt;&lt;*&amp;num1&lt;&lt;endl;, we get 12 as expected. If we do cout&lt;&lt;&amp;*&amp;num1&lt;&lt;endl;, we get 0x6dfef8 as expected. 24. Classes &amp; Objects(OOP) Existing data types in c++ are not enough for us to model everything. We can kinda create a new data type by creating a class. See the example below. 12345678910111213141516171819#include &lt;iostream&gt;using namespace std;class Phone&#123;public: string name; int price; string cpu; string RAM;&#125;;int main()&#123; Phone my_phone; my_phone.name = "iphone x"; my_phone.price = 6888; my_phone.cpu = "A10"; my_phone.RAM = "3G"; cout&lt;&lt;my_phone.name&lt;&lt;endl; return 0;&#125; The codes above are similar to using __init__ function in Python. class is more like a template, we can specify values of its attributes by creating an object. In the code above, we create an object using Phone my_phone;. 25. Constructor functions A special function which will always be called whenever we create an object. See codes below. 1234567891011121314#include &lt;iostream&gt;using namespace std;class Phone&#123;public: string name; Phone()&#123; cout&lt;&lt;"Hey, I am creating a new object"&lt;&lt;endl; &#125;&#125;;int main()&#123; Phone my_phone; return 0;&#125; We are creating a function inside public. The function name MUST be the same as the class name. We may pass parameters into the constructor function. See below. 12345678910111213#include &lt;iostream&gt;using namespace std;class Phone&#123;public: string name; Phone(string phone_name)&#123; cout&lt;&lt;"Hey, I am creating a new object called "&lt;&lt;phone_name&lt;&lt;endl; &#125;&#125;;int main()&#123; Phone my_phone("Iphone X"); return 0; We are passing in a phone_name parameter, we must specify its value when creating an object. Also similar to __init__ function Python. However, we still need to manually specify values of attributes. Constructor functions can save us some efforts. See below 12345678910111213141516171819202122#include &lt;iostream&gt;using namespace std;class Phone&#123;public: string name; int price; string cpu; string RAM; Phone(string Aname,int Aprice,string Acpu,string ARAM)&#123; name = Aname; price = Aprice; cpu = Acpu; RAM = ARAM; &#125;&#125;;int main()&#123; Phone my_phone("Iphone x",6888,"A10","3G"); cout&lt;&lt;my_phone.name&lt;&lt;endl; return 0; One thing I need to point out, when naming parameter names inside the constructor function. It is a good practice to put an A before the actual name. In Python, we do Phone.name = name. In c++, name = name can be very confusing so instead we do name = Aname. Make it crystal clear. We may also create multiple constructor functions. See below. 12345678910111213141516171819202122232425262728293031#include &lt;iostream&gt;using namespace std;class Phone&#123;public: string name; int price; string cpu; string RAM; Phone()&#123; name = "No info"; price = 0; cpu = "No info"; RAM = "No info" &#125; Phone(string Aname,int Aprice,string Acpu,string ARAM)&#123; name = Aname; price = Aprice; cpu = Acpu; RAM = ARAM; &#125;&#125;;int main()&#123; Phone no_info_phone; Phone my_phone("Iphone x",6888,"A10","3G"); cout&lt;&lt;my_phone.name&lt;&lt;endl; cout&lt;&lt;no_info_phone.name&lt;&lt;endl; return 0;&#125; This is an excellent way of setting attributes some default values. 26. Object functions Functions we can put inside a class. See below. 1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;using namespace std;class Phone&#123;public: string name; int price; string cpu; string RAM; Phone(string Aname,int Aprice,string Acpu,string ARAM)&#123; name = Aname; price = Aprice; cpu = Acpu; RAM = ARAM; &#125; bool if_expensive()&#123; if(price&gt;2000)&#123; return true; &#125; else&#123; return false; &#125; &#125;&#125;;int main()&#123; Phone my_phone("Iphone x",6888,"A10","3G"); cout&lt;&lt;my_phone.if_expensive()&lt;&lt;endl; return 0;&#125; We defined an if_expensive function inside the class. We don’t need to pass in self in c++. We can use parameters directly. To be specific, we use price rather than self.price that is kinda why we don’t need to pass in self as a parameter. 27. Getters &amp; Setters We can use these to control access to attributes. See below. 12345678910111213141516171819202122232425262728293031#include &lt;iostream&gt;using namespace std;class Phone&#123;private: string name; int price; string cpu; string RAM;public: Phone(string Aname,int Aprice,string Acpu,string ARAM)&#123; name = Aname; price = Aprice; cpu = Acpu; RAM = ARAM; &#125; string name_getter()&#123; return name; &#125; void name_setter(string Aname)&#123; name = Aname; &#125;&#125;;int main()&#123; Phone my_phone("Iphone x",6888,"A10","3G"); cout&lt;&lt;my_phone.name_getter()&lt;&lt;endl; my_phone.name_setter("Iphone 8"); cout&lt;&lt;my_phone.name_getter()&lt;&lt;endl; return 0;&#125; We can put attributes that we don’t want users to access inside private:. These attributes can only be accessed by functions inside class{} but not elsewhere. We may want users to modify certain data so we define a name_setter(). We may want users to access certain data so we define a name_getter(). 28. Inheritance(继承) We can define a new class by extending an existing class. See the example below for a very basic introduction. 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;class Student&#123;public: void gaming()&#123; cout&lt;&lt;"I want to do some gaming"&lt;&lt;endl; &#125; void study()&#123; cout&lt;&lt;"I want to spend some time studying"&lt;&lt;endl; &#125;&#125;;class Yuxuan :public Student&#123;&#125;;int main()&#123; Yuxuan me; me.study(); return 0;&#125; We can inherit public functions, attributes from a superclass into a subclass. These functions can also be overwritten simply by defining it again. EndThanks for reading. These notes are abstract from the c++ tutorial created by Mike Dane(Giraffe academy). I want to express my thanks to Mike. Awesome videos as always. Make sure to check out his website, contents are absolutely amazing.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Quick demo for Pymysql]]></title>
    <url>%2Fpymysql_demo%2F</url>
    <content type="text"><![CDATA[import Pymysql Search 1234567891011conn = pymysql.connect(host="localhost",user="root",passwd="root",db="python_summer")if conn: print("success")cur = conn.cursor()cur.execute("SELECT * FROM student")all_info = cur.fetchall()print(all_info)for i in all_info: print(i[1])cur.close()conn.close() Alter 1234567891011121314151617conn = pymysql.connect(host="localhost",user="root",passwd="root",db="python_summer")if conn: print("success")cur = conn.cursor()num = cur.execute("UPDATE student SET student.student_name = 'Yuxuan Liu' WHERE student.student_name = 'Oscar'")print(num)conn.commit()cur.close()conn.close() append 12345678910111213conn = pymysql.connect(host="localhost",user="root",passwd="root",db="python_summer")cur = conn.cursor()num = cur.execute("INSERT INTO student(student_name,student_subject,student_gpa) VALUES('Jim','Engineering','3.93')")print(num)conn.commit()cur.close()conn.close() delete 12345678910111213conn = pymysql.connect(host="localhost",user="root",passwd="root",db="python_summer")cur = conn.cursor()num = cur.execute("DELETE FROM student WHERE student.student_name = 'Jim'")if num == 1: conn.commit()conn.close()cur.close()]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pymysql</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML basics]]></title>
    <url>%2Fhtml_basics%2F</url>
    <content type="text"><![CDATA[1. TagsDOCTYPE1&lt;!DOCTYPE html&gt; The tag as shown above will tell the internet explorer that we are writing an html file. For this tag, we don’t need an ending tag and for other tags(container tags) we need an ending tag for each starting tag. html123&lt;html&gt; &lt;/html&gt; Here are html tags with a starting tag and an ending tag. / is used to denote that it is an ending tag. This is the highest level tag in our website, other contents are under these tags. head123&lt;head&gt; &lt;/head&gt; Another type of tags are head tags. We can define the title, description of the document and also other information related to the document. It is like the settings of the html file. body123&lt;body&gt; Hello world&lt;/body&gt; The body tags are like the meat and bone of the web page. This is the main part of the website. Normally way longer than the head tags. We can simply put a Hello World inside the body tag and Chrome will print it out for us. Indent12345678&lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt; Pay extra attention to the indents. head tags and body tags are both inside the html tags. &lt;html&gt; is like the parents while &lt;head&gt;&amp;&lt;body&gt; are like children ish. &lt;head&gt; and&lt;body&gt; are sort of siblings as they both have one tab indent. Title123&lt;head&gt; &lt;title&gt;The title of the website&lt;/title&gt;&lt;/head&gt; Inside head tags, we can put an extra tag called title tags. We fill the title of the web page in the tags. 2. More basic tags in detailMeta12345&lt;head&gt; &lt;title&gt;The title of the website&lt;/title&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name = "description" content = "This is the description"&gt; &lt;/head&gt; This tag will give us some meta data, we can put the type of character encoding inside as above. Also, we can put a description inside the meta tag. So when people search our website on Google, this description will be used for reference. meta tags will be introduced in detail in later sections. Heading12345678&lt;body&gt; &lt;h1&gt; The fist header &lt;/h1&gt; &lt;h2&gt; THe second header &lt;/h2&gt;&lt;/body&gt; We can create a header using the code above, &lt;h1&gt; will give us the largest font size of the header while &lt;h6&gt; will give us the smallest font size available for a header. Paragraph12345&lt;body&gt; &lt;p&gt; Put the contents of the paragraph inside &lt;/p&gt;&lt;/body&gt; We can create a paragraph using &lt;p&gt;. All paragraphs will format itself automatically. The order of paragraphs in the html file is simply the order shown on the webpage. Bold(加粗)1&lt;b&gt;The contents you want to bold&lt;/b&gt; Whenever you want to bold certain contents, simply put it inside &lt;b&gt;. Italic(斜体)1&lt;i&gt;The contents you want to make it italic&lt;/i&gt; Whenever you want to make certain contents italic, simply put it inside &lt;i&gt;. Moreover, we can superpose&lt;p&gt;,&lt;i&gt;&amp;&lt;b&gt;. To make a paragraph both bold and italic. Whitespace1234567891011&lt;body&gt; &lt;p&gt; The first paragraph &lt;/p&gt; &lt;p&gt; The second paragraph &lt;/p&gt;&lt;/body&gt; 12345678&lt;body&gt; &lt;p&gt; The first paragraph &lt;/p&gt; &lt;p&gt; The second paragraph &lt;/p&gt;&lt;/body&gt; html doesn’t read the whitespace between the codes. It only cares about what is in the tags. In other words, the codes above are technically the same. Break123&lt;body&gt; &lt;br/&gt;&lt;/body&gt; If we want a blank line on our web page. We could use the tag &lt;br/&gt; and html will read it. You can make multiple tags to create multiple blank lines. Horizontal line123&lt;body&gt; &lt;hr/&gt;&lt;/body&gt; We can create a horizontal line like this. We may want to use it on our web page to break up contents. Big tag12345&lt;body&gt; &lt;p&gt; The &lt;big&gt;first&lt;/big&gt; paragraph &lt;/p&gt;&lt;/body&gt; If we want to make certain contents greater in font size, using &lt;big&gt; tags is one of the easiest way. Simply put the contents between &lt;big&gt; and &lt;/big&gt;. It is not that significant but will work. Things works exactly the same for &lt;small&gt;and &lt;/small&gt;. Subscript(下标)&amp;superscript(上标)123&lt;p&gt; H&lt;sub&gt;2&lt;/sub&gt;O&lt;/p&gt; If we want to write the chemical formula for water. We need a subscript 2. It can be easily achieved in html by putting 2 between &lt;sub&gt;&amp;&lt;/sub&gt;. 123&lt;p&gt; 10&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt; If we want to write 10 square in html. We need a superscript 2. Simply do the very similar thing with &lt;sup&gt;&amp;&lt;/sup&gt;. SummaryThis tags not only works in &lt;body&gt;. It works in all parts of the html file where there is a text. 3. Comments12&lt;!-- Put your comments inside --&gt; Everything within &lt;!-- --&gt;is comments and it may take up multiple lines. Very similar to other programming languages, it’s like a little note and can be ignored. 4. Style and colorsThis is a very basic introduction of CSS(Cascading style sheets) which is used for styling. There is a separate course just for CSS 123456&lt;body&gt; &lt;p style = "color: blue"&gt; The fist paragraph &lt;/p&gt; &lt;/body&gt; We can pass some attributes to &lt;p&gt; tags. Here, we are passing a style attribute and set the text color to blue. 123456&lt;body&gt; &lt;p style = "color: blue;backgroung-color: red"&gt; The fist paragraph &lt;/p&gt; &lt;/body&gt; We can also set the background color to red using the code above. These attributes also work for other tags like &lt;h1&gt;, even&lt;body&gt; tags work. 5. Formatting the websiteHeader12345678910111213&lt;body&gt; &lt;header&gt; &lt;nav&gt; &lt;/nav&gt; &lt;/header&gt; &lt;main&gt; &lt;article&gt; &lt;/article&gt; &lt;/main&gt; &lt;footer&gt; &lt;/footer&gt;&lt;/body&gt; Most web pages will have three sections which are headers(页眉), main and footer(页脚). Html has various tags for creating these sections as shown in the code above. Some extra things, using &lt;nav&gt; tags we could create a navigation table and it’s normally in the &lt;header&gt; part of the webpage We can also create an article(like the ones in a blog) using &lt;article&gt; tags and they are normally in the &lt;main&gt; part of the webpage. Section12345678&lt;main&gt; &lt;article&gt; &lt;section&gt; &lt;/section&gt; &lt;section&gt; &lt;/section&gt; &lt;/article&gt;&lt;/main&gt; &lt;section&gt; tags often come with &lt;article&gt; tags as they make the web page well-structured. Of course, an &lt;article&gt; can contain multiple &lt;section&gt;. Aside1234&lt;body&gt; &lt;aside&gt; &lt;/aside&gt;&lt;/body&gt; You can put something that is not directly related to the core contents in the &lt;aside&gt; tags. A good example is advertisements on web pages. SummaryTo be honest, all those tags are not necessary, you may create a fabulous website without these structural tags but they can make your website extremely organized and improve the readability of your code. Also, this kind of neat structure allows search engines to figure out what is inside easily. 6. Links(超链接)Links are used in html to link your website to other websites, other parts of your website or jpg, pdf etc. 123&lt;body&gt; &lt;a href = "https://www.google.com"&gt;Text shown for this link&lt;/a&gt;&lt;/body&gt; By using &lt;a&gt; tags we can create a link to a different website. Simply, put the website url inside the hrefattribute and put the text you wish to show between &lt;a&gt;&amp;&lt;/a&gt;. Attention, the code above will navigate users to the url directly so they leave your website. 123&lt;body&gt; &lt;a href = "https://google.com" target = "_blank"&gt;Text shown for url&lt;/a&gt;&lt;/body&gt; If we want user to open a new web page for this link, we could add an extra attribute target = &quot;_blank&quot; inside &lt;a&gt;tags. 123&lt;body&gt; &lt;a href = "relative local address"&gt;another page&lt;/a&gt;&lt;/body&gt; If we want to link to a different pages of our website. We can simply set the href attribute equal to the relative local address(It must be the relative address, the absolute address won’t work) of our html file. This can automatically navigate to this file. 123&lt;body&gt; &lt;a href = "address of picture"&gt;picture&lt;/a&gt;&lt;/body&gt; If we want to link to a picture in your computer, it works the same, simply put the relative address of the picture inside the href attribute. 7.ImagesBasics123&lt;body&gt; &lt;img src="url of the image" alt = "text to show if the in scr image is not available" /&gt;&lt;/body&gt; scr attribute stores the source of the picture. &lt;alt&gt; attribute is more like a backup, it is some text that will be shown when the picture in scr is no longer available. It is always a good practice to write a &lt;alt&gt;. Besides, we don’t need an end tag for &lt;img simply do /&gt; when you finish. Very similar to links, we can do relative address of the picture instead of the url. 1&lt;img width = "100" height = "50" src="url of the image" alt = "text" /&gt; We could alter dimensions of the image by passing in width &amp;heightattributes. The unit we use here are pixels(像素). 1&lt;img width = "100" src="url of the image" alt = "text" /&gt; Instead of setting both height of width, we could set only one attribute of those. HTML will set the other value automatically to keep the aspect ratio(长宽比) unchanged. Example: Set an image as a link12345&lt;body&gt; &lt;a href = "https://www.google.com"&gt; &lt;img width = "100" src="url of the image" alt = "text" /&gt; &lt;/a&gt;&lt;/body&gt; The code above is an example of setting an image also as a link. This trick also works for other tags like&lt;h1&gt; etc. 8. Videos &amp; YouTubeBasics123&lt;body&gt; &lt;video src ="relative address " controls width = "100"&gt;Text shows if video can't play&lt;/video&gt;&lt;/body&gt; We can add a video to the website using &lt;video&gt;. Very similar to adding a picture we use a relative address and reserved word controls afterwards(very important, otherwise there will be no buttons for us to control the video ). The text between &lt;video&gt; and &lt;/video&gt;will only be shown if the browser can’t play this video. In addition, we can control dimensions of the video by passing in width and height attributes. Old tricks as we used it in previous sections already. Poster123&lt;body&gt; &lt;video src ="relative address" controls poster = "relative address"&gt;&lt;/video&gt;&lt;/body&gt; Instead of showing the first scene of the video as the poster, we could DIY our poster. Simply set an extra attribute called poster and pass in the relative address of our poster. Auto play &amp; loop(自动重复播放)123&lt;body&gt; &lt;video src ="relative address" controls loop autoplay&gt;&lt;/video&gt;&lt;/body&gt; Simply pass in extra reserved words autoplay and loop. Easy peasy, lemon squeasy! YouTube videos1234&lt;body&gt; &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8JnfIa84TnU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/body&gt; Click the share button of the YouTube video and choose Embed. This will give us some&lt;iframe&gt; code. We can use them to add YouTube videos to our website. Don’t worry too much about&lt;iframe&gt; for now. This will also give you the YouTube control panel which is awesome. 9. ListsUnordered list1234567&lt;body&gt; &lt;ul&gt; &lt;li&gt;&lt;a href = "apple.com"&gt;Apple&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Banana&lt;/li&gt; &lt;li&gt;Pear&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt; We could create an unordered list by using the &lt;ul&gt;tags. The &lt;ul&gt; tags act as a container and we can put each list item inside tags &lt;li&gt; . Different types of data can be put inside one unordered list. See the Apple example, we actually put a link inside the list along with some texts. As we are creating an unordered list, each item starts with a black dot. Ordered list1234567&lt;body&gt; &lt;ol&gt; &lt;li&gt;&lt;a href = "apple.com"&gt;Apple&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Banana&lt;/li&gt; &lt;li&gt;Pear&lt;/li&gt; &lt;/ol&gt;&lt;/body&gt; An ordered list actually works almost the same, except we got serial numbers at the start of each item instead of black dots. Style123456&lt;body&gt; &lt;ol type = "a"&gt; &lt;li&gt;apple&lt;/li&gt; &lt;li&gt;bacon&lt;/li&gt; &lt;/ol&gt;&lt;/body&gt; We can change the style of the ordered list. Simply input an extra attribute calledtype. Its value can be &quot;a&quot;so we got a,b,c ….. It may also be &quot;A&quot; so we got A,B,C …… Apart from those, we can have Roman numerals(I,II,III,IV….) by inputting &quot;I&quot; Cascade lists123456789101112&lt;body&gt; &lt;ol&gt; &lt;ul&gt; &lt;li&gt;apple&lt;/li&gt; &lt;li&gt;banana&lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt;school&lt;/li&gt; &lt;li&gt;uni&lt;/li&gt; &lt;/ul&gt; &lt;/ol&gt;&lt;/body&gt; We can have lists in a list(cascade). See the example above, we have two unordered lists inside an ordered list. 10. Table123456789101112131415&lt;body&gt; &lt;table&gt; &lt;caption&gt;The title of the table&lt;/caption&gt; &lt;tr&gt; &lt;th&gt;Title_1&lt;/th&gt; &lt;th&gt;Title_2&lt;/th&gt; &lt;th&gt;Title_3&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;one&lt;/td&gt; &lt;td&gt;two&lt;/td&gt; &lt;td&gt;three&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt; We initialize tables in html using &lt;table&gt;tags. &lt;tr&gt; tags are placed inside to act as a row container. For elements in a row, we put every of them inside&lt;td&gt;tags. Here we got three elements in a row. If we want more rows or more elements, simply add more &lt;tr&gt;&amp;&lt;td&gt;. For creating table headers, it works similarly, just use &lt;th&gt; instead of &lt;td&gt;. One more thing, we can create a caption(title) for the table using&lt;caption&gt;tags at the very top. 11. Containers in HTML(div,span)BasicsIt is a good habit to put your HTML code inside containers. One reason is that in the future we will use CSS to formatting your web page. It makes CSS code really easy if your HTML codes are well structured in containers. &lt;div&gt; and &lt;span&gt; are two popular containers. Types of elementsThere are basically two types of elements in HTML. The first type is called the block elements. They will occupy the entire width of the page. The other one is called inline elements. They will only occupy the space they actually need. See the example below. 12&lt;a href="google.com"&gt;link1&lt;/a&gt;&lt;a href = "apple.com"&gt;link2&lt;/a&gt; Link1 and link2 are clearly inline elements. As neither of them takes up the entire lines, they are actually sitting beside(in the same line with) each other. 123456&lt;p&gt; Paragraph 1&lt;/p&gt;&lt;p&gt; Paragraph 2&lt;/p&gt; Paragraphs here are clearly block elements. There is enough space after paragraph 1 for paragraph 2. However, these two paragraphs don’t sit beside each other. Instead, paragraph 2 switch to a different line. &lt;span&gt;12&lt;span&gt;The fist span&lt;/span&gt;&lt;span&gt;The second span&lt;/span&gt; &lt;span&gt; tags are inline elements. The contents inside are able to sit beside each other. &lt;div&gt;123456&lt;div&gt; The fist div&lt;/div&gt;&lt;div&gt; The second div&lt;/div&gt; &lt;div&gt; tags are block elements. Either of them occupies their own line. They can’t sit beside each other. Summary&lt;div&gt; is a block element. &lt;span&gt; is a inline element. More popular than&lt;div&gt;. 12. Input tagsText box123&lt;body&gt; &lt;input type="text" value = "DPOefault text"/&gt; &lt;/body&gt; We are using a single &lt;input&gt; tag in html. We need to pass in a type attribute. The code above will generate a text box for user to type in. We can set default text for the text box by passing in a value attribute and set it equal to the text we want to show. Password box123&lt;body&gt; &lt;input type = "password" /&gt;&lt;/body&gt; Here we are creating a text box for password. This text box will automatically hide the user inputs. Textarea123&lt;body&gt; &lt;textarea rows = "10" cols="3"&gt;Default text&lt;/textarea&gt;&lt;/body&gt; It is simply a bigger block where users can input some text. We can control its dimension by setting rows and cols attributes. Date123&lt;body&gt; &lt;input type = "date" /&gt;&lt;/body&gt; The will create a box where users can select a certain date. Range123&lt;body&gt; &lt;input type = "range" /&gt;&lt;/body&gt; This will produce a slider. File123&lt;body&gt; &lt;input type = "file" /&gt;&lt;/body&gt; This will create a button for user to choose file. The file explorer will shown up if an user click the button. Checkbox123&lt;body&gt; &lt;input type = "checkbox" /&gt;&lt;/body&gt; A tiny box, user a click it to tick the box. We could tick as many checkboxes as we want. Radio button12345&lt;body&gt; &lt;input name ="Oscar" type = "radio" /&gt; &lt;input name = "Oscar" type = "radio" /&gt; &lt;input name = "Oscar" type = "radio" /&gt;&lt;/body&gt; Radio buttons are kinda similar to checkbox. The biggest difference is that we can only tick one of the radio buttons with the same name attribute. There are so many types of inputs. I am only listing a number of them, there is a web page for references. Make sure to check it out https://www.w3schools.com/tags/tag_input.asp&gt;. 13. iFrame12345&lt;body&gt; &lt;iframe scr = "www.mikedane.com" width = "1000" height ="800"&gt; The text will be shown if iframe is not working &lt;/iframe&gt;&lt;/body&gt; By using the &lt;iframe&gt; tags, we could display the website in the scr attribute on your website(kinda like enbedded someone else’s website on yours). The default size for&lt;iframe&gt; is tiny, we can change its dimensions by passing in width &amp;height attributes similar to before. One of the biggest problem for iframe is that many big websites(amazon.com etc) have settings preventing other developers to iframe their websites so don’t be too surprised if iframe is not working! 14. Meta tags1234567&lt;head&gt; &lt;meta charset = "utf-8"&gt; &lt;meta name = "description" content="Your description"&gt; &lt;meta name = "author" content = "Name of the author"&gt; &lt;meta name = "keywords" content = "HTML, Blog, what not"&gt; &lt;meta name = "viewport" content ="width=device-width, initial-scale=1.0"&gt;&lt;/head&gt; &lt;meta&gt;tags are in the &lt;head&gt; . They define some key information of your web page. charset defines how your words are encoded. For the other&lt;meta&gt; tags, there are two attributes, the name will tell html what types of meta tags you are defining and content is actually the content inside your meta tags. description gives a short description of your website to help search engines. Normally less than 160 characters. If too long, your website can be disadvantaged in terms of priority in search engine author tells the author of the web page keywords set several keywords to help search engines, are normally ignored these days but still a good practice to fill in. viewport how your website is displayed on different devices like pc, mobile, ipad etc. It can get really complicated, for now just keep in mind using the following statement: content =&quot;width=device-width, initial-scale=1.0&quot; before you become an experienced developer. EndThanks for reading. These notes are abstract from the HTML tutorial videos created by Mike Dane(Giraffe academy). I want to express my thanks to Mike. Awesome videos as always. Make sure to check out his website, contents are absolutely amazing.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python revision notes]]></title>
    <url>%2Fpython_revision%2F</url>
    <content type="text"><![CDATA[Switch data in two variables: a,b = b,a This is something unique to Python. print(variable, end = &quot;&quot;) If we don’t want to skip a line after printing variable. The default value for end attribute is \n(skip a line). When we use comparison operators in Python(&gt;, &lt; etc.). It will always return a Boolean value(True, False) print(1==True);print(0==False) These two statements will always return True. As in Python 1 also means True and 0 also means False. print(0==0.0) will also return True even though they are different data types. There is a special operation symbol which is in. For example, print(“a” in “abc”). This will return True. 3 types of logic order in Python: plain sequence(顺序), loop(循环) and branches(分支). while True will produce an infinite loop. break will terminate one layer of the loop. continue will only skip one element in a loop and don’t affect the remainder elements. range function can take 3 parameters. For example, range(1,10,2) This means a series from 1 to 9 with a step of 2. i.e.1,3,5,7,9 list1.pop(index) removes the element at the index position of the list. If we use list1.pop() and leave it black in brackets. It will drop the last element in the list. print(&quot;111&quot; in list1) If there is a 111 element in list1. It will return True, otherwise, it will return False. If we want to drop a list, use del list1. If we print(list1) afterwards, it will return an error. If we want to drop all elements in a list, use list1.clear(). If we print(list1) afterwards, it will return [] list1.index(element,start,end) passing in start and end, Python will search element within that range. If element isn’t in the range, an error will show up. We could use list1.find(element,start,end). If element is also not in that range, Python will return -1 rather than an error. There are two types of functions in Python. The first type .sort(), for example, it starts with a . It means that this function links to the data type before . The second type sorted(), for example, all these types of function are Python’s internal function, they do not related to the input data type. Enumerate() function： 123list1 = [“spring”,”summer”,”autumn”,”winter”]for index, content in enumerate(list1):print(index,content) This will return: 0 &quot;spring&quot; 1 &quot;summer&quot; 2 &quot;autumn&quot; 3 &quot;winter&quot; This function are fairly convenient when tackling algorithm questions. Create a list with ten 0 elements : list1 = [0]*10 This is unique to Python as well Create a 3*3 matrix filled with 0: 1234list1 = []for i in range 3: list1.append([0]*3) List comprehension(列表推导)： numerical: 12list1 = [1,2,3]print([i*3 for i in list1]) This will return [3,6,9] Logical: 12list1 = [1,2,3,4,5]print([i for i in list1 if i%2 == 0]) This will only print out even numbers so we get [2,4] as expected Mixing numerical and logical 12list1 = [1,2,3,4,5]print([i*2 for i in list1 if i%2 == 0]) This will return even numbers in the list and multiply their values by 2 so we got [4,8] as expected. Elements within dictionary have no order in Python. All keys need to be unique, if we have two values with the same key, the value which shows up later will overwrite the former. dictionary.keys() will collect all keys and return a list. dictionary.values() will collect all values and return a list. dictionary.items() This will collect both keys and values made up tuples in a list. We normally use it in the following format: 123dictionary = &#123;1:"one",2:"two",3:"three",4:"four"&#125;for i,j in dictionary.items(): print(i,j) This will return: 1, &quot;one&quot;, 2, &quot;two&quot;, 3, &quot;three&quot;, 4, &quot;four&quot; Drop an element from a dictionary: dictionary.pop(key) The value with the key in the bracket will be removed .append() has a low algorithm complexity while .insert() and .index() have high algorithm complexity List slicing: 12list1 = [‘aaa’, ‘bbb’, ‘ccc’, ‘ddd’, ‘eee’]print(list1[1:3]) This will give &quot;bbb&quot; &amp; &quot;ccc&quot; 12list1 = [‘aaa’, ‘bbb’, ‘ccc’, ‘ddd’, ‘eee’]print(list1[1:]) This will give &quot;bbb&quot;, &quot;ccc&quot;, &quot;ddd&quot; &amp; &quot;eee&quot; 12list1 = [‘aaa’, ‘bbb’, ‘ccc’, ‘ddd’, ‘eee’]print(list1[:3]) This will give &quot;aaa&quot;, &quot;bbb&quot; &amp; &quot;ccc&quot; 123list1 = [‘aaa’, ‘bbb’, ‘ccc’, ‘ddd’, ‘eee’]print(list1[:-1])print(list1[:4]) Results returned from the two print operations are the same which will both give &quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot; &amp; &quot;ddd&quot; We may pass in three parameters when slicing. list1[start,end,step] A good and smart example: print(list1[::-1]) This operation will reverse the list and is equivalent to .reverse(). Let me quickly explain: The first : means starting from the end(right), -1 means moving to the left by one element every time. The second : means finishing at the end but won’t include the last element. 12list2 = [0,1,2,3,4,5,6,7,8,9,10]print(list2[0:len(list2):2] This will give all even numbers: &quot;0&quot;, &quot;2&quot;, &quot;4&quot;, &quot;6&quot;, &quot;8&quot; &amp; &quot;10&quot; When we input a negative step parameter, we must make sure the value of start parameter is greater than end parameter otherwise Python will return a []. Let’s say list2[-9:-6:-1], Python will take away 1 from -9 every time and try to achieve -6. Clearly, there is no way to get -6 by taking away 1s from -9 so we get []. In addition, Python don’t think list2[-1] is equivalent to list2[-12] :( set(集合): if we write {} in Python, by default, it will be treated as a dictionary. Elements in a set has no order, the order of the elements changed every time we print. Unless, all elements are int, they will be shown in descending order but we still can’t do index operation. set1.add() Add an extra element. set1.remove(element name) Remove an element by the element name. set1.pop() Remove the FIRST element from the set, we CANNOT pass in a index in the bracket. set operations： 1234set1 = &#123;1,2,3&#125;set2 = &#123;2,3,4&#125;set3 = &#123;1,2,3,4&#125;print(set1-set2) This will give the difference set(差集). In other words, all elements within set1 but are not in set2. We get 1 here as expected. 1234set1 = &#123;1,2,3&#125;set2 = &#123;2,3,4&#125;set3 = &#123;1,2,3,4&#125;print(set1|set2) This will give the union(合集). We get 1, 2, 3 &amp; 4 here as expected. 1234set1 = &#123;1,2,3&#125;set2 = &#123;2,3,4&#125;set3 = &#123;1,2,3,4&#125;print(set1^set2) This will give the complementary set(补集). We get 1 &amp; 4 here as expected. 1234set1 = &#123;1,2,3&#125;set2 = &#123;2,3,4&#125;set3 = &#123;1,2,3,4&#125;print(set1&amp;set2) This will give the intersection set(交集). We get 2 &amp; 3 here as expected. 1234set1 = &#123;1,2,3&#125;set2 = &#123;2,3,4&#125;set3 = &#123;1,2,3,4&#125;print(set1&lt;set2) If set1 is a subset(子集) of set2, we will get True , otherwise we will get False. we get False here as expected. 1234set1 = &#123;1,2,3&#125;set2 = &#123;2,3,4&#125;set3 = &#123;1,2,3,4&#125;print(set1&lt;set3) We get a True here as expected. Use set1.update(set2) to add all elements in set2 into set1. We could give variables in a function default values when defining:def fun(a=3,b): We can either pass in one variable or two variables when calling the function. Criteria: variables with default values must be placed in front of variables without default values. See the example below: 123def trial(a,b,c): print(f"&#123;a&#125;;&#123;b&#125;;&#123;c&#125;")trial(b=2,a=1,c=3) It is a good practice to passing in values of variables using this method as ORDER is not important in the above case. If we want to pass in multiple values for a parameter, we could add a * before the variable name. See the example below: 1234def trial(*args): for i in args: print(i)trial(1,2,"Oscar",[1,2,3]) It is equivalent to passing in a tuple(1,2,&quot;Oscar&quot;,[1,2,3]) to args. If we want the values we passed in for a parameter to be treated as a dictionary, we could add a ** before the variable name. See the example below: 12345def trial(**kwargs): for i,j in kwargs.items(): print(i) print(j)trial(name = "oscar", age = 19, gender = "M") This is equivalently to passing {&quot;name&quot;:&quot;oscar&quot;,&quot;age&quot;:19,&quot;gender&quot;:&quot;M&quot;} to kwargs. 12345def fun(): result = "Hello world" return resultprint(type(fun))print(type(fun())) For type(fun), Python will return &lt;class &#39;function&#39;&gt;. This is because we are printing out the type of the function and of course the answer will be function. In terms of type(fun()), we are calling the function and we are actually printing out the type of the returned value i.e. type of result variable. That’s why we get &lt;class &#39;str&#39;&gt; Decorator(装饰器): add some codes to a function without changing the source code of the function. There multiple ways of achieving this. Define a new function and call the old function inside the new function 12345def greet_user(): print("Hello")def re_greet_user(): greet_user() print("world!") Define a new function and pass in the old function as a parameter 12345def greet_user(): print("Hello")def re_greet_user(func): func() print("world") We need to be crystal clear that we are passing in the old function as a parameter so there is no bracket. The function is called inside the new function. Define an inner function inside the new function so the user has a feeling we are still using greet_user which is the old function. 1234567891011121314def greet_user(): print("Hello") #define the old function def decorate_show(func): def inner(): func() print("world") #define the inner function that will print "Hello world" return inner #The decorate_show function will return the inner funciton. greet_user = decorate_show(greet_user) #call decorate_show#greet_user variable is now equal to the inner with old greet_user as func.greet_user() #Call the new greet_user If we need parameters for func(), make sure to pass it in at def inner(A,B):. This is basically the theory behind the decorator The final version, it is actually using the same theory as the third method but looks nicer. 123456789def decorate_show(func): def inner(): func() print("world") return inner@decorate_showdef great_user(): print("Hello") We simply put @decorate_function_name at the line above the function we wish to decorate. To make it easier to read, we can simply replace func() by great_user(). This is really significant as we haven’t touched the source code of the original function. Besides, we can add extra codes dynamically, no need to write everything at the start. If we want to ignore escape characters(转义字符), we can put r before the &quot; of a string. See the example: print(r”Hello\nworld”) These characters will be print out directly, no new line will be created. str1.lower() convert every character in a string to the lower case. str1.upper() convert every character in a string to the upper case. str1.title() convert the initial character of EVERY WORD in a string to the upper case. str1.capitalize() convert the initial character of the FIRST WORD in a string to the upper case. print(str1.center(20, “*”)) This means put str1 in the middle. If its length is shorter than 20 characters, * will be used to fill the remainder. Similarly, we have str1.ljust(20, “*”) and str1.rjust(20, “*”). The difference is where str1 will be placed(left, right or middle) in the new string. str1.count(sub,start,end) give how many times sub appears in str1 within the start, end range. By leave start and end parameters away, Python will search the whole string. str1.index(sub,start,end) search from the left and return the position where sub first time appears within the start, end range. If sub isn’t found, an error will appear. str1.rindex(object,start,end) Do the very similar but start searching from the right. str1.endswith(“xxx”) return True if str1 ends with “xxx”, otherwise False. str1.startswith(“xxx”) return True if str1 starts with “xxx”, otherwise False. str1.isalpha() return True if every character in str1 in a letter, otherwise False. It is a powerful tool for filtration when using with the for loop. See the example below. 1234str1 = "a1b2c3d4"for i in str1: if i.isalpha() == True: print(i, end = "") Similarly, we have str1.isdigit(). It will return True, if every character in str1 in a number, otherwise False. str1.isspace() return True if every character in str1 is a space, otherwise False. May also be used for filtration. str1.strip() If str1 starts with a space, that space will be removed. str1.lstrip() If str1 ends up with a space, that space will be removed. str1.replace(old,new,times) If the old string appears in str1, it will be replaced by new. By default, this operation will keep going until no old string is in str1 any more. We may limit the times this operation is called, by passing in a times parameter. str1.split(&quot;a&quot;) str1 will be separated into two pieces every time there is &quot;a&quot;. See the example, 12str1 = "bbbacccadddaeee"print(str1.split("a")) This will return [bbb,ccc,ddd,eee] str1.splitlines() str1 will be separated into two pieces every time there is &quot;\n&quot;. list1.join() Every element inside list1 will be attached together and make up a string If we have a list of values and we want to find its mean, we can use the statistics package. 12from statistics import meanprint(mean([1,2,5,7,9,8])) We can also find median(中位数), mode(众数) and variance(方差) exact the same way just by replacing mean in the statements above. If another file2.py file is in the same folder as the file1.py we are currently running. We can use import file2 to import it directly. If not we can use either the absolute address or the relative address. print(dir(variable_name)) We can print out all functions that may be applied to this variable(data type) If we do print(dir(package_name)), we can print out all functions that are inside that package. pip list show all packages that we have installed pip install install a package ​ pip uninstall uninstall a package print(os.getcwd()) give the absolute address of the file we are currently running. os.makedirs(“folder name”) Create a new folder, will return an error if already exists. os.removedirs(“Folder name”) Remove an empty folder, will report an error if there is any content inside. print(os.listdir()) Print all documents in the current folder. os.remove(“filename”) Remove a file os.chdir(“address”) It is just like the cd operation in the cmd os.curdir() return to the folder where current .py file is located. If we .read(), .readlines() or .readline() a file in a+ and w+ mode, nothing will be returned. This is because w+ will clear the file by default before the read operation. a+ will move the cursor to the end of the text to get ready for the appending operation. A way to fix it is by using file.seek(0,0) to move the cursor back to the start of the file. Another method to open a file so we don’t need to close it 12with open(“filename”, “r”, encoding = ) as file: content = file.read() Combining two list1 into a dictionary: dict(zip(list_keys,list_values))]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mysql basics]]></title>
    <url>%2FMysql_basics%2F</url>
    <content type="text"><![CDATA[Database(DB): Any collection of related information that can be stored in different ways. Database management system(DBMS): software used to manage data in the database. C.R.U.D: Create Read Update Delete Relational databases(SQL): organize data onto one or more tables similar to Excel. Non-relational databases(no SQL): Everything but not SQL like JSON,XML etc. SQL(Structured Query Language): standard language interacts with DBMS to perform C.R.U.D operations. Database queries: requests made to the DBMS for specific information, in other words, asks the database for specific pieces of information There is always a primary key to a table, each row has its own primary key. A row may also have a foreign key which leads to a primary key to a different table. This foreign key will help us link with other tables. A certain row may have multiple foreign keys. A foreign key may also lead to a different row in the same table Composite key: a key made up of multiple columns i.e. multiple attributes. We need composite keys because sometimes one column can’t define a primary key without repeating so we need multiple columns as the key. SQL language is the compound of a series of languages as followed: Data Query Language(DQL), Data Definition Language(DDL), Data Control Language(DCL) and Data Manipulation Language(DML) Queries: a set of instructions given to DBMS to obtain the information you want to retrieve. Data type: INT: integer; DECIMAL(M,N): M means the total number of significant digits; N means the number of digits you want to keep after the decimal place; VARCHAR(L): L means the length of the string; BLOB: binary a large object, a structure can store large amount of binary data; DATE: YYYY-MM-DD; TIMESTAMP: YYYY-MM-DD HH-MM-SS normally used to record time People normally write reserved words in SQL in capital letters such as CREATE TABLE Create columns: 123456CREATE TABLE student(student_id INT,name VARCHAR(20),major VARCHAR(20),PRIMARY KEY(student_id)); CREATE TABLE: reserved words student: table name student_id, name, major: column name INT,VARCHAR(): datatype PRIMARY KEY(): reserved words, put the column name inside brackets. Make sure to end the line with ; DESCRIBE student; This command will give some basic information about the table. We can modify the structure of the table after created. DROP TABLE student; Delete the whole table student ALTER TABLE student ADD gpa DECIMAL(3,2); Add an extra column ALTER TABLE student DROP COLUMN gpa; Remove a column from the list name VARCHAR(20) NOT NULL When creating a table we may put NOT NULL after the column name so data in this column can’t be NULL. Similarly, we could also put UNIQUE, which means that all data must be unique in that table The primary key must be both NOT NULL and UNIQUE. major VARCHAR(20) DEFAULT &#39;undecided&#39; We could set a default value to certain columns We could also set the value to be AUTO_INCREMENT, which may be quite useful for the primary key, simply do student_id INT AUTO_INCREMENT. Inserting data: 1INSERT INTO student VALUES(1,&quot;Jack&quot;,&quot;Biology&quot;); INSERT: reserved word to put data into the table INTO: reserved word student: table name VALUES(): reserved word, there are three parameters in the bracket. One for each column. We may put NULL in the bracket and it is equivalent to not being filled. SELECT * FROM student This command will print out all data from the table. INSERT INTO student(student_id, name) VALUES(2,&quot;Kate&quot;); If we only want to fill in data in two columns rather than all three. We could put a bracket after table name and fill in column names that we wish to fill and leaving the unfilled ones NULL. Unless DEFAULT, AUTO_INCREMENT etc. are used. &lt;&gt; means not equal in MySQL. Update data: 123UPDATE studentSET major = &quot;Bio&quot;WHERE major = &quot;Biology&quot;; UPDATE: reserved word for changing data SET: reserved word for setting new data WHERE: reserved word to filter the part of data we want to change Similarly, lines below will set gpa to be 4.0 at the row with student_id = 1 123UPDATE studentSET gpa = 4.0WHERE student_id = 1; For the WHERE command, we can make it more complex by using OR, AND etc statements. We can also change multiple columns in one line using SET. See below. 123UPDATE studentSET gpa = 4.0, name = &apos;Oscar&apos;WHERE student_id = 1; Delete data: 12DELETE FROM studentWHERE name = &quot;Tom&quot; AND major = &quot;undecided&quot; The operation above will delete a certain row according to the WHERE condition. Without WHERE, all rows will be deleted. Basic query: SELECT * FROM student; We already know the query above will give us all the data in the table. SELECT: reserved word, tell SQL we want to get some information from the database. We can get data from certain column(s) by filling its name after SELECT, see below. 1SELECT student_name, student_subject FROM student; The line below is equivalent to the line above, using student.student_id &amp; student.student_subject but make your language more precise. 1SELECT student.student_name,student.student_subject FROM student; We may also order the data obtained simply using reserved word ORDER BY + column name. By default it is ascending, we can make it descending by adding DESC after the column name. 123SELECT student.name, student.majorFROM studentORDER BY name; We could also fill multiple column names after ORDER BY. In the case below, if major is the same, student_id will be used for ranking. 123SELECT *FROM studentORDER BY major, student_id; If we only want a certain number of results, we can add an extra line LIMIT 2 so we will only get the top 2 results in the list. 1234SELECT *FROM studentORDER BY major, student_idLIMIT 2; Filter operation can be done by using WHERE, similar to the operation used in the update data section. In this case, we only print out student information who is doing Biology 123SELECT *FROM studentWHERE major = &quot;Biology&quot;; If we want to add comments in MySQL use -- at the start of the line IN 123SELECT *FROM studentWHERE name IN (&quot;Claire&quot;, &quot;Kate&quot;, &quot;Mike&quot;); Another thing you can put after WHERE is IN (reserved word). Very similar to Python, which means return all data in the name column which are in the list of [Claire, Kate, Mike]. You can also connect other statements for filtration using AND, OR etc. Creating a foreign key when creating a table: 12FOREIGN KEY(column_name) REFERENCES table_name(column_name)ON DELETE SET NULL; For the column we REFERENCES to, it must be the primary key. We will always put ON DELETE SET NULL or ON DELETE CASCADE when creating a foreign key, this will make our lives a lot easier and I will explain it a bit later. Add foreign key after a table is created: 1234ALTER TABLE employeeADD FOREIGN KEY(branch_id)REFERENCES branch(branch_id)ON DELETE SET NULL; This is faily commonly used as we can’t reference foreign key to another table before the other table is created first. Don’t forget ON DELETE SET NULL Set a composite primary key: Simply use PRIMARY KEY(column1,column2)when creating a table A primary key may also be A foreign key. VERY VERY IMPORTANT!!!!! If we want to set foreign keys reference to a different form. It is very likely that the second form has not been created. If we still set foreign keys, no wonder there will be an error. What we should do is to set elements in the foreign key column to be NULL. Create the second table first, then UPDATE, SET elements in the foreign key column. It is kinda like a circular procedure. 当我们向有foreign key的表格中插入内容时 要考虑一个问题， 就是这个foreign key指向的表格的内容很可能还没有被输入 这时就会报错 我们要做的就是把这些foreign key 的值先写成NULL 待指向的表格的内容输入后 再进行UPDATE We can temporarily change the returned column names by using AS: 12SELECT fitst_name AS forename, last_name AS surnameFROM employee; Column names are forename &amp; surname now instead of first_name &amp; last_name. If we want to get rid of repeated elements in a column we can use DISTINCT. 1SELECT DISTINCT branch_id FROM employee; Internal functions: 12SELECT COUNT(emp_id)FROM employee; This COUNT function will count how many elements appeared in the emp_id column and return an INT value. If one of the element is NULL, it won’t be counted as it stands for no value. 123SELECT COUNT(emp_id)FROM employeeWHERE sex = &quot;F&quot; AND birth_date &gt; &apos;1970-01-01&apos;; Various operations can be achieved using COUNT in together with WHERE. The example above can help us find how many female employees are born after 1970-1-1. Be careful, 1970-01- 01 is another datatype: DATE. 123SELECT AVG(salary)From employeeWHERE sex = &quot;M&quot;; Another function we may use is AVG, which will return the mean of elements in the column selected. Here, we are finding the mean salary of male employees. 12SELECT SUM(salary)FROM employee; SUM function we give us the numerical sum of elements we selected from the database. Aggregation(聚合): GROUP BY is a powerful tool, we could put a column name afterwards and repeated elements in that column will be treated together as a group. 123SELECT COUNT(sex), sexFROM employeeGROUP BY sex; Here we want to find out the number of male and female employee respectively. GROUP BY is suitable here as it put all elements with sex =&quot;M&quot; together in a group and sex = &quot;F&quot; together in a different group. 123SELECT SUM(total_sales), emp_idFROM works_withGROUP BY emp_id; Similarly, we can find the sum of sales of each employee using GROUP BY Wildcard(通配符): % means any number of characters _ means one character. It is similar to regular expressions in other programming languages(正则表达式). In other words, wildcard means using % and _ to describe a general pattern to help us filter result. 123SELECT * FROM clientWHERE clien_name LIKE &quot;%LLC&quot; The example above has a new reserved word LIKE. A statement is followed by, which will describe a general pattern. Here ‘%LLC’ means there can be any number of words before &quot;LLC&quot; and the word needs to end up with &quot;LLC&quot;. If the statement is satisfied. The result will be returned, otherwise filtered.​ Another wildcard example: %Label%. This means the statement is satisfied as long as the VARCHAR contains a subsection &quot;Label&quot; Union: combine several SELECT results together(union columns together). This links two or multiple SELECT statements. 12345SELECT first_nameFROM employeeUNIONSELECT branch_nameFROM branch; Criteria: In order to successfully UNION multiple SELECT statements, each SELECT must have the same number of columns, otherwise there will be an error. We also need the datatype returned from each SELECT to be similar. If they are really different, there are likely to be an error as well. JOIN: combine rows from two or more tables based on related columns(foreign keys) 1234SELECT employee.emp_id, employee.first_name, branch.branch_nameFROM employeeJOIN branchON employee.emp_id = branch.mgr_id; The example above SELECT columns from different tables. FROM: reserved words(first table) JOIN: reserved words(second table) ON: reserved words, it tells MySQL, on what basis, rows should be joined together. In other words, if and only if employee.emp_id = branch.mgr_id, should rows from different tables join together. There is a second type called LEFT JOIN: 1234SELECT employee.emp_id, employee.first_name, branch.branch_nameFROM employeeLEFT JOIN branchON employee.emp_id = branch.mgr_id; Every row in the FROM employee table will be shown. For the branch.branch_name, it will only join to the left table if ON condition is met, otherwise, its value will be NULL. There is also an opposite type of operation, which is RIGHT JOIN. It does exactly the opposite. Each row in the RIGHT JOIN table will be shown and rows in the FROM table will join only if ON condition is met, otherwise, it will be NULL Nested enquiry: We can use result from one query to filter data in another query. See the example below. It is like cascading the result of one enquiry into the other. 123SELECT works_with.emp_idFROM works_withWHERE works_with.total_sales &gt; 30000; Here, we find out employee id of employees whose salary exceeds 30k. What we can do is to put the statements above into another query as followed 1234567SELECT employee.first_name, employee.last_nameFROM employeeWHERE employee.emp_id IN( SELECT works_with.emp_id FROM works_with WHERE works_with.total_sales &gt; 30000;); The part indented return a list ofemployee_id. WHERE filters ID that is not in the list so we only print out names of employees whose salary exceeds 30K. This is a useful method when handling data in different tables. In terms of the indent above, it is not necessary but makes readers easy to read. On Delete: how can we delete an element when it is associated with a foreign key. We already meet it before, remember when we set foreign key, we put an extra line which is ON DELETE SET NULL/ON DELETE CASCADE. That is what we are going to talk about now. ON DELETE SET NULL: means when we delete the primary key where the foreign key may lead to, this foreign key will automatically become NULL so there will be no error. ON DELETE CASCADE: will delete the entire row where the foreign key located instead of setting it to NULL. When the foreign key is also a primary key, we must use ON DELETE CASCADE because primary key can’t be NULL. Otherwise, we are free to choose between the two. EndThanks for reading. These notes are abstract from the MySQL tutorial created by Mike Dane(Giraffe academy). Tables used as the demo in the tutorial can be found here. I want to express my thanks to Mike. Awesome videos as always. Make sure to check out his website, contents are absolutely amazing.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python basics]]></title>
    <url>%2Fpython_basics%2F</url>
    <content type="text"><![CDATA[\n will create a new line in a string. print(&quot;apple\npear&quot;) string.lower() will change every character in a string to lower cases. string.upper() will change every character in a string to upper cases. len(string) will return the length of the string. string[3] will could index a string(start from zero) string.index(A) will return the position where A first time appear in the string. If A is consisted of multiple characters, it will return the position of the first character in A. If A can’t be found in the string, you will get an error string.find(A) very similar to .index(A). The difference is that if we couldn’t find A in the string, it will return -1 instead of an error. string.replace(old,new,times) The old parameter inside the string will be replaced by the new parameter. Without specify times, all old substring will be replaced by new. We may only want to replace old substring certain number of times, simply fill in the times parameter. * means multiply in Python. ** means exponential. We can also use pow(A,B) which stands for A to the power of B. % will return the remainder of the division. 1// means division and round down the answer. Remainder: print(5//2) will return 2 while print(-5//2) will return -3. type(A) will return the data type of A. max(A,B,C) will return the greatest numerical value in A,B,C. min(A,B,C) does exactly the opposite. round(A) will help us rounding A. i.e. 5.4 becomes 5 and 4.7 becomes 5. list1[0] A list can be indexed. [-1] will return the last element in the list, [-2] will return the second last element etc. [1:] will give all elements include and after position 1. [1:3] will return elements at position 1 &amp; 2 but won’t include 3(左闭右开). list1[1] = new_value We can re-define an element value inside a list using this method. name = [&quot;Oscar&quot;, &quot;Jack&quot; , &quot;Michael&quot;] number = [3,5,6,7] . If we want to combine these two lists, we could use name.append(number). This will return [&quot;Oscar&quot;, &quot;Jack&quot; , &quot;Michael&quot;,[3,5,6,7]]. In other words, adding a list into a list. We can also do name.extend(number). This will return [&quot;Oscar&quot;, &quot;Jack&quot; , &quot;Michael&quot;,3,5,6,7] 18 . Adding an element to a certain position in a list, we could use list1.insert(A,B). This means we want to put B(element) at position A. list1.remove(A) remove A(element) from the list. list1.pop() remove the last element from the list. list1.count(A) count how many times A(element) appears in a list. list1.sort() sort the list in default ascending order(numerical,alphabet). If we want to sort in descending order, use list1.sort(reverse = True). list1.reverse() This will reverse the order of the list. tuple1 = (A,B,C) use a small bracket to define. Its value can’t be changed once defined. We can have a list of tuples [(1,2),(3,4),(8,9)] if statement: the condition after if must be either True or False. Further Boolean algebra can be applied: or, and, nor etc. != means not equal in python dictionary1 = {key:value} In other words, key-value pairs are used to define a dictionary There are two ways of getting values in the dictionary. result=dictionary1[key]. This method will return an error if the key doesn’t exist. result=dictionary.get(key,default_value) If the key doesn’t exist, it will return None. We may also fill in a default value(optional) which will only be returned if the key doesn’t exist. While loop will keep running until the condition afterwards becomes False. Get out of one loop: break A string can be sliced. See the example. 12for i in “Love”: print(i) This will return “l”,”o”,”v”,”e” for i in range(3) means from 1 to 3 excluding 3. i.e. 1,2 We can put lists inside a list to make it a 2D(3D) array. 123list1 = [[1,2,3], [4,5,6], [7,8,9]] We can easily slicing the array bylist1[1][2]. This means obtaining the data at row 1 and column 2. We have 6 in this case. Nasty for means: cascading for loops. Here, we can have: 123456list1 = [[1,2,3], [4,5,6], [7,8,9]]for row in list1: for column in rows: pass Know what I mean, makes the logic really clear. A really beautiful example applying for loops, successfully solve the problem without cascading for loops. Problem: replace a(A), e(E), i(I), o(O), u(U) in a word by g(G). 1234567891011def translate(phrase): translation = "" for letter in phrase: if letter.lower() in "aeiou": if letter.isupper(): translation = translation + "G" else: translation = translation + "g" else: translation = translation + letter return translation try&amp; except method 1234try: In=int(input("Fill in the answer"))except: Print("Invalid input, not an integer") Here, if the input isn’t an integer, an error will show up. By using try, except method, operations in except will run if and only if there is an error. We can also specify the type of error after expect, refer to the example below. 123456try: answer = 10 / int(input("Enter Number: "))except ZeroDivisionError as e: print(e)except: print("Caught any exception") If the input is zero, it will print out the error type in except because we only specified ZeroDivisionError. For any other types of errors, it will print out caught any exception. We can also specify other types of error such as ValueError etc. text = open(“filename.txt”, “mode”) Modes we have: “r”: read; “w”: overwrite existing file; “a”: append; “r+”: read &amp; overwrite, “a+”: read &amp; append; “b”: read the text in binary Make sure to close the file using text.close()once opened a file. To read all the content, using text.read() To read a certain line, use text.readline(). This will read the first line when we run it for the first time and read the second line when we run it for the second time etc. Also,we could use text.readlines(). This will put every line in a list, we could fetch any line using the index method. If we want to write(append) a file, make sure to change “r” into &quot;w&quot;(&quot;a&quot;) Using :text.write(“Whatever you want to add”) By creating a new class, we are actually creating a new datatype in some ways. When we use a class, we need to instantiate the class like oscar = Student(). oscar here is no longer a class instead it becomes an object. Inheritance: We can create a new class that contains all the functions and the attributes in the old class. Quick demo: class New(Old). I will write a separate note to introduce it in detail. If we want to change a float(decimal) to a fraction using the method below: 12from fractions import Fractionprint(str(Fraction(0.25))) ​ This will return &quot;1/4&quot; EndThanks for reading. These notes are abstract from the Python introduction course created by Mike Dane(Giraffe academy). I want to express my thanks to Mike. Awesome videos as always. Make sure to check out his website, contents are absolutely amazing.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
